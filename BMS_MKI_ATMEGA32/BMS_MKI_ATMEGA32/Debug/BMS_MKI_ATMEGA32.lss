
BMS_MKI_ATMEGA32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000011c6  0000125a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  0080006a  0080006a  00001264  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001264  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001294  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  000012d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d09  00000000  00000000  00001520  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000814  00000000  00000000  00003229  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012d1  00000000  00000000  00003a3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000091c  00000000  00000000  00004d10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d5c  00000000  00000000  0000562c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002165  00000000  00000000  00006388  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000240  00000000  00000000  000084ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__vector_1>
       8:	0c 94 11 04 	jmp	0x822	; 0x822 <__vector_2>
       c:	0c 94 3d 04 	jmp	0x87a	; 0x87a <__vector_3>
      10:	0c 94 2a 03 	jmp	0x654	; 0x654 <__vector_4>
      14:	0c 94 01 03 	jmp	0x602	; 0x602 <__vector_5>
      18:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__vector_6>
      1c:	0c 94 af 02 	jmp	0x55e	; 0x55e <__vector_7>
      20:	0c 94 86 02 	jmp	0x50c	; 0x50c <__vector_8>
      24:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__vector_9>
      28:	0c 94 34 02 	jmp	0x468	; 0x468 <__vector_10>
      2c:	0c 94 0b 02 	jmp	0x416	; 0x416 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 b8 01 	jmp	0x370	; 0x370 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ec       	ldi	r30, 0xC6	; 198
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a3 39       	cpi	r26, 0x93	; 147
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 b8 06 	call	0xd70	; 0xd70 <main>
      8a:	0c 94 e1 08 	jmp	0x11c2	; 0x11c2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <BMS_voidPeriodicallyDisplayReading>:
	// I = (V - 2.5) / sensitivity;
	Local_f32InputValue = ((Local_f32AnalogValue - 2.5) / ACS712_SENSITIVITY);
	
	/**Return in mA*/
	return Local_f32InputValue;
}
      92:	08 95       	ret

00000094 <DIO_voidSetPinDirection>:
      94:	84 30       	cpi	r24, 0x04	; 4
      96:	08 f0       	brcs	.+2      	; 0x9a <DIO_voidSetPinDirection+0x6>
      98:	72 c0       	rjmp	.+228    	; 0x17e <DIO_voidSetPinDirection+0xea>
      9a:	68 30       	cpi	r22, 0x08	; 8
      9c:	08 f0       	brcs	.+2      	; 0xa0 <DIO_voidSetPinDirection+0xc>
      9e:	6f c0       	rjmp	.+222    	; 0x17e <DIO_voidSetPinDirection+0xea>
      a0:	42 30       	cpi	r20, 0x02	; 2
      a2:	08 f0       	brcs	.+2      	; 0xa6 <DIO_voidSetPinDirection+0x12>
      a4:	6c c0       	rjmp	.+216    	; 0x17e <DIO_voidSetPinDirection+0xea>
      a6:	81 30       	cpi	r24, 0x01	; 1
      a8:	01 f1       	breq	.+64     	; 0xea <DIO_voidSetPinDirection+0x56>
      aa:	30 f0       	brcs	.+12     	; 0xb8 <DIO_voidSetPinDirection+0x24>
      ac:	82 30       	cpi	r24, 0x02	; 2
      ae:	b1 f1       	breq	.+108    	; 0x11c <DIO_voidSetPinDirection+0x88>
      b0:	83 30       	cpi	r24, 0x03	; 3
      b2:	09 f4       	brne	.+2      	; 0xb6 <DIO_voidSetPinDirection+0x22>
      b4:	4c c0       	rjmp	.+152    	; 0x14e <DIO_voidSetPinDirection+0xba>
      b6:	08 95       	ret
      b8:	41 30       	cpi	r20, 0x01	; 1
      ba:	59 f4       	brne	.+22     	; 0xd2 <DIO_voidSetPinDirection+0x3e>
      bc:	2a b3       	in	r18, 0x1a	; 26
      be:	81 e0       	ldi	r24, 0x01	; 1
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <DIO_voidSetPinDirection+0x34>
      c4:	88 0f       	add	r24, r24
      c6:	99 1f       	adc	r25, r25
      c8:	6a 95       	dec	r22
      ca:	e2 f7       	brpl	.-8      	; 0xc4 <DIO_voidSetPinDirection+0x30>
      cc:	82 2b       	or	r24, r18
      ce:	8a bb       	out	0x1a, r24	; 26
      d0:	08 95       	ret
      d2:	2a b3       	in	r18, 0x1a	; 26
      d4:	81 e0       	ldi	r24, 0x01	; 1
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	02 c0       	rjmp	.+4      	; 0xde <DIO_voidSetPinDirection+0x4a>
      da:	88 0f       	add	r24, r24
      dc:	99 1f       	adc	r25, r25
      de:	6a 95       	dec	r22
      e0:	e2 f7       	brpl	.-8      	; 0xda <DIO_voidSetPinDirection+0x46>
      e2:	80 95       	com	r24
      e4:	82 23       	and	r24, r18
      e6:	8a bb       	out	0x1a, r24	; 26
      e8:	08 95       	ret
      ea:	41 30       	cpi	r20, 0x01	; 1
      ec:	59 f4       	brne	.+22     	; 0x104 <DIO_voidSetPinDirection+0x70>
      ee:	27 b3       	in	r18, 0x17	; 23
      f0:	81 e0       	ldi	r24, 0x01	; 1
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_voidSetPinDirection+0x66>
      f6:	88 0f       	add	r24, r24
      f8:	99 1f       	adc	r25, r25
      fa:	6a 95       	dec	r22
      fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_voidSetPinDirection+0x62>
      fe:	82 2b       	or	r24, r18
     100:	87 bb       	out	0x17, r24	; 23
     102:	08 95       	ret
     104:	27 b3       	in	r18, 0x17	; 23
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_voidSetPinDirection+0x7c>
     10c:	88 0f       	add	r24, r24
     10e:	99 1f       	adc	r25, r25
     110:	6a 95       	dec	r22
     112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_voidSetPinDirection+0x78>
     114:	80 95       	com	r24
     116:	82 23       	and	r24, r18
     118:	87 bb       	out	0x17, r24	; 23
     11a:	08 95       	ret
     11c:	41 30       	cpi	r20, 0x01	; 1
     11e:	59 f4       	brne	.+22     	; 0x136 <DIO_voidSetPinDirection+0xa2>
     120:	24 b3       	in	r18, 0x14	; 20
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_voidSetPinDirection+0x98>
     128:	88 0f       	add	r24, r24
     12a:	99 1f       	adc	r25, r25
     12c:	6a 95       	dec	r22
     12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_voidSetPinDirection+0x94>
     130:	82 2b       	or	r24, r18
     132:	84 bb       	out	0x14, r24	; 20
     134:	08 95       	ret
     136:	24 b3       	in	r18, 0x14	; 20
     138:	81 e0       	ldi	r24, 0x01	; 1
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_voidSetPinDirection+0xae>
     13e:	88 0f       	add	r24, r24
     140:	99 1f       	adc	r25, r25
     142:	6a 95       	dec	r22
     144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_voidSetPinDirection+0xaa>
     146:	80 95       	com	r24
     148:	82 23       	and	r24, r18
     14a:	84 bb       	out	0x14, r24	; 20
     14c:	08 95       	ret
     14e:	41 30       	cpi	r20, 0x01	; 1
     150:	59 f4       	brne	.+22     	; 0x168 <DIO_voidSetPinDirection+0xd4>
     152:	21 b3       	in	r18, 0x11	; 17
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	02 c0       	rjmp	.+4      	; 0x15e <DIO_voidSetPinDirection+0xca>
     15a:	88 0f       	add	r24, r24
     15c:	99 1f       	adc	r25, r25
     15e:	6a 95       	dec	r22
     160:	e2 f7       	brpl	.-8      	; 0x15a <DIO_voidSetPinDirection+0xc6>
     162:	82 2b       	or	r24, r18
     164:	81 bb       	out	0x11, r24	; 17
     166:	08 95       	ret
     168:	21 b3       	in	r18, 0x11	; 17
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_voidSetPinDirection+0xe0>
     170:	88 0f       	add	r24, r24
     172:	99 1f       	adc	r25, r25
     174:	6a 95       	dec	r22
     176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_voidSetPinDirection+0xdc>
     178:	80 95       	com	r24
     17a:	82 23       	and	r24, r18
     17c:	81 bb       	out	0x11, r24	; 17
     17e:	08 95       	ret

00000180 <DIO_voidSetPinValue>:
     180:	84 30       	cpi	r24, 0x04	; 4
     182:	08 f0       	brcs	.+2      	; 0x186 <DIO_voidSetPinValue+0x6>
     184:	72 c0       	rjmp	.+228    	; 0x26a <DIO_voidSetPinValue+0xea>
     186:	68 30       	cpi	r22, 0x08	; 8
     188:	08 f0       	brcs	.+2      	; 0x18c <DIO_voidSetPinValue+0xc>
     18a:	6f c0       	rjmp	.+222    	; 0x26a <DIO_voidSetPinValue+0xea>
     18c:	42 30       	cpi	r20, 0x02	; 2
     18e:	08 f0       	brcs	.+2      	; 0x192 <DIO_voidSetPinValue+0x12>
     190:	6c c0       	rjmp	.+216    	; 0x26a <DIO_voidSetPinValue+0xea>
     192:	81 30       	cpi	r24, 0x01	; 1
     194:	01 f1       	breq	.+64     	; 0x1d6 <DIO_voidSetPinValue+0x56>
     196:	30 f0       	brcs	.+12     	; 0x1a4 <DIO_voidSetPinValue+0x24>
     198:	82 30       	cpi	r24, 0x02	; 2
     19a:	b1 f1       	breq	.+108    	; 0x208 <DIO_voidSetPinValue+0x88>
     19c:	83 30       	cpi	r24, 0x03	; 3
     19e:	09 f4       	brne	.+2      	; 0x1a2 <DIO_voidSetPinValue+0x22>
     1a0:	4c c0       	rjmp	.+152    	; 0x23a <DIO_voidSetPinValue+0xba>
     1a2:	08 95       	ret
     1a4:	41 30       	cpi	r20, 0x01	; 1
     1a6:	59 f4       	brne	.+22     	; 0x1be <DIO_voidSetPinValue+0x3e>
     1a8:	2b b3       	in	r18, 0x1b	; 27
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_voidSetPinValue+0x34>
     1b0:	88 0f       	add	r24, r24
     1b2:	99 1f       	adc	r25, r25
     1b4:	6a 95       	dec	r22
     1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_voidSetPinValue+0x30>
     1b8:	82 2b       	or	r24, r18
     1ba:	8b bb       	out	0x1b, r24	; 27
     1bc:	08 95       	ret
     1be:	2b b3       	in	r18, 0x1b	; 27
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_voidSetPinValue+0x4a>
     1c6:	88 0f       	add	r24, r24
     1c8:	99 1f       	adc	r25, r25
     1ca:	6a 95       	dec	r22
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_voidSetPinValue+0x46>
     1ce:	80 95       	com	r24
     1d0:	82 23       	and	r24, r18
     1d2:	8b bb       	out	0x1b, r24	; 27
     1d4:	08 95       	ret
     1d6:	41 30       	cpi	r20, 0x01	; 1
     1d8:	59 f4       	brne	.+22     	; 0x1f0 <DIO_voidSetPinValue+0x70>
     1da:	28 b3       	in	r18, 0x18	; 24
     1dc:	81 e0       	ldi	r24, 0x01	; 1
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_voidSetPinValue+0x66>
     1e2:	88 0f       	add	r24, r24
     1e4:	99 1f       	adc	r25, r25
     1e6:	6a 95       	dec	r22
     1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_voidSetPinValue+0x62>
     1ea:	82 2b       	or	r24, r18
     1ec:	88 bb       	out	0x18, r24	; 24
     1ee:	08 95       	ret
     1f0:	28 b3       	in	r18, 0x18	; 24
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_voidSetPinValue+0x7c>
     1f8:	88 0f       	add	r24, r24
     1fa:	99 1f       	adc	r25, r25
     1fc:	6a 95       	dec	r22
     1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_voidSetPinValue+0x78>
     200:	80 95       	com	r24
     202:	82 23       	and	r24, r18
     204:	88 bb       	out	0x18, r24	; 24
     206:	08 95       	ret
     208:	41 30       	cpi	r20, 0x01	; 1
     20a:	59 f4       	brne	.+22     	; 0x222 <DIO_voidSetPinValue+0xa2>
     20c:	25 b3       	in	r18, 0x15	; 21
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_voidSetPinValue+0x98>
     214:	88 0f       	add	r24, r24
     216:	99 1f       	adc	r25, r25
     218:	6a 95       	dec	r22
     21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_voidSetPinValue+0x94>
     21c:	82 2b       	or	r24, r18
     21e:	85 bb       	out	0x15, r24	; 21
     220:	08 95       	ret
     222:	25 b3       	in	r18, 0x15	; 21
     224:	81 e0       	ldi	r24, 0x01	; 1
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_voidSetPinValue+0xae>
     22a:	88 0f       	add	r24, r24
     22c:	99 1f       	adc	r25, r25
     22e:	6a 95       	dec	r22
     230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_voidSetPinValue+0xaa>
     232:	80 95       	com	r24
     234:	82 23       	and	r24, r18
     236:	85 bb       	out	0x15, r24	; 21
     238:	08 95       	ret
     23a:	41 30       	cpi	r20, 0x01	; 1
     23c:	59 f4       	brne	.+22     	; 0x254 <DIO_voidSetPinValue+0xd4>
     23e:	22 b3       	in	r18, 0x12	; 18
     240:	81 e0       	ldi	r24, 0x01	; 1
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_voidSetPinValue+0xca>
     246:	88 0f       	add	r24, r24
     248:	99 1f       	adc	r25, r25
     24a:	6a 95       	dec	r22
     24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_voidSetPinValue+0xc6>
     24e:	82 2b       	or	r24, r18
     250:	82 bb       	out	0x12, r24	; 18
     252:	08 95       	ret
     254:	22 b3       	in	r18, 0x12	; 18
     256:	81 e0       	ldi	r24, 0x01	; 1
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_voidSetPinValue+0xe0>
     25c:	88 0f       	add	r24, r24
     25e:	99 1f       	adc	r25, r25
     260:	6a 95       	dec	r22
     262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_voidSetPinValue+0xdc>
     264:	80 95       	com	r24
     266:	82 23       	and	r24, r18
     268:	82 bb       	out	0x12, r24	; 18
     26a:	08 95       	ret

0000026c <DIO_voidSetPortDirection>:
     26c:	84 30       	cpi	r24, 0x04	; 4
     26e:	98 f4       	brcc	.+38     	; 0x296 <DIO_voidSetPortDirection+0x2a>
     270:	81 30       	cpi	r24, 0x01	; 1
     272:	49 f0       	breq	.+18     	; 0x286 <DIO_voidSetPortDirection+0x1a>
     274:	28 f0       	brcs	.+10     	; 0x280 <DIO_voidSetPortDirection+0x14>
     276:	82 30       	cpi	r24, 0x02	; 2
     278:	49 f0       	breq	.+18     	; 0x28c <DIO_voidSetPortDirection+0x20>
     27a:	83 30       	cpi	r24, 0x03	; 3
     27c:	51 f0       	breq	.+20     	; 0x292 <DIO_voidSetPortDirection+0x26>
     27e:	08 95       	ret
     280:	8f ef       	ldi	r24, 0xFF	; 255
     282:	8a bb       	out	0x1a, r24	; 26
     284:	08 95       	ret
     286:	8f ef       	ldi	r24, 0xFF	; 255
     288:	87 bb       	out	0x17, r24	; 23
     28a:	08 95       	ret
     28c:	8f ef       	ldi	r24, 0xFF	; 255
     28e:	84 bb       	out	0x14, r24	; 20
     290:	08 95       	ret
     292:	8f ef       	ldi	r24, 0xFF	; 255
     294:	81 bb       	out	0x11, r24	; 17
     296:	08 95       	ret

00000298 <DIO_voidSetPortValue>:
     298:	84 30       	cpi	r24, 0x04	; 4
     29a:	78 f4       	brcc	.+30     	; 0x2ba <DIO_voidSetPortValue+0x22>
     29c:	81 30       	cpi	r24, 0x01	; 1
     29e:	41 f0       	breq	.+16     	; 0x2b0 <DIO_voidSetPortValue+0x18>
     2a0:	28 f0       	brcs	.+10     	; 0x2ac <DIO_voidSetPortValue+0x14>
     2a2:	82 30       	cpi	r24, 0x02	; 2
     2a4:	39 f0       	breq	.+14     	; 0x2b4 <DIO_voidSetPortValue+0x1c>
     2a6:	83 30       	cpi	r24, 0x03	; 3
     2a8:	39 f0       	breq	.+14     	; 0x2b8 <DIO_voidSetPortValue+0x20>
     2aa:	08 95       	ret
     2ac:	6b bb       	out	0x1b, r22	; 27
     2ae:	08 95       	ret
     2b0:	68 bb       	out	0x18, r22	; 24
     2b2:	08 95       	ret
     2b4:	65 bb       	out	0x15, r22	; 21
     2b6:	08 95       	ret
     2b8:	62 bb       	out	0x12, r22	; 18
     2ba:	08 95       	ret

000002bc <sei>:
     2bc:	8f b7       	in	r24, 0x3f	; 63
     2be:	80 68       	ori	r24, 0x80	; 128
     2c0:	8f bf       	out	0x3f, r24	; 63
     2c2:	08 95       	ret

000002c4 <ADC_voidInit>:
     2c4:	87 b1       	in	r24, 0x07	; 7
     2c6:	8f 7b       	andi	r24, 0xBF	; 191
     2c8:	87 b9       	out	0x07, r24	; 7
     2ca:	87 b1       	in	r24, 0x07	; 7
     2cc:	8f 77       	andi	r24, 0x7F	; 127
     2ce:	87 b9       	out	0x07, r24	; 7
     2d0:	87 b1       	in	r24, 0x07	; 7
     2d2:	8f 7d       	andi	r24, 0xDF	; 223
     2d4:	87 b9       	out	0x07, r24	; 7
     2d6:	86 b1       	in	r24, 0x06	; 6
     2d8:	88 7f       	andi	r24, 0xF8	; 248
     2da:	86 b9       	out	0x06, r24	; 6
     2dc:	86 b1       	in	r24, 0x06	; 6
     2de:	86 60       	ori	r24, 0x06	; 6
     2e0:	86 b9       	out	0x06, r24	; 6
     2e2:	86 b1       	in	r24, 0x06	; 6
     2e4:	80 62       	ori	r24, 0x20	; 32
     2e6:	86 b9       	out	0x06, r24	; 6
     2e8:	80 b7       	in	r24, 0x30	; 48
     2ea:	81 71       	andi	r24, 0x11	; 17
     2ec:	80 bf       	out	0x30, r24	; 48
     2ee:	80 b7       	in	r24, 0x30	; 48
     2f0:	80 bf       	out	0x30, r24	; 48
     2f2:	86 b1       	in	r24, 0x06	; 6
     2f4:	80 68       	ori	r24, 0x80	; 128
     2f6:	86 b9       	out	0x06, r24	; 6
     2f8:	08 95       	ret

000002fa <ADC_voidDisableADCInterrupt>:
     2fa:	86 b1       	in	r24, 0x06	; 6
     2fc:	87 7f       	andi	r24, 0xF7	; 247
     2fe:	86 b9       	out	0x06, r24	; 6
     300:	08 95       	ret

00000302 <ADC_voidClearADCInterruptFlag>:
     302:	86 b1       	in	r24, 0x06	; 6
     304:	80 61       	ori	r24, 0x10	; 16
     306:	86 b9       	out	0x06, r24	; 6
     308:	08 95       	ret

0000030a <ADC_voidStartConversion>:
     30a:	86 b1       	in	r24, 0x06	; 6
     30c:	80 64       	ori	r24, 0x40	; 64
     30e:	86 b9       	out	0x06, r24	; 6
     310:	08 95       	ret

00000312 <ADC_u16GetResultSync>:
     312:	97 b1       	in	r25, 0x07	; 7
     314:	90 7e       	andi	r25, 0xE0	; 224
     316:	97 b9       	out	0x07, r25	; 7
     318:	97 b1       	in	r25, 0x07	; 7
     31a:	89 2b       	or	r24, r25
     31c:	87 b9       	out	0x07, r24	; 7
     31e:	0e 94 85 01 	call	0x30a	; 0x30a <ADC_voidStartConversion>
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	dc 01       	movw	r26, r24
     328:	03 c0       	rjmp	.+6      	; 0x330 <ADC_u16GetResultSync+0x1e>
     32a:	01 96       	adiw	r24, 0x01	; 1
     32c:	a1 1d       	adc	r26, r1
     32e:	b1 1d       	adc	r27, r1
     330:	34 99       	sbic	0x06, 4	; 6
     332:	07 c0       	rjmp	.+14     	; 0x342 <ADC_u16GetResultSync+0x30>
     334:	88 38       	cpi	r24, 0x88	; 136
     336:	2d e0       	ldi	r18, 0x0D	; 13
     338:	92 07       	cpc	r25, r18
     33a:	21 e0       	ldi	r18, 0x01	; 1
     33c:	a2 07       	cpc	r26, r18
     33e:	b1 05       	cpc	r27, r1
     340:	a0 f3       	brcs	.-24     	; 0x32a <ADC_u16GetResultSync+0x18>
     342:	88 38       	cpi	r24, 0x88	; 136
     344:	9d 40       	sbci	r25, 0x0D	; 13
     346:	a1 40       	sbci	r26, 0x01	; 1
     348:	b1 05       	cpc	r27, r1
     34a:	79 f0       	breq	.+30     	; 0x36a <ADC_u16GetResultSync+0x58>
     34c:	8f e1       	ldi	r24, 0x1F	; 31
     34e:	9e e4       	ldi	r25, 0x4E	; 78
     350:	01 97       	sbiw	r24, 0x01	; 1
     352:	f1 f7       	brne	.-4      	; 0x350 <ADC_u16GetResultSync+0x3e>
     354:	00 c0       	rjmp	.+0      	; 0x356 <ADC_u16GetResultSync+0x44>
     356:	00 00       	nop
     358:	0e 94 81 01 	call	0x302	; 0x302 <ADC_voidClearADCInterruptFlag>
     35c:	24 b1       	in	r18, 0x04	; 4
     35e:	85 b1       	in	r24, 0x05	; 5
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	98 2f       	mov	r25, r24
     364:	88 27       	eor	r24, r24
     366:	82 2b       	or	r24, r18
     368:	08 95       	ret
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	08 95       	ret

00000370 <__vector_16>:
     370:	1f 92       	push	r1
     372:	0f 92       	push	r0
     374:	0f b6       	in	r0, 0x3f	; 63
     376:	0f 92       	push	r0
     378:	11 24       	eor	r1, r1
     37a:	2f 93       	push	r18
     37c:	3f 93       	push	r19
     37e:	4f 93       	push	r20
     380:	5f 93       	push	r21
     382:	6f 93       	push	r22
     384:	7f 93       	push	r23
     386:	8f 93       	push	r24
     388:	9f 93       	push	r25
     38a:	af 93       	push	r26
     38c:	bf 93       	push	r27
     38e:	ef 93       	push	r30
     390:	ff 93       	push	r31
     392:	e0 91 91 00 	lds	r30, 0x0091	; 0x800091 <ADC_u16ptrADCResult>
     396:	f0 91 92 00 	lds	r31, 0x0092	; 0x800092 <ADC_u16ptrADCResult+0x1>
     39a:	24 b1       	in	r18, 0x04	; 4
     39c:	85 b1       	in	r24, 0x05	; 5
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	98 2f       	mov	r25, r24
     3a2:	88 27       	eor	r24, r24
     3a4:	82 2b       	or	r24, r18
     3a6:	91 83       	std	Z+1, r25	; 0x01
     3a8:	80 83       	st	Z, r24
     3aa:	e0 e0       	ldi	r30, 0x00	; 0
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	09 95       	icall
     3b0:	0e 94 7d 01 	call	0x2fa	; 0x2fa <ADC_voidDisableADCInterrupt>
     3b4:	ff 91       	pop	r31
     3b6:	ef 91       	pop	r30
     3b8:	bf 91       	pop	r27
     3ba:	af 91       	pop	r26
     3bc:	9f 91       	pop	r25
     3be:	8f 91       	pop	r24
     3c0:	7f 91       	pop	r23
     3c2:	6f 91       	pop	r22
     3c4:	5f 91       	pop	r21
     3c6:	4f 91       	pop	r20
     3c8:	3f 91       	pop	r19
     3ca:	2f 91       	pop	r18
     3cc:	0f 90       	pop	r0
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	0f 90       	pop	r0
     3d2:	1f 90       	pop	r1
     3d4:	18 95       	reti

000003d6 <TMR0_voidInit>:
     3d6:	83 b7       	in	r24, 0x33	; 51
     3d8:	8f 7b       	andi	r24, 0xBF	; 191
     3da:	83 bf       	out	0x33, r24	; 51
     3dc:	83 b7       	in	r24, 0x33	; 51
     3de:	87 7f       	andi	r24, 0xF7	; 247
     3e0:	83 bf       	out	0x33, r24	; 51
     3e2:	89 b7       	in	r24, 0x39	; 57
     3e4:	81 60       	ori	r24, 0x01	; 1
     3e6:	89 bf       	out	0x39, r24	; 57
     3e8:	83 b7       	in	r24, 0x33	; 51
     3ea:	8b 7f       	andi	r24, 0xFB	; 251
     3ec:	83 bf       	out	0x33, r24	; 51
     3ee:	83 b7       	in	r24, 0x33	; 51
     3f0:	82 60       	ori	r24, 0x02	; 2
     3f2:	83 bf       	out	0x33, r24	; 51
     3f4:	83 b7       	in	r24, 0x33	; 51
     3f6:	8e 7f       	andi	r24, 0xFE	; 254
     3f8:	83 bf       	out	0x33, r24	; 51
     3fa:	08 95       	ret

000003fc <TMR0_voidSetOVF>:
     3fc:	82 bf       	out	0x32, r24	; 50
     3fe:	08 95       	ret

00000400 <TMR_voidCallBack>:
     400:	00 97       	sbiw	r24, 0x00	; 0
     402:	41 f0       	breq	.+16     	; 0x414 <TMR_voidCallBack+0x14>
     404:	e6 2f       	mov	r30, r22
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	ee 0f       	add	r30, r30
     40a:	ff 1f       	adc	r31, r31
     40c:	ef 58       	subi	r30, 0x8F	; 143
     40e:	ff 4f       	sbci	r31, 0xFF	; 255
     410:	91 83       	std	Z+1, r25	; 0x01
     412:	80 83       	st	Z, r24
     414:	08 95       	ret

00000416 <__vector_11>:
     416:	1f 92       	push	r1
     418:	0f 92       	push	r0
     41a:	0f b6       	in	r0, 0x3f	; 63
     41c:	0f 92       	push	r0
     41e:	11 24       	eor	r1, r1
     420:	2f 93       	push	r18
     422:	3f 93       	push	r19
     424:	4f 93       	push	r20
     426:	5f 93       	push	r21
     428:	6f 93       	push	r22
     42a:	7f 93       	push	r23
     42c:	8f 93       	push	r24
     42e:	9f 93       	push	r25
     430:	af 93       	push	r26
     432:	bf 93       	push	r27
     434:	ef 93       	push	r30
     436:	ff 93       	push	r31
     438:	e0 91 87 00 	lds	r30, 0x0087	; 0x800087 <TMR_ptrFuncCallBack+0x16>
     43c:	f0 91 88 00 	lds	r31, 0x0088	; 0x800088 <TMR_ptrFuncCallBack+0x17>
     440:	30 97       	sbiw	r30, 0x00	; 0
     442:	09 f0       	breq	.+2      	; 0x446 <__vector_11+0x30>
     444:	09 95       	icall
     446:	ff 91       	pop	r31
     448:	ef 91       	pop	r30
     44a:	bf 91       	pop	r27
     44c:	af 91       	pop	r26
     44e:	9f 91       	pop	r25
     450:	8f 91       	pop	r24
     452:	7f 91       	pop	r23
     454:	6f 91       	pop	r22
     456:	5f 91       	pop	r21
     458:	4f 91       	pop	r20
     45a:	3f 91       	pop	r19
     45c:	2f 91       	pop	r18
     45e:	0f 90       	pop	r0
     460:	0f be       	out	0x3f, r0	; 63
     462:	0f 90       	pop	r0
     464:	1f 90       	pop	r1
     466:	18 95       	reti

00000468 <__vector_10>:
     468:	1f 92       	push	r1
     46a:	0f 92       	push	r0
     46c:	0f b6       	in	r0, 0x3f	; 63
     46e:	0f 92       	push	r0
     470:	11 24       	eor	r1, r1
     472:	2f 93       	push	r18
     474:	3f 93       	push	r19
     476:	4f 93       	push	r20
     478:	5f 93       	push	r21
     47a:	6f 93       	push	r22
     47c:	7f 93       	push	r23
     47e:	8f 93       	push	r24
     480:	9f 93       	push	r25
     482:	af 93       	push	r26
     484:	bf 93       	push	r27
     486:	ef 93       	push	r30
     488:	ff 93       	push	r31
     48a:	e0 91 85 00 	lds	r30, 0x0085	; 0x800085 <TMR_ptrFuncCallBack+0x14>
     48e:	f0 91 86 00 	lds	r31, 0x0086	; 0x800086 <TMR_ptrFuncCallBack+0x15>
     492:	30 97       	sbiw	r30, 0x00	; 0
     494:	09 f0       	breq	.+2      	; 0x498 <__vector_10+0x30>
     496:	09 95       	icall
     498:	ff 91       	pop	r31
     49a:	ef 91       	pop	r30
     49c:	bf 91       	pop	r27
     49e:	af 91       	pop	r26
     4a0:	9f 91       	pop	r25
     4a2:	8f 91       	pop	r24
     4a4:	7f 91       	pop	r23
     4a6:	6f 91       	pop	r22
     4a8:	5f 91       	pop	r21
     4aa:	4f 91       	pop	r20
     4ac:	3f 91       	pop	r19
     4ae:	2f 91       	pop	r18
     4b0:	0f 90       	pop	r0
     4b2:	0f be       	out	0x3f, r0	; 63
     4b4:	0f 90       	pop	r0
     4b6:	1f 90       	pop	r1
     4b8:	18 95       	reti

000004ba <__vector_9>:
     4ba:	1f 92       	push	r1
     4bc:	0f 92       	push	r0
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	0f 92       	push	r0
     4c2:	11 24       	eor	r1, r1
     4c4:	2f 93       	push	r18
     4c6:	3f 93       	push	r19
     4c8:	4f 93       	push	r20
     4ca:	5f 93       	push	r21
     4cc:	6f 93       	push	r22
     4ce:	7f 93       	push	r23
     4d0:	8f 93       	push	r24
     4d2:	9f 93       	push	r25
     4d4:	af 93       	push	r26
     4d6:	bf 93       	push	r27
     4d8:	ef 93       	push	r30
     4da:	ff 93       	push	r31
     4dc:	e0 91 83 00 	lds	r30, 0x0083	; 0x800083 <TMR_ptrFuncCallBack+0x12>
     4e0:	f0 91 84 00 	lds	r31, 0x0084	; 0x800084 <TMR_ptrFuncCallBack+0x13>
     4e4:	30 97       	sbiw	r30, 0x00	; 0
     4e6:	09 f0       	breq	.+2      	; 0x4ea <__vector_9+0x30>
     4e8:	09 95       	icall
     4ea:	ff 91       	pop	r31
     4ec:	ef 91       	pop	r30
     4ee:	bf 91       	pop	r27
     4f0:	af 91       	pop	r26
     4f2:	9f 91       	pop	r25
     4f4:	8f 91       	pop	r24
     4f6:	7f 91       	pop	r23
     4f8:	6f 91       	pop	r22
     4fa:	5f 91       	pop	r21
     4fc:	4f 91       	pop	r20
     4fe:	3f 91       	pop	r19
     500:	2f 91       	pop	r18
     502:	0f 90       	pop	r0
     504:	0f be       	out	0x3f, r0	; 63
     506:	0f 90       	pop	r0
     508:	1f 90       	pop	r1
     50a:	18 95       	reti

0000050c <__vector_8>:
     50c:	1f 92       	push	r1
     50e:	0f 92       	push	r0
     510:	0f b6       	in	r0, 0x3f	; 63
     512:	0f 92       	push	r0
     514:	11 24       	eor	r1, r1
     516:	2f 93       	push	r18
     518:	3f 93       	push	r19
     51a:	4f 93       	push	r20
     51c:	5f 93       	push	r21
     51e:	6f 93       	push	r22
     520:	7f 93       	push	r23
     522:	8f 93       	push	r24
     524:	9f 93       	push	r25
     526:	af 93       	push	r26
     528:	bf 93       	push	r27
     52a:	ef 93       	push	r30
     52c:	ff 93       	push	r31
     52e:	e0 91 81 00 	lds	r30, 0x0081	; 0x800081 <TMR_ptrFuncCallBack+0x10>
     532:	f0 91 82 00 	lds	r31, 0x0082	; 0x800082 <TMR_ptrFuncCallBack+0x11>
     536:	30 97       	sbiw	r30, 0x00	; 0
     538:	09 f0       	breq	.+2      	; 0x53c <__vector_8+0x30>
     53a:	09 95       	icall
     53c:	ff 91       	pop	r31
     53e:	ef 91       	pop	r30
     540:	bf 91       	pop	r27
     542:	af 91       	pop	r26
     544:	9f 91       	pop	r25
     546:	8f 91       	pop	r24
     548:	7f 91       	pop	r23
     54a:	6f 91       	pop	r22
     54c:	5f 91       	pop	r21
     54e:	4f 91       	pop	r20
     550:	3f 91       	pop	r19
     552:	2f 91       	pop	r18
     554:	0f 90       	pop	r0
     556:	0f be       	out	0x3f, r0	; 63
     558:	0f 90       	pop	r0
     55a:	1f 90       	pop	r1
     55c:	18 95       	reti

0000055e <__vector_7>:
     55e:	1f 92       	push	r1
     560:	0f 92       	push	r0
     562:	0f b6       	in	r0, 0x3f	; 63
     564:	0f 92       	push	r0
     566:	11 24       	eor	r1, r1
     568:	2f 93       	push	r18
     56a:	3f 93       	push	r19
     56c:	4f 93       	push	r20
     56e:	5f 93       	push	r21
     570:	6f 93       	push	r22
     572:	7f 93       	push	r23
     574:	8f 93       	push	r24
     576:	9f 93       	push	r25
     578:	af 93       	push	r26
     57a:	bf 93       	push	r27
     57c:	ef 93       	push	r30
     57e:	ff 93       	push	r31
     580:	e0 91 7f 00 	lds	r30, 0x007F	; 0x80007f <TMR_ptrFuncCallBack+0xe>
     584:	f0 91 80 00 	lds	r31, 0x0080	; 0x800080 <TMR_ptrFuncCallBack+0xf>
     588:	30 97       	sbiw	r30, 0x00	; 0
     58a:	09 f0       	breq	.+2      	; 0x58e <__vector_7+0x30>
     58c:	09 95       	icall
     58e:	ff 91       	pop	r31
     590:	ef 91       	pop	r30
     592:	bf 91       	pop	r27
     594:	af 91       	pop	r26
     596:	9f 91       	pop	r25
     598:	8f 91       	pop	r24
     59a:	7f 91       	pop	r23
     59c:	6f 91       	pop	r22
     59e:	5f 91       	pop	r21
     5a0:	4f 91       	pop	r20
     5a2:	3f 91       	pop	r19
     5a4:	2f 91       	pop	r18
     5a6:	0f 90       	pop	r0
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	0f 90       	pop	r0
     5ac:	1f 90       	pop	r1
     5ae:	18 95       	reti

000005b0 <__vector_6>:
     5b0:	1f 92       	push	r1
     5b2:	0f 92       	push	r0
     5b4:	0f b6       	in	r0, 0x3f	; 63
     5b6:	0f 92       	push	r0
     5b8:	11 24       	eor	r1, r1
     5ba:	2f 93       	push	r18
     5bc:	3f 93       	push	r19
     5be:	4f 93       	push	r20
     5c0:	5f 93       	push	r21
     5c2:	6f 93       	push	r22
     5c4:	7f 93       	push	r23
     5c6:	8f 93       	push	r24
     5c8:	9f 93       	push	r25
     5ca:	af 93       	push	r26
     5cc:	bf 93       	push	r27
     5ce:	ef 93       	push	r30
     5d0:	ff 93       	push	r31
     5d2:	e0 91 7d 00 	lds	r30, 0x007D	; 0x80007d <TMR_ptrFuncCallBack+0xc>
     5d6:	f0 91 7e 00 	lds	r31, 0x007E	; 0x80007e <TMR_ptrFuncCallBack+0xd>
     5da:	30 97       	sbiw	r30, 0x00	; 0
     5dc:	09 f0       	breq	.+2      	; 0x5e0 <__vector_6+0x30>
     5de:	09 95       	icall
     5e0:	ff 91       	pop	r31
     5e2:	ef 91       	pop	r30
     5e4:	bf 91       	pop	r27
     5e6:	af 91       	pop	r26
     5e8:	9f 91       	pop	r25
     5ea:	8f 91       	pop	r24
     5ec:	7f 91       	pop	r23
     5ee:	6f 91       	pop	r22
     5f0:	5f 91       	pop	r21
     5f2:	4f 91       	pop	r20
     5f4:	3f 91       	pop	r19
     5f6:	2f 91       	pop	r18
     5f8:	0f 90       	pop	r0
     5fa:	0f be       	out	0x3f, r0	; 63
     5fc:	0f 90       	pop	r0
     5fe:	1f 90       	pop	r1
     600:	18 95       	reti

00000602 <__vector_5>:
     602:	1f 92       	push	r1
     604:	0f 92       	push	r0
     606:	0f b6       	in	r0, 0x3f	; 63
     608:	0f 92       	push	r0
     60a:	11 24       	eor	r1, r1
     60c:	2f 93       	push	r18
     60e:	3f 93       	push	r19
     610:	4f 93       	push	r20
     612:	5f 93       	push	r21
     614:	6f 93       	push	r22
     616:	7f 93       	push	r23
     618:	8f 93       	push	r24
     61a:	9f 93       	push	r25
     61c:	af 93       	push	r26
     61e:	bf 93       	push	r27
     620:	ef 93       	push	r30
     622:	ff 93       	push	r31
     624:	e0 91 7b 00 	lds	r30, 0x007B	; 0x80007b <TMR_ptrFuncCallBack+0xa>
     628:	f0 91 7c 00 	lds	r31, 0x007C	; 0x80007c <TMR_ptrFuncCallBack+0xb>
     62c:	30 97       	sbiw	r30, 0x00	; 0
     62e:	09 f0       	breq	.+2      	; 0x632 <__vector_5+0x30>
     630:	09 95       	icall
     632:	ff 91       	pop	r31
     634:	ef 91       	pop	r30
     636:	bf 91       	pop	r27
     638:	af 91       	pop	r26
     63a:	9f 91       	pop	r25
     63c:	8f 91       	pop	r24
     63e:	7f 91       	pop	r23
     640:	6f 91       	pop	r22
     642:	5f 91       	pop	r21
     644:	4f 91       	pop	r20
     646:	3f 91       	pop	r19
     648:	2f 91       	pop	r18
     64a:	0f 90       	pop	r0
     64c:	0f be       	out	0x3f, r0	; 63
     64e:	0f 90       	pop	r0
     650:	1f 90       	pop	r1
     652:	18 95       	reti

00000654 <__vector_4>:
     654:	1f 92       	push	r1
     656:	0f 92       	push	r0
     658:	0f b6       	in	r0, 0x3f	; 63
     65a:	0f 92       	push	r0
     65c:	11 24       	eor	r1, r1
     65e:	2f 93       	push	r18
     660:	3f 93       	push	r19
     662:	4f 93       	push	r20
     664:	5f 93       	push	r21
     666:	6f 93       	push	r22
     668:	7f 93       	push	r23
     66a:	8f 93       	push	r24
     66c:	9f 93       	push	r25
     66e:	af 93       	push	r26
     670:	bf 93       	push	r27
     672:	ef 93       	push	r30
     674:	ff 93       	push	r31
     676:	e0 91 79 00 	lds	r30, 0x0079	; 0x800079 <TMR_ptrFuncCallBack+0x8>
     67a:	f0 91 7a 00 	lds	r31, 0x007A	; 0x80007a <TMR_ptrFuncCallBack+0x9>
     67e:	30 97       	sbiw	r30, 0x00	; 0
     680:	09 f0       	breq	.+2      	; 0x684 <__vector_4+0x30>
     682:	09 95       	icall
     684:	ff 91       	pop	r31
     686:	ef 91       	pop	r30
     688:	bf 91       	pop	r27
     68a:	af 91       	pop	r26
     68c:	9f 91       	pop	r25
     68e:	8f 91       	pop	r24
     690:	7f 91       	pop	r23
     692:	6f 91       	pop	r22
     694:	5f 91       	pop	r21
     696:	4f 91       	pop	r20
     698:	3f 91       	pop	r19
     69a:	2f 91       	pop	r18
     69c:	0f 90       	pop	r0
     69e:	0f be       	out	0x3f, r0	; 63
     6a0:	0f 90       	pop	r0
     6a2:	1f 90       	pop	r1
     6a4:	18 95       	reti

000006a6 <EXTI_voidInit>:
     6a6:	85 b7       	in	r24, 0x35	; 53
     6a8:	81 60       	ori	r24, 0x01	; 1
     6aa:	85 bf       	out	0x35, r24	; 53
     6ac:	85 b7       	in	r24, 0x35	; 53
     6ae:	8d 7f       	andi	r24, 0xFD	; 253
     6b0:	85 bf       	out	0x35, r24	; 53
     6b2:	08 95       	ret

000006b4 <EXTI_voidSetSignalSenseMode>:
     6b4:	66 30       	cpi	r22, 0x06	; 6
     6b6:	31 f0       	breq	.+12     	; 0x6c4 <EXTI_voidSetSignalSenseMode+0x10>
     6b8:	67 30       	cpi	r22, 0x07	; 7
     6ba:	41 f1       	breq	.+80     	; 0x70c <EXTI_voidSetSignalSenseMode+0x58>
     6bc:	65 30       	cpi	r22, 0x05	; 5
     6be:	09 f0       	breq	.+2      	; 0x6c2 <EXTI_voidSetSignalSenseMode+0xe>
     6c0:	55 c0       	rjmp	.+170    	; 0x76c <EXTI_voidSetSignalSenseMode+0xb8>
     6c2:	48 c0       	rjmp	.+144    	; 0x754 <EXTI_voidSetSignalSenseMode+0xa0>
     6c4:	81 30       	cpi	r24, 0x01	; 1
     6c6:	69 f0       	breq	.+26     	; 0x6e2 <EXTI_voidSetSignalSenseMode+0x2e>
     6c8:	28 f0       	brcs	.+10     	; 0x6d4 <EXTI_voidSetSignalSenseMode+0x20>
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	89 f0       	breq	.+34     	; 0x6f0 <EXTI_voidSetSignalSenseMode+0x3c>
     6ce:	83 30       	cpi	r24, 0x03	; 3
     6d0:	b1 f0       	breq	.+44     	; 0x6fe <EXTI_voidSetSignalSenseMode+0x4a>
     6d2:	08 95       	ret
     6d4:	85 b7       	in	r24, 0x35	; 53
     6d6:	8e 7f       	andi	r24, 0xFE	; 254
     6d8:	85 bf       	out	0x35, r24	; 53
     6da:	85 b7       	in	r24, 0x35	; 53
     6dc:	82 60       	ori	r24, 0x02	; 2
     6de:	85 bf       	out	0x35, r24	; 53
     6e0:	08 95       	ret
     6e2:	85 b7       	in	r24, 0x35	; 53
     6e4:	81 60       	ori	r24, 0x01	; 1
     6e6:	85 bf       	out	0x35, r24	; 53
     6e8:	85 b7       	in	r24, 0x35	; 53
     6ea:	82 60       	ori	r24, 0x02	; 2
     6ec:	85 bf       	out	0x35, r24	; 53
     6ee:	08 95       	ret
     6f0:	85 b7       	in	r24, 0x35	; 53
     6f2:	8e 7f       	andi	r24, 0xFE	; 254
     6f4:	85 bf       	out	0x35, r24	; 53
     6f6:	85 b7       	in	r24, 0x35	; 53
     6f8:	8d 7f       	andi	r24, 0xFD	; 253
     6fa:	85 bf       	out	0x35, r24	; 53
     6fc:	08 95       	ret
     6fe:	85 b7       	in	r24, 0x35	; 53
     700:	81 60       	ori	r24, 0x01	; 1
     702:	85 bf       	out	0x35, r24	; 53
     704:	85 b7       	in	r24, 0x35	; 53
     706:	8d 7f       	andi	r24, 0xFD	; 253
     708:	85 bf       	out	0x35, r24	; 53
     70a:	08 95       	ret
     70c:	81 30       	cpi	r24, 0x01	; 1
     70e:	69 f0       	breq	.+26     	; 0x72a <EXTI_voidSetSignalSenseMode+0x76>
     710:	28 f0       	brcs	.+10     	; 0x71c <EXTI_voidSetSignalSenseMode+0x68>
     712:	82 30       	cpi	r24, 0x02	; 2
     714:	89 f0       	breq	.+34     	; 0x738 <EXTI_voidSetSignalSenseMode+0x84>
     716:	83 30       	cpi	r24, 0x03	; 3
     718:	b1 f0       	breq	.+44     	; 0x746 <EXTI_voidSetSignalSenseMode+0x92>
     71a:	08 95       	ret
     71c:	85 b7       	in	r24, 0x35	; 53
     71e:	8b 7f       	andi	r24, 0xFB	; 251
     720:	85 bf       	out	0x35, r24	; 53
     722:	85 b7       	in	r24, 0x35	; 53
     724:	88 60       	ori	r24, 0x08	; 8
     726:	85 bf       	out	0x35, r24	; 53
     728:	08 95       	ret
     72a:	85 b7       	in	r24, 0x35	; 53
     72c:	84 60       	ori	r24, 0x04	; 4
     72e:	85 bf       	out	0x35, r24	; 53
     730:	85 b7       	in	r24, 0x35	; 53
     732:	88 60       	ori	r24, 0x08	; 8
     734:	85 bf       	out	0x35, r24	; 53
     736:	08 95       	ret
     738:	85 b7       	in	r24, 0x35	; 53
     73a:	8b 7f       	andi	r24, 0xFB	; 251
     73c:	85 bf       	out	0x35, r24	; 53
     73e:	85 b7       	in	r24, 0x35	; 53
     740:	87 7f       	andi	r24, 0xF7	; 247
     742:	85 bf       	out	0x35, r24	; 53
     744:	08 95       	ret
     746:	85 b7       	in	r24, 0x35	; 53
     748:	84 60       	ori	r24, 0x04	; 4
     74a:	85 bf       	out	0x35, r24	; 53
     74c:	85 b7       	in	r24, 0x35	; 53
     74e:	87 7f       	andi	r24, 0xF7	; 247
     750:	85 bf       	out	0x35, r24	; 53
     752:	08 95       	ret
     754:	88 23       	and	r24, r24
     756:	19 f0       	breq	.+6      	; 0x75e <EXTI_voidSetSignalSenseMode+0xaa>
     758:	81 30       	cpi	r24, 0x01	; 1
     75a:	29 f0       	breq	.+10     	; 0x766 <EXTI_voidSetSignalSenseMode+0xb2>
     75c:	08 95       	ret
     75e:	84 b7       	in	r24, 0x34	; 52
     760:	8f 7b       	andi	r24, 0xBF	; 191
     762:	84 bf       	out	0x34, r24	; 52
     764:	08 95       	ret
     766:	84 b7       	in	r24, 0x34	; 52
     768:	80 64       	ori	r24, 0x40	; 64
     76a:	84 bf       	out	0x34, r24	; 52
     76c:	08 95       	ret

0000076e <EXTI_voidEnableInterrupt>:
     76e:	9b ef       	ldi	r25, 0xFB	; 251
     770:	98 0f       	add	r25, r24
     772:	93 30       	cpi	r25, 0x03	; 3
     774:	60 f4       	brcc	.+24     	; 0x78e <EXTI_voidEnableInterrupt+0x20>
     776:	4b b7       	in	r20, 0x3b	; 59
     778:	21 e0       	ldi	r18, 0x01	; 1
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	b9 01       	movw	r22, r18
     77e:	02 c0       	rjmp	.+4      	; 0x784 <EXTI_voidEnableInterrupt+0x16>
     780:	66 0f       	add	r22, r22
     782:	77 1f       	adc	r23, r23
     784:	8a 95       	dec	r24
     786:	e2 f7       	brpl	.-8      	; 0x780 <EXTI_voidEnableInterrupt+0x12>
     788:	cb 01       	movw	r24, r22
     78a:	84 2b       	or	r24, r20
     78c:	8b bf       	out	0x3b, r24	; 59
     78e:	08 95       	ret

00000790 <EXTI_voidClearFlag>:
     790:	9b ef       	ldi	r25, 0xFB	; 251
     792:	98 0f       	add	r25, r24
     794:	93 30       	cpi	r25, 0x03	; 3
     796:	68 f4       	brcc	.+26     	; 0x7b2 <EXTI_voidClearFlag+0x22>
     798:	4a b7       	in	r20, 0x3a	; 58
     79a:	21 e0       	ldi	r18, 0x01	; 1
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	b9 01       	movw	r22, r18
     7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <EXTI_voidClearFlag+0x16>
     7a2:	66 0f       	add	r22, r22
     7a4:	77 1f       	adc	r23, r23
     7a6:	8a 95       	dec	r24
     7a8:	e2 f7       	brpl	.-8      	; 0x7a2 <EXTI_voidClearFlag+0x12>
     7aa:	cb 01       	movw	r24, r22
     7ac:	80 95       	com	r24
     7ae:	84 23       	and	r24, r20
     7b0:	8a bf       	out	0x3a, r24	; 58
     7b2:	08 95       	ret

000007b4 <EXTI_voidSetCallBack>:
     7b4:	00 97       	sbiw	r24, 0x00	; 0
     7b6:	41 f0       	breq	.+16     	; 0x7c8 <EXTI_voidSetCallBack+0x14>
     7b8:	e6 2f       	mov	r30, r22
     7ba:	f0 e0       	ldi	r31, 0x00	; 0
     7bc:	ee 0f       	add	r30, r30
     7be:	ff 1f       	adc	r31, r31
     7c0:	e5 59       	subi	r30, 0x95	; 149
     7c2:	ff 4f       	sbci	r31, 0xFF	; 255
     7c4:	91 83       	std	Z+1, r25	; 0x01
     7c6:	80 83       	st	Z, r24
     7c8:	08 95       	ret

000007ca <__vector_1>:
     7ca:	1f 92       	push	r1
     7cc:	0f 92       	push	r0
     7ce:	0f b6       	in	r0, 0x3f	; 63
     7d0:	0f 92       	push	r0
     7d2:	11 24       	eor	r1, r1
     7d4:	2f 93       	push	r18
     7d6:	3f 93       	push	r19
     7d8:	4f 93       	push	r20
     7da:	5f 93       	push	r21
     7dc:	6f 93       	push	r22
     7de:	7f 93       	push	r23
     7e0:	8f 93       	push	r24
     7e2:	9f 93       	push	r25
     7e4:	af 93       	push	r26
     7e6:	bf 93       	push	r27
     7e8:	ef 93       	push	r30
     7ea:	ff 93       	push	r31
     7ec:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <EXTI_CallBack>
     7f0:	f0 91 6c 00 	lds	r31, 0x006C	; 0x80006c <EXTI_CallBack+0x1>
     7f4:	30 97       	sbiw	r30, 0x00	; 0
     7f6:	21 f0       	breq	.+8      	; 0x800 <__DATA_REGION_LENGTH__>
     7f8:	09 95       	icall
     7fa:	86 e0       	ldi	r24, 0x06	; 6
     7fc:	0e 94 c8 03 	call	0x790	; 0x790 <EXTI_voidClearFlag>
     800:	ff 91       	pop	r31
     802:	ef 91       	pop	r30
     804:	bf 91       	pop	r27
     806:	af 91       	pop	r26
     808:	9f 91       	pop	r25
     80a:	8f 91       	pop	r24
     80c:	7f 91       	pop	r23
     80e:	6f 91       	pop	r22
     810:	5f 91       	pop	r21
     812:	4f 91       	pop	r20
     814:	3f 91       	pop	r19
     816:	2f 91       	pop	r18
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <__vector_2>:
     822:	1f 92       	push	r1
     824:	0f 92       	push	r0
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	0f 92       	push	r0
     82a:	11 24       	eor	r1, r1
     82c:	2f 93       	push	r18
     82e:	3f 93       	push	r19
     830:	4f 93       	push	r20
     832:	5f 93       	push	r21
     834:	6f 93       	push	r22
     836:	7f 93       	push	r23
     838:	8f 93       	push	r24
     83a:	9f 93       	push	r25
     83c:	af 93       	push	r26
     83e:	bf 93       	push	r27
     840:	ef 93       	push	r30
     842:	ff 93       	push	r31
     844:	e0 91 6d 00 	lds	r30, 0x006D	; 0x80006d <EXTI_CallBack+0x2>
     848:	f0 91 6e 00 	lds	r31, 0x006E	; 0x80006e <EXTI_CallBack+0x3>
     84c:	30 97       	sbiw	r30, 0x00	; 0
     84e:	21 f0       	breq	.+8      	; 0x858 <__vector_2+0x36>
     850:	09 95       	icall
     852:	87 e0       	ldi	r24, 0x07	; 7
     854:	0e 94 c8 03 	call	0x790	; 0x790 <EXTI_voidClearFlag>
     858:	ff 91       	pop	r31
     85a:	ef 91       	pop	r30
     85c:	bf 91       	pop	r27
     85e:	af 91       	pop	r26
     860:	9f 91       	pop	r25
     862:	8f 91       	pop	r24
     864:	7f 91       	pop	r23
     866:	6f 91       	pop	r22
     868:	5f 91       	pop	r21
     86a:	4f 91       	pop	r20
     86c:	3f 91       	pop	r19
     86e:	2f 91       	pop	r18
     870:	0f 90       	pop	r0
     872:	0f be       	out	0x3f, r0	; 63
     874:	0f 90       	pop	r0
     876:	1f 90       	pop	r1
     878:	18 95       	reti

0000087a <__vector_3>:
     87a:	1f 92       	push	r1
     87c:	0f 92       	push	r0
     87e:	0f b6       	in	r0, 0x3f	; 63
     880:	0f 92       	push	r0
     882:	11 24       	eor	r1, r1
     884:	2f 93       	push	r18
     886:	3f 93       	push	r19
     888:	4f 93       	push	r20
     88a:	5f 93       	push	r21
     88c:	6f 93       	push	r22
     88e:	7f 93       	push	r23
     890:	8f 93       	push	r24
     892:	9f 93       	push	r25
     894:	af 93       	push	r26
     896:	bf 93       	push	r27
     898:	ef 93       	push	r30
     89a:	ff 93       	push	r31
     89c:	e0 91 6f 00 	lds	r30, 0x006F	; 0x80006f <EXTI_CallBack+0x4>
     8a0:	f0 91 70 00 	lds	r31, 0x0070	; 0x800070 <EXTI_CallBack+0x5>
     8a4:	30 97       	sbiw	r30, 0x00	; 0
     8a6:	21 f0       	breq	.+8      	; 0x8b0 <__vector_3+0x36>
     8a8:	09 95       	icall
     8aa:	85 e0       	ldi	r24, 0x05	; 5
     8ac:	0e 94 c8 03 	call	0x790	; 0x790 <EXTI_voidClearFlag>
     8b0:	ff 91       	pop	r31
     8b2:	ef 91       	pop	r30
     8b4:	bf 91       	pop	r27
     8b6:	af 91       	pop	r26
     8b8:	9f 91       	pop	r25
     8ba:	8f 91       	pop	r24
     8bc:	7f 91       	pop	r23
     8be:	6f 91       	pop	r22
     8c0:	5f 91       	pop	r21
     8c2:	4f 91       	pop	r20
     8c4:	3f 91       	pop	r19
     8c6:	2f 91       	pop	r18
     8c8:	0f 90       	pop	r0
     8ca:	0f be       	out	0x3f, r0	; 63
     8cc:	0f 90       	pop	r0
     8ce:	1f 90       	pop	r1
     8d0:	18 95       	reti

000008d2 <LCD_voidSendCMD>:
     8d2:	cf 93       	push	r28
     8d4:	c8 2f       	mov	r28, r24
     8d6:	40 e0       	ldi	r20, 0x00	; 0
     8d8:	60 e0       	ldi	r22, 0x00	; 0
     8da:	81 e0       	ldi	r24, 0x01	; 1
     8dc:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     8e0:	40 e0       	ldi	r20, 0x00	; 0
     8e2:	61 e0       	ldi	r22, 0x01	; 1
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     8ea:	6c 2f       	mov	r22, r28
     8ec:	82 e0       	ldi	r24, 0x02	; 2
     8ee:	0e 94 4c 01 	call	0x298	; 0x298 <DIO_voidSetPortValue>
     8f2:	41 e0       	ldi	r20, 0x01	; 1
     8f4:	62 e0       	ldi	r22, 0x02	; 2
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     8fc:	82 e0       	ldi	r24, 0x02	; 2
     8fe:	8a 95       	dec	r24
     900:	f1 f7       	brne	.-4      	; 0x8fe <LCD_voidSendCMD+0x2c>
     902:	00 c0       	rjmp	.+0      	; 0x904 <LCD_voidSendCMD+0x32>
     904:	40 e0       	ldi	r20, 0x00	; 0
     906:	62 e0       	ldi	r22, 0x02	; 2
     908:	81 e0       	ldi	r24, 0x01	; 1
     90a:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     90e:	cf 91       	pop	r28
     910:	08 95       	ret

00000912 <LCD_voidInitDisplay>:
     912:	41 e0       	ldi	r20, 0x01	; 1
     914:	60 e0       	ldi	r22, 0x00	; 0
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	0e 94 4a 00 	call	0x94	; 0x94 <DIO_voidSetPinDirection>
     91c:	41 e0       	ldi	r20, 0x01	; 1
     91e:	61 e0       	ldi	r22, 0x01	; 1
     920:	81 e0       	ldi	r24, 0x01	; 1
     922:	0e 94 4a 00 	call	0x94	; 0x94 <DIO_voidSetPinDirection>
     926:	41 e0       	ldi	r20, 0x01	; 1
     928:	62 e0       	ldi	r22, 0x02	; 2
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	0e 94 4a 00 	call	0x94	; 0x94 <DIO_voidSetPinDirection>
     930:	6f ef       	ldi	r22, 0xFF	; 255
     932:	82 e0       	ldi	r24, 0x02	; 2
     934:	0e 94 36 01 	call	0x26c	; 0x26c <DIO_voidSetPortDirection>
     938:	2f eb       	ldi	r18, 0xBF	; 191
     93a:	8a ed       	ldi	r24, 0xDA	; 218
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	21 50       	subi	r18, 0x01	; 1
     940:	80 40       	sbci	r24, 0x00	; 0
     942:	90 40       	sbci	r25, 0x00	; 0
     944:	e1 f7       	brne	.-8      	; 0x93e <LCD_voidInitDisplay+0x2c>
     946:	00 c0       	rjmp	.+0      	; 0x948 <LCD_voidInitDisplay+0x36>
     948:	00 00       	nop
     94a:	88 e3       	ldi	r24, 0x38	; 56
     94c:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_voidSendCMD>
     950:	25 e8       	ldi	r18, 0x85	; 133
     952:	2a 95       	dec	r18
     954:	f1 f7       	brne	.-4      	; 0x952 <LCD_voidInitDisplay+0x40>
     956:	00 00       	nop
     958:	8f e0       	ldi	r24, 0x0F	; 15
     95a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_voidSendCMD>
     95e:	85 e8       	ldi	r24, 0x85	; 133
     960:	8a 95       	dec	r24
     962:	f1 f7       	brne	.-4      	; 0x960 <LCD_voidInitDisplay+0x4e>
     964:	00 00       	nop
     966:	81 e0       	ldi	r24, 0x01	; 1
     968:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_voidSendCMD>
     96c:	8f e9       	ldi	r24, 0x9F	; 159
     96e:	9f e0       	ldi	r25, 0x0F	; 15
     970:	01 97       	sbiw	r24, 0x01	; 1
     972:	f1 f7       	brne	.-4      	; 0x970 <LCD_voidInitDisplay+0x5e>
     974:	00 c0       	rjmp	.+0      	; 0x976 <LCD_voidInitDisplay+0x64>
     976:	00 00       	nop
     978:	86 e0       	ldi	r24, 0x06	; 6
     97a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_voidSendCMD>
     97e:	95 e8       	ldi	r25, 0x85	; 133
     980:	9a 95       	dec	r25
     982:	f1 f7       	brne	.-4      	; 0x980 <LCD_voidInitDisplay+0x6e>
     984:	00 00       	nop
     986:	08 95       	ret

00000988 <LCD_voidClrDisplay>:
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_voidSendCMD>
     98e:	8f e9       	ldi	r24, 0x9F	; 159
     990:	9f e0       	ldi	r25, 0x0F	; 15
     992:	01 97       	sbiw	r24, 0x01	; 1
     994:	f1 f7       	brne	.-4      	; 0x992 <LCD_voidClrDisplay+0xa>
     996:	00 c0       	rjmp	.+0      	; 0x998 <LCD_voidClrDisplay+0x10>
     998:	00 00       	nop
     99a:	08 95       	ret

0000099c <ISR_INT0>:
     99c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
     9a0:	8f 5f       	subi	r24, 0xFF	; 255
     9a2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
     9a6:	0e 94 c4 04 	call	0x988	; 0x988 <LCD_voidClrDisplay>
     9aa:	81 e0       	ldi	r24, 0x01	; 1
     9ac:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     9b0:	08 95       	ret

000009b2 <ISR_INT1>:
     9b2:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
     9b6:	81 50       	subi	r24, 0x01	; 1
     9b8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
     9bc:	0e 94 c4 04 	call	0x988	; 0x988 <LCD_voidClrDisplay>
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     9c6:	08 95       	ret

000009c8 <LCD_voidDisplayChar>:
     9c8:	cf 93       	push	r28
     9ca:	c8 2f       	mov	r28, r24
     9cc:	41 e0       	ldi	r20, 0x01	; 1
     9ce:	60 e0       	ldi	r22, 0x00	; 0
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     9d6:	40 e0       	ldi	r20, 0x00	; 0
     9d8:	61 e0       	ldi	r22, 0x01	; 1
     9da:	81 e0       	ldi	r24, 0x01	; 1
     9dc:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     9e0:	6c 2f       	mov	r22, r28
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	0e 94 4c 01 	call	0x298	; 0x298 <DIO_voidSetPortValue>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	62 e0       	ldi	r22, 0x02	; 2
     9ec:	81 e0       	ldi	r24, 0x01	; 1
     9ee:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     9f2:	82 e0       	ldi	r24, 0x02	; 2
     9f4:	8a 95       	dec	r24
     9f6:	f1 f7       	brne	.-4      	; 0x9f4 <LCD_voidDisplayChar+0x2c>
     9f8:	00 c0       	rjmp	.+0      	; 0x9fa <LCD_voidDisplayChar+0x32>
     9fa:	40 e0       	ldi	r20, 0x00	; 0
     9fc:	62 e0       	ldi	r22, 0x02	; 2
     9fe:	81 e0       	ldi	r24, 0x01	; 1
     a00:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_voidSetPinValue>
     a04:	8f e1       	ldi	r24, 0x1F	; 31
     a06:	9e e4       	ldi	r25, 0x4E	; 78
     a08:	01 97       	sbiw	r24, 0x01	; 1
     a0a:	f1 f7       	brne	.-4      	; 0xa08 <LCD_voidDisplayChar+0x40>
     a0c:	00 c0       	rjmp	.+0      	; 0xa0e <LCD_voidDisplayChar+0x46>
     a0e:	00 00       	nop
     a10:	cf 91       	pop	r28
     a12:	08 95       	ret

00000a14 <LCD_voidDisplayStr>:
     a14:	0f 93       	push	r16
     a16:	1f 93       	push	r17
     a18:	cf 93       	push	r28
     a1a:	00 97       	sbiw	r24, 0x00	; 0
     a1c:	61 f0       	breq	.+24     	; 0xa36 <LCD_voidDisplayStr+0x22>
     a1e:	8c 01       	movw	r16, r24
     a20:	c0 e0       	ldi	r28, 0x00	; 0
     a22:	03 c0       	rjmp	.+6      	; 0xa2a <LCD_voidDisplayStr+0x16>
     a24:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <LCD_voidDisplayChar>
     a28:	cf 5f       	subi	r28, 0xFF	; 255
     a2a:	f8 01       	movw	r30, r16
     a2c:	ec 0f       	add	r30, r28
     a2e:	f1 1d       	adc	r31, r1
     a30:	80 81       	ld	r24, Z
     a32:	81 11       	cpse	r24, r1
     a34:	f7 cf       	rjmp	.-18     	; 0xa24 <LCD_voidDisplayStr+0x10>
     a36:	cf 91       	pop	r28
     a38:	1f 91       	pop	r17
     a3a:	0f 91       	pop	r16
     a3c:	08 95       	ret

00000a3e <LCD_voidDisplayInt>:
     a3e:	8f 92       	push	r8
     a40:	9f 92       	push	r9
     a42:	af 92       	push	r10
     a44:	bf 92       	push	r11
     a46:	cf 92       	push	r12
     a48:	df 92       	push	r13
     a4a:	ef 92       	push	r14
     a4c:	ff 92       	push	r15
     a4e:	1f 93       	push	r17
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	cd b7       	in	r28, 0x3d	; 61
     a56:	de b7       	in	r29, 0x3e	; 62
     a58:	2a 97       	sbiw	r28, 0x0a	; 10
     a5a:	0f b6       	in	r0, 0x3f	; 63
     a5c:	f8 94       	cli
     a5e:	de bf       	out	0x3e, r29	; 62
     a60:	0f be       	out	0x3f, r0	; 63
     a62:	cd bf       	out	0x3d, r28	; 61
     a64:	6b 01       	movw	r12, r22
     a66:	7c 01       	movw	r14, r24
     a68:	60 e0       	ldi	r22, 0x00	; 0
     a6a:	70 e0       	ldi	r23, 0x00	; 0
     a6c:	cb 01       	movw	r24, r22
     a6e:	10 e0       	ldi	r17, 0x00	; 0
     a70:	25 c0       	rjmp	.+74     	; 0xabc <LCD_voidDisplayInt+0x7e>
     a72:	dc 01       	movw	r26, r24
     a74:	cb 01       	movw	r24, r22
     a76:	88 0f       	add	r24, r24
     a78:	99 1f       	adc	r25, r25
     a7a:	aa 1f       	adc	r26, r26
     a7c:	bb 1f       	adc	r27, r27
     a7e:	4c 01       	movw	r8, r24
     a80:	5d 01       	movw	r10, r26
     a82:	88 0c       	add	r8, r8
     a84:	99 1c       	adc	r9, r9
     a86:	aa 1c       	adc	r10, r10
     a88:	bb 1c       	adc	r11, r11
     a8a:	88 0c       	add	r8, r8
     a8c:	99 1c       	adc	r9, r9
     a8e:	aa 1c       	adc	r10, r10
     a90:	bb 1c       	adc	r11, r11
     a92:	88 0e       	add	r8, r24
     a94:	99 1e       	adc	r9, r25
     a96:	aa 1e       	adc	r10, r26
     a98:	bb 1e       	adc	r11, r27
     a9a:	c7 01       	movw	r24, r14
     a9c:	b6 01       	movw	r22, r12
     a9e:	2a e0       	ldi	r18, 0x0A	; 10
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	40 e0       	ldi	r20, 0x00	; 0
     aa4:	50 e0       	ldi	r21, 0x00	; 0
     aa6:	0e 94 bf 08 	call	0x117e	; 0x117e <__udivmodsi4>
     aaa:	68 0d       	add	r22, r8
     aac:	79 1d       	adc	r23, r9
     aae:	8a 1d       	adc	r24, r10
     ab0:	9b 1d       	adc	r25, r11
     ab2:	c2 2e       	mov	r12, r18
     ab4:	d3 2e       	mov	r13, r19
     ab6:	e4 2e       	mov	r14, r20
     ab8:	f5 2e       	mov	r15, r21
     aba:	1f 5f       	subi	r17, 0xFF	; 255
     abc:	c1 14       	cp	r12, r1
     abe:	d1 04       	cpc	r13, r1
     ac0:	e1 04       	cpc	r14, r1
     ac2:	f1 04       	cpc	r15, r1
     ac4:	b1 f6       	brne	.-84     	; 0xa72 <LCD_voidDisplayInt+0x34>
     ac6:	f1 2c       	mov	r15, r1
     ac8:	13 c0       	rjmp	.+38     	; 0xaf0 <LCD_voidDisplayInt+0xb2>
     aca:	2a e0       	ldi	r18, 0x0A	; 10
     acc:	30 e0       	ldi	r19, 0x00	; 0
     ace:	40 e0       	ldi	r20, 0x00	; 0
     ad0:	50 e0       	ldi	r21, 0x00	; 0
     ad2:	0e 94 bf 08 	call	0x117e	; 0x117e <__udivmodsi4>
     ad6:	e1 e0       	ldi	r30, 0x01	; 1
     ad8:	f0 e0       	ldi	r31, 0x00	; 0
     ada:	ec 0f       	add	r30, r28
     adc:	fd 1f       	adc	r31, r29
     ade:	ec 0d       	add	r30, r12
     ae0:	fd 1d       	adc	r31, r13
     ae2:	60 5d       	subi	r22, 0xD0	; 208
     ae4:	60 83       	st	Z, r22
     ae6:	62 2f       	mov	r22, r18
     ae8:	73 2f       	mov	r23, r19
     aea:	84 2f       	mov	r24, r20
     aec:	95 2f       	mov	r25, r21
     aee:	f3 94       	inc	r15
     af0:	cf 2c       	mov	r12, r15
     af2:	0f 2c       	mov	r0, r15
     af4:	00 0c       	add	r0, r0
     af6:	dd 08       	sbc	r13, r13
     af8:	21 2f       	mov	r18, r17
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	c2 16       	cp	r12, r18
     afe:	d3 06       	cpc	r13, r19
     b00:	24 f3       	brlt	.-56     	; 0xaca <LCD_voidDisplayInt+0x8c>
     b02:	e1 e0       	ldi	r30, 0x01	; 1
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	ec 0f       	add	r30, r28
     b08:	fd 1f       	adc	r31, r29
     b0a:	e2 0f       	add	r30, r18
     b0c:	f3 1f       	adc	r31, r19
     b0e:	10 82       	st	Z, r1
     b10:	ce 01       	movw	r24, r28
     b12:	01 96       	adiw	r24, 0x01	; 1
     b14:	0e 94 0a 05 	call	0xa14	; 0xa14 <LCD_voidDisplayStr>
     b18:	2a 96       	adiw	r28, 0x0a	; 10
     b1a:	0f b6       	in	r0, 0x3f	; 63
     b1c:	f8 94       	cli
     b1e:	de bf       	out	0x3e, r29	; 62
     b20:	0f be       	out	0x3f, r0	; 63
     b22:	cd bf       	out	0x3d, r28	; 61
     b24:	df 91       	pop	r29
     b26:	cf 91       	pop	r28
     b28:	1f 91       	pop	r17
     b2a:	ff 90       	pop	r15
     b2c:	ef 90       	pop	r14
     b2e:	df 90       	pop	r13
     b30:	cf 90       	pop	r12
     b32:	bf 90       	pop	r11
     b34:	af 90       	pop	r10
     b36:	9f 90       	pop	r9
     b38:	8f 90       	pop	r8
     b3a:	08 95       	ret

00000b3c <LCD_voidSetCursorPosition>:
     b3c:	61 30       	cpi	r22, 0x01	; 1
     b3e:	19 f0       	breq	.+6      	; 0xb46 <LCD_voidSetCursorPosition+0xa>
     b40:	62 30       	cpi	r22, 0x02	; 2
     b42:	29 f0       	breq	.+10     	; 0xb4e <LCD_voidSetCursorPosition+0x12>
     b44:	08 95       	ret
     b46:	80 58       	subi	r24, 0x80	; 128
     b48:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_voidSendCMD>
     b4c:	08 95       	ret
     b4e:	80 54       	subi	r24, 0x40	; 64
     b50:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_voidSendCMD>
     b54:	08 95       	ret

00000b56 <BMS_voidInit>:


void BMS_voidInit(void)
{
	// initialize ADC
	ADC_voidInit();
     b56:	0e 94 62 01 	call	0x2c4	; 0x2c4 <ADC_voidInit>
	
	// enable interrupts
	sei();
     b5a:	0e 94 5e 01 	call	0x2bc	; 0x2bc <sei>
	
	// initialize external interrupt (option to display cells 1,2 or cells 3,4)
	EXTI_voidInit();
     b5e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <EXTI_voidInit>
	EXTI_voidSetSignalSenseMode(EXTI_SENSE_RISING_EDGE, EXTI_GICR_INT0);
     b62:	66 e0       	ldi	r22, 0x06	; 6
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <EXTI_voidSetSignalSenseMode>
	EXTI_voidEnableInterrupt(EXTI_GICR_INT0);
     b6a:	86 e0       	ldi	r24, 0x06	; 6
     b6c:	0e 94 b7 03 	call	0x76e	; 0x76e <EXTI_voidEnableInterrupt>
	EXTI_voidSetCallBack(ISR_INT0, EXTI_INT0);
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	8e ec       	ldi	r24, 0xCE	; 206
     b74:	94 e0       	ldi	r25, 0x04	; 4
     b76:	0e 94 da 03 	call	0x7b4	; 0x7b4 <EXTI_voidSetCallBack>
	EXTI_voidSetSignalSenseMode(EXTI_SENSE_RISING_EDGE, EXTI_GICR_INT1);
     b7a:	67 e0       	ldi	r22, 0x07	; 7
     b7c:	81 e0       	ldi	r24, 0x01	; 1
     b7e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <EXTI_voidSetSignalSenseMode>
	EXTI_voidEnableInterrupt(EXTI_GICR_INT1);
     b82:	87 e0       	ldi	r24, 0x07	; 7
     b84:	0e 94 b7 03 	call	0x76e	; 0x76e <EXTI_voidEnableInterrupt>
	EXTI_voidSetCallBack(ISR_INT1, EXTI_INT1);
     b88:	61 e0       	ldi	r22, 0x01	; 1
     b8a:	89 ed       	ldi	r24, 0xD9	; 217
     b8c:	94 e0       	ldi	r25, 0x04	; 4
     b8e:	0e 94 da 03 	call	0x7b4	; 0x7b4 <EXTI_voidSetCallBack>
	
	// setup timer 0 interrupt to run every multiple of 1mS (overflow mode)
	TMR0_voidInit();
     b92:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <TMR0_voidInit>
	TMR_voidCallBack(BMS_voidPeriodicallyDisplayReading, TMR0_OVF_VECTOR_ID);
     b96:	6b e0       	ldi	r22, 0x0B	; 11
     b98:	89 e4       	ldi	r24, 0x49	; 73
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 00 02 	call	0x400	; 0x400 <TMR_voidCallBack>
	TMR0_voidSetOVF(64); // 64
     ba0:	80 e4       	ldi	r24, 0x40	; 64
     ba2:	0e 94 fe 01 	call	0x3fc	; 0x3fc <TMR0_voidSetOVF>
     ba6:	08 95       	ret

00000ba8 <BMS_f32ReadVoltage>:

}


f32 BMS_f32ReadVoltage(u8 copy_u8CellNum)
{
     ba8:	cf 92       	push	r12
     baa:	df 92       	push	r13
     bac:	ef 92       	push	r14
     bae:	ff 92       	push	r15
     bb0:	cf 93       	push	r28
	u16 Local_u16DigitalValue = 0;
	f32 Local_f32AnalogValue = 0;
	f32 Local_f32InputValue = 0;
	
	/**return 0 in case of wrong cell number*/
	if ((copy_u8CellNum < BMS_CELL_01) || (copy_u8CellNum > (BMS_NO_OF_CELLS - 1)))
     bb2:	84 30       	cpi	r24, 0x04	; 4
     bb4:	90 f5       	brcc	.+100    	; 0xc1a <BMS_f32ReadVoltage+0x72>
     bb6:	c8 2f       	mov	r28, r24
		return Local_f32InputValue;
	
	/**Determine the right resistor ratios*/
	f32 Local_f32ResistorRatio = (11.0 / 14.0) / (BMS_NO_OF_CELLS - copy_u8CellNum);
     bb8:	64 e0       	ldi	r22, 0x04	; 4
     bba:	70 e0       	ldi	r23, 0x00	; 0
     bbc:	68 1b       	sub	r22, r24
     bbe:	71 09       	sbc	r23, r1
     bc0:	07 2e       	mov	r0, r23
     bc2:	00 0c       	add	r0, r0
     bc4:	88 0b       	sbc	r24, r24
     bc6:	99 0b       	sbc	r25, r25
     bc8:	0e 94 a2 07 	call	0xf44	; 0xf44 <__floatsisf>
     bcc:	9b 01       	movw	r18, r22
     bce:	ac 01       	movw	r20, r24
     bd0:	62 e9       	ldi	r22, 0x92	; 146
     bd2:	74 e2       	ldi	r23, 0x24	; 36
     bd4:	89 e4       	ldi	r24, 0x49	; 73
     bd6:	9f e3       	ldi	r25, 0x3F	; 63
     bd8:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__divsf3>
     bdc:	6b 01       	movw	r12, r22
     bde:	7c 01       	movw	r14, r24
		uppermost cell voltage = 4.2 * 3 = 12.6
		= ADC_reading * R_ratio / (3 - 0)
	*/
	
	/**Read ADC pin value (digital)*/
	Local_u16DigitalValue = ADC_u16GetResultSync(copy_u8CellNum);
     be0:	8c 2f       	mov	r24, r28
     be2:	0e 94 89 01 	call	0x312	; 0x312 <ADC_u16GetResultSync>
	
	/**Convert it from V to mV*/
	Local_f32AnalogValue = ((Local_u16DigitalValue * 5) / 1024.0);
     be6:	bc 01       	movw	r22, r24
     be8:	66 0f       	add	r22, r22
     bea:	77 1f       	adc	r23, r23
     bec:	66 0f       	add	r22, r22
     bee:	77 1f       	adc	r23, r23
     bf0:	68 0f       	add	r22, r24
     bf2:	79 1f       	adc	r23, r25
     bf4:	80 e0       	ldi	r24, 0x00	; 0
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	0e 94 a0 07 	call	0xf40	; 0xf40 <__floatunsisf>
     bfc:	20 e0       	ldi	r18, 0x00	; 0
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	40 e8       	ldi	r20, 0x80	; 128
     c02:	5a e3       	ldi	r21, 0x3A	; 58
     c04:	0e 94 52 08 	call	0x10a4	; 0x10a4 <__mulsf3>
	
	/**Calculate Vin in mV*/
	Local_f32InputValue = Local_f32AnalogValue / Local_f32ResistorRatio;
     c08:	a7 01       	movw	r20, r14
     c0a:	96 01       	movw	r18, r12
     c0c:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__divsf3>

	/**Return Vin in mV*/
	return Local_f32InputValue;
     c10:	56 2f       	mov	r21, r22
     c12:	47 2f       	mov	r20, r23
     c14:	38 2f       	mov	r19, r24
     c16:	29 2f       	mov	r18, r25
     c18:	04 c0       	rjmp	.+8      	; 0xc22 <BMS_f32ReadVoltage+0x7a>
	f32 Local_f32AnalogValue = 0;
	f32 Local_f32InputValue = 0;
	
	/**return 0 in case of wrong cell number*/
	if ((copy_u8CellNum < BMS_CELL_01) || (copy_u8CellNum > (BMS_NO_OF_CELLS - 1)))
		return Local_f32InputValue;
     c1a:	50 e0       	ldi	r21, 0x00	; 0
     c1c:	40 e0       	ldi	r20, 0x00	; 0
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	20 e0       	ldi	r18, 0x00	; 0
	/**Calculate Vin in mV*/
	Local_f32InputValue = Local_f32AnalogValue / Local_f32ResistorRatio;

	/**Return Vin in mV*/
	return Local_f32InputValue;
}
     c22:	65 2f       	mov	r22, r21
     c24:	74 2f       	mov	r23, r20
     c26:	83 2f       	mov	r24, r19
     c28:	92 2f       	mov	r25, r18
     c2a:	cf 91       	pop	r28
     c2c:	ff 90       	pop	r15
     c2e:	ef 90       	pop	r14
     c30:	df 90       	pop	r13
     c32:	cf 90       	pop	r12
     c34:	08 95       	ret

00000c36 <DISP_voidDisplayOnLCD>:
	is_updated = true;
}


void DISP_voidDisplayOnLCD(f32 Copy_f32Result)
{
     c36:	8f 92       	push	r8
     c38:	9f 92       	push	r9
     c3a:	af 92       	push	r10
     c3c:	bf 92       	push	r11
     c3e:	cf 92       	push	r12
     c40:	df 92       	push	r13
     c42:	ef 92       	push	r14
     c44:	ff 92       	push	r15
     c46:	4b 01       	movw	r8, r22
     c48:	5c 01       	movw	r10, r24
	s32 Displayed = 0 , Decimal = 1;
	u8 counter = 0;
	
	if(Copy_f32Result < 0)
     c4a:	20 e0       	ldi	r18, 0x00	; 0
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	a9 01       	movw	r20, r18
     c50:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__cmpsf2>
     c54:	88 23       	and	r24, r24
     c56:	3c f4       	brge	.+14     	; 0xc66 <DISP_voidDisplayOnLCD+0x30>
	{
		LCD_voidDisplayChar('-');
     c58:	8d e2       	ldi	r24, 0x2D	; 45
     c5a:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <LCD_voidDisplayChar>
		Copy_f32Result = -1 * Copy_f32Result;
     c5e:	b7 fa       	bst	r11, 7
     c60:	b0 94       	com	r11
     c62:	b7 f8       	bld	r11, 7
     c64:	b0 94       	com	r11
	}
	
	Displayed = (u32) (Copy_f32Result);
     c66:	c5 01       	movw	r24, r10
     c68:	b4 01       	movw	r22, r8
     c6a:	0e 94 71 07 	call	0xee2	; 0xee2 <__fixunssfsi>
	LCD_voidDisplayInt(Displayed);
     c6e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <LCD_voidDisplayInt>
	
	for(counter = 0 ; counter < DECIMAL ; counter++)
     c72:	80 e0       	ldi	r24, 0x00	; 0
}


void DISP_voidDisplayOnLCD(f32 Copy_f32Result)
{
	s32 Displayed = 0 , Decimal = 1;
     c74:	c1 2c       	mov	r12, r1
     c76:	d1 2c       	mov	r13, r1
     c78:	76 01       	movw	r14, r12
     c7a:	c3 94       	inc	r12
	}
	
	Displayed = (u32) (Copy_f32Result);
	LCD_voidDisplayInt(Displayed);
	
	for(counter = 0 ; counter < DECIMAL ; counter++)
     c7c:	13 c0       	rjmp	.+38     	; 0xca4 <DISP_voidDisplayOnLCD+0x6e>
	{
		Decimal *= 10;
     c7e:	cc 0c       	add	r12, r12
     c80:	dd 1c       	adc	r13, r13
     c82:	ee 1c       	adc	r14, r14
     c84:	ff 1c       	adc	r15, r15
     c86:	b7 01       	movw	r22, r14
     c88:	a6 01       	movw	r20, r12
     c8a:	44 0f       	add	r20, r20
     c8c:	55 1f       	adc	r21, r21
     c8e:	66 1f       	adc	r22, r22
     c90:	77 1f       	adc	r23, r23
     c92:	44 0f       	add	r20, r20
     c94:	55 1f       	adc	r21, r21
     c96:	66 1f       	adc	r22, r22
     c98:	77 1f       	adc	r23, r23
     c9a:	c4 0e       	add	r12, r20
     c9c:	d5 1e       	adc	r13, r21
     c9e:	e6 1e       	adc	r14, r22
     ca0:	f7 1e       	adc	r15, r23
	}
	
	Displayed = (u32) (Copy_f32Result);
	LCD_voidDisplayInt(Displayed);
	
	for(counter = 0 ; counter < DECIMAL ; counter++)
     ca2:	8f 5f       	subi	r24, 0xFF	; 255
     ca4:	82 30       	cpi	r24, 0x02	; 2
     ca6:	58 f3       	brcs	.-42     	; 0xc7e <DISP_voidDisplayOnLCD+0x48>
	{
		Decimal *= 10;
	}
	
	LCD_voidDisplayChar('.');
     ca8:	8e e2       	ldi	r24, 0x2E	; 46
     caa:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <LCD_voidDisplayChar>
	Displayed = (u32) (Copy_f32Result * Decimal) % Decimal;
     cae:	c7 01       	movw	r24, r14
     cb0:	b6 01       	movw	r22, r12
     cb2:	0e 94 a2 07 	call	0xf44	; 0xf44 <__floatsisf>
     cb6:	a5 01       	movw	r20, r10
     cb8:	94 01       	movw	r18, r8
     cba:	0e 94 52 08 	call	0x10a4	; 0x10a4 <__mulsf3>
     cbe:	0e 94 71 07 	call	0xee2	; 0xee2 <__fixunssfsi>
     cc2:	a7 01       	movw	r20, r14
     cc4:	96 01       	movw	r18, r12
     cc6:	0e 94 bf 08 	call	0x117e	; 0x117e <__udivmodsi4>
	LCD_voidDisplayInt(Displayed);
     cca:	0e 94 1f 05 	call	0xa3e	; 0xa3e <LCD_voidDisplayInt>
     cce:	ff 90       	pop	r15
     cd0:	ef 90       	pop	r14
     cd2:	df 90       	pop	r13
     cd4:	cf 90       	pop	r12
     cd6:	bf 90       	pop	r11
     cd8:	af 90       	pop	r10
     cda:	9f 90       	pop	r9
     cdc:	8f 90       	pop	r8
     cde:	08 95       	ret

00000ce0 <BMS_voidDisplayReading>:
	return Local_f32InputValue;
}


void BMS_voidDisplayReading(u8 copy_u8CellNum, f32 copy_f32CellVoltage)
{
     ce0:	cf 92       	push	r12
     ce2:	df 92       	push	r13
     ce4:	ef 92       	push	r14
     ce6:	ff 92       	push	r15
     ce8:	cf 93       	push	r28
	if ((copy_u8CellNum < BMS_CELL_01) || (copy_u8CellNum >= BMS_NO_OF_CELLS))
     cea:	84 30       	cpi	r24, 0x04	; 4
     cec:	d8 f5       	brcc	.+118    	; 0xd64 <BMS_voidDisplayReading+0x84>
     cee:	6a 01       	movw	r12, r20
     cf0:	7b 01       	movw	r14, r22
     cf2:	c8 2f       	mov	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cf4:	8f ec       	ldi	r24, 0xCF	; 207
     cf6:	97 e0       	ldi	r25, 0x07	; 7
     cf8:	01 97       	sbiw	r24, 0x01	; 1
     cfa:	f1 f7       	brne	.-4      	; 0xcf8 <BMS_voidDisplayReading+0x18>
     cfc:	00 c0       	rjmp	.+0      	; 0xcfe <BMS_voidDisplayReading+0x1e>
     cfe:	00 00       	nop
		return;
	_delay_ms(1);
	LCD_voidDisplayStr("C");
     d00:	81 e6       	ldi	r24, 0x61	; 97
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	0e 94 0a 05 	call	0xa14	; 0xa14 <LCD_voidDisplayStr>
     d08:	8f ec       	ldi	r24, 0xCF	; 207
     d0a:	97 e0       	ldi	r25, 0x07	; 7
     d0c:	01 97       	sbiw	r24, 0x01	; 1
     d0e:	f1 f7       	brne	.-4      	; 0xd0c <BMS_voidDisplayReading+0x2c>
     d10:	00 c0       	rjmp	.+0      	; 0xd12 <BMS_voidDisplayReading+0x32>
     d12:	00 00       	nop
	_delay_ms(1);
	LCD_voidDisplayInt(copy_u8CellNum + 1);
     d14:	6c 2f       	mov	r22, r28
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	6f 5f       	subi	r22, 0xFF	; 255
     d1a:	7f 4f       	sbci	r23, 0xFF	; 255
     d1c:	07 2e       	mov	r0, r23
     d1e:	00 0c       	add	r0, r0
     d20:	88 0b       	sbc	r24, r24
     d22:	99 0b       	sbc	r25, r25
     d24:	0e 94 1f 05 	call	0xa3e	; 0xa3e <LCD_voidDisplayInt>
     d28:	8f ec       	ldi	r24, 0xCF	; 207
     d2a:	97 e0       	ldi	r25, 0x07	; 7
     d2c:	01 97       	sbiw	r24, 0x01	; 1
     d2e:	f1 f7       	brne	.-4      	; 0xd2c <BMS_voidDisplayReading+0x4c>
     d30:	00 c0       	rjmp	.+0      	; 0xd32 <BMS_voidDisplayReading+0x52>
     d32:	00 00       	nop
	_delay_ms(1);
	LCD_voidDisplayStr(" = ");
     d34:	83 e6       	ldi	r24, 0x63	; 99
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 0a 05 	call	0xa14	; 0xa14 <LCD_voidDisplayStr>
	DISP_voidDisplayOnLCD(copy_f32CellVoltage);
     d3c:	c7 01       	movw	r24, r14
     d3e:	b6 01       	movw	r22, r12
     d40:	0e 94 1b 06 	call	0xc36	; 0xc36 <DISP_voidDisplayOnLCD>
     d44:	8f ec       	ldi	r24, 0xCF	; 207
     d46:	97 e0       	ldi	r25, 0x07	; 7
     d48:	01 97       	sbiw	r24, 0x01	; 1
     d4a:	f1 f7       	brne	.-4      	; 0xd48 <BMS_voidDisplayReading+0x68>
     d4c:	00 c0       	rjmp	.+0      	; 0xd4e <BMS_voidDisplayReading+0x6e>
     d4e:	00 00       	nop
	_delay_ms(1);
	LCD_voidDisplayStr(" V");
     d50:	87 e6       	ldi	r24, 0x67	; 103
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	0e 94 0a 05 	call	0xa14	; 0xa14 <LCD_voidDisplayStr>
     d58:	8f ec       	ldi	r24, 0xCF	; 207
     d5a:	97 e0       	ldi	r25, 0x07	; 7
     d5c:	01 97       	sbiw	r24, 0x01	; 1
     d5e:	f1 f7       	brne	.-4      	; 0xd5c <BMS_voidDisplayReading+0x7c>
     d60:	00 c0       	rjmp	.+0      	; 0xd62 <BMS_voidDisplayReading+0x82>
     d62:	00 00       	nop
	_delay_ms(1);
	
}
     d64:	cf 91       	pop	r28
     d66:	ff 90       	pop	r15
     d68:	ef 90       	pop	r14
     d6a:	df 90       	pop	r13
     d6c:	cf 90       	pop	r12
     d6e:	08 95       	ret

00000d70 <main>:



int main(void)
{
	BMS_voidInit();
     d70:	0e 94 ab 05 	call	0xb56	; 0xb56 <BMS_voidInit>
	
	LCD_voidInitDisplay();
     d74:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidInitDisplay>
	BMS_voidDisplayReading(BMS_CELL_04, local_f32Temp);*/
	
	
    while(true)
    {
        if (is_updated)
     d78:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     d7c:	88 23       	and	r24, r24
     d7e:	e1 f3       	breq	.-8      	; 0xd78 <main+0x8>
		{
			if (BMS_u8CellIndex % 2 == 0)
     d80:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
     d84:	98 2f       	mov	r25, r24
     d86:	91 70       	andi	r25, 0x01	; 1
     d88:	80 fd       	sbrc	r24, 0
     d8a:	19 c0       	rjmp	.+50     	; 0xdbe <main+0x4e>
			{
				local_f32Temp = BMS_f32ReadVoltage(BMS_CELL_01);
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	0e 94 d4 05 	call	0xba8	; 0xba8 <BMS_f32ReadVoltage>
     d92:	ab 01       	movw	r20, r22
     d94:	bc 01       	movw	r22, r24
				BMS_voidDisplayReading(BMS_CELL_01, local_f32Temp);
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	0e 94 70 06 	call	0xce0	; 0xce0 <BMS_voidDisplayReading>
				
				local_f32Temp = BMS_f32ReadVoltage(BMS_CELL_02);
     d9c:	81 e0       	ldi	r24, 0x01	; 1
     d9e:	0e 94 d4 05 	call	0xba8	; 0xba8 <BMS_f32ReadVoltage>
     da2:	6b 01       	movw	r12, r22
     da4:	7c 01       	movw	r14, r24
				LCD_voidSetCursorPosition(0,2);
     da6:	62 e0       	ldi	r22, 0x02	; 2
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	0e 94 9e 05 	call	0xb3c	; 0xb3c <LCD_voidSetCursorPosition>
				BMS_voidDisplayReading(BMS_CELL_02, local_f32Temp);
     dae:	b7 01       	movw	r22, r14
     db0:	a6 01       	movw	r20, r12
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	0e 94 70 06 	call	0xce0	; 0xce0 <BMS_voidDisplayReading>
				
				is_updated = false;
     db8:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     dbc:	dd cf       	rjmp	.-70     	; 0xd78 <main+0x8>
			}
			else if (BMS_u8CellIndex % 2 == 1)
     dbe:	99 23       	and	r25, r25
     dc0:	d9 f2       	breq	.-74     	; 0xd78 <main+0x8>
			{
				
				local_f32Temp = BMS_f32ReadVoltage(BMS_CELL_03);
     dc2:	82 e0       	ldi	r24, 0x02	; 2
     dc4:	0e 94 d4 05 	call	0xba8	; 0xba8 <BMS_f32ReadVoltage>
     dc8:	ab 01       	movw	r20, r22
     dca:	bc 01       	movw	r22, r24
				BMS_voidDisplayReading(BMS_CELL_03, local_f32Temp);
     dcc:	82 e0       	ldi	r24, 0x02	; 2
     dce:	0e 94 70 06 	call	0xce0	; 0xce0 <BMS_voidDisplayReading>
				
				local_f32Temp = BMS_f32ReadVoltage(BMS_CELL_04);
     dd2:	83 e0       	ldi	r24, 0x03	; 3
     dd4:	0e 94 d4 05 	call	0xba8	; 0xba8 <BMS_f32ReadVoltage>
     dd8:	6b 01       	movw	r12, r22
     dda:	7c 01       	movw	r14, r24
				LCD_voidSetCursorPosition(0,2);
     ddc:	62 e0       	ldi	r22, 0x02	; 2
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	0e 94 9e 05 	call	0xb3c	; 0xb3c <LCD_voidSetCursorPosition>
				BMS_voidDisplayReading(BMS_CELL_04, local_f32Temp);
     de4:	b7 01       	movw	r22, r14
     de6:	a6 01       	movw	r20, r12
     de8:	83 e0       	ldi	r24, 0x03	; 3
     dea:	0e 94 70 06 	call	0xce0	; 0xce0 <BMS_voidDisplayReading>
				
				is_updated = false;
     dee:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     df2:	c2 cf       	rjmp	.-124    	; 0xd78 <main+0x8>

00000df4 <__cmpsf2>:
     df4:	0e 94 dd 07 	call	0xfba	; 0xfba <__fp_cmp>
     df8:	08 f4       	brcc	.+2      	; 0xdfc <__cmpsf2+0x8>
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	08 95       	ret

00000dfe <__divsf3>:
     dfe:	0e 94 13 07 	call	0xe26	; 0xe26 <__divsf3x>
     e02:	0c 94 18 08 	jmp	0x1030	; 0x1030 <__fp_round>
     e06:	0e 94 11 08 	call	0x1022	; 0x1022 <__fp_pscB>
     e0a:	58 f0       	brcs	.+22     	; 0xe22 <__divsf3+0x24>
     e0c:	0e 94 0a 08 	call	0x1014	; 0x1014 <__fp_pscA>
     e10:	40 f0       	brcs	.+16     	; 0xe22 <__divsf3+0x24>
     e12:	29 f4       	brne	.+10     	; 0xe1e <__divsf3+0x20>
     e14:	5f 3f       	cpi	r21, 0xFF	; 255
     e16:	29 f0       	breq	.+10     	; 0xe22 <__divsf3+0x24>
     e18:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__fp_inf>
     e1c:	51 11       	cpse	r21, r1
     e1e:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <__fp_szero>
     e22:	0c 94 07 08 	jmp	0x100e	; 0x100e <__fp_nan>

00000e26 <__divsf3x>:
     e26:	0e 94 29 08 	call	0x1052	; 0x1052 <__fp_split3>
     e2a:	68 f3       	brcs	.-38     	; 0xe06 <__divsf3+0x8>

00000e2c <__divsf3_pse>:
     e2c:	99 23       	and	r25, r25
     e2e:	b1 f3       	breq	.-20     	; 0xe1c <__divsf3+0x1e>
     e30:	55 23       	and	r21, r21
     e32:	91 f3       	breq	.-28     	; 0xe18 <__divsf3+0x1a>
     e34:	95 1b       	sub	r25, r21
     e36:	55 0b       	sbc	r21, r21
     e38:	bb 27       	eor	r27, r27
     e3a:	aa 27       	eor	r26, r26
     e3c:	62 17       	cp	r22, r18
     e3e:	73 07       	cpc	r23, r19
     e40:	84 07       	cpc	r24, r20
     e42:	38 f0       	brcs	.+14     	; 0xe52 <__divsf3_pse+0x26>
     e44:	9f 5f       	subi	r25, 0xFF	; 255
     e46:	5f 4f       	sbci	r21, 0xFF	; 255
     e48:	22 0f       	add	r18, r18
     e4a:	33 1f       	adc	r19, r19
     e4c:	44 1f       	adc	r20, r20
     e4e:	aa 1f       	adc	r26, r26
     e50:	a9 f3       	breq	.-22     	; 0xe3c <__divsf3_pse+0x10>
     e52:	35 d0       	rcall	.+106    	; 0xebe <__divsf3_pse+0x92>
     e54:	0e 2e       	mov	r0, r30
     e56:	3a f0       	brmi	.+14     	; 0xe66 <__divsf3_pse+0x3a>
     e58:	e0 e8       	ldi	r30, 0x80	; 128
     e5a:	32 d0       	rcall	.+100    	; 0xec0 <__divsf3_pse+0x94>
     e5c:	91 50       	subi	r25, 0x01	; 1
     e5e:	50 40       	sbci	r21, 0x00	; 0
     e60:	e6 95       	lsr	r30
     e62:	00 1c       	adc	r0, r0
     e64:	ca f7       	brpl	.-14     	; 0xe58 <__divsf3_pse+0x2c>
     e66:	2b d0       	rcall	.+86     	; 0xebe <__divsf3_pse+0x92>
     e68:	fe 2f       	mov	r31, r30
     e6a:	29 d0       	rcall	.+82     	; 0xebe <__divsf3_pse+0x92>
     e6c:	66 0f       	add	r22, r22
     e6e:	77 1f       	adc	r23, r23
     e70:	88 1f       	adc	r24, r24
     e72:	bb 1f       	adc	r27, r27
     e74:	26 17       	cp	r18, r22
     e76:	37 07       	cpc	r19, r23
     e78:	48 07       	cpc	r20, r24
     e7a:	ab 07       	cpc	r26, r27
     e7c:	b0 e8       	ldi	r27, 0x80	; 128
     e7e:	09 f0       	breq	.+2      	; 0xe82 <__divsf3_pse+0x56>
     e80:	bb 0b       	sbc	r27, r27
     e82:	80 2d       	mov	r24, r0
     e84:	bf 01       	movw	r22, r30
     e86:	ff 27       	eor	r31, r31
     e88:	93 58       	subi	r25, 0x83	; 131
     e8a:	5f 4f       	sbci	r21, 0xFF	; 255
     e8c:	3a f0       	brmi	.+14     	; 0xe9c <__divsf3_pse+0x70>
     e8e:	9e 3f       	cpi	r25, 0xFE	; 254
     e90:	51 05       	cpc	r21, r1
     e92:	78 f0       	brcs	.+30     	; 0xeb2 <__divsf3_pse+0x86>
     e94:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__fp_inf>
     e98:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <__fp_szero>
     e9c:	5f 3f       	cpi	r21, 0xFF	; 255
     e9e:	e4 f3       	brlt	.-8      	; 0xe98 <__divsf3_pse+0x6c>
     ea0:	98 3e       	cpi	r25, 0xE8	; 232
     ea2:	d4 f3       	brlt	.-12     	; 0xe98 <__divsf3_pse+0x6c>
     ea4:	86 95       	lsr	r24
     ea6:	77 95       	ror	r23
     ea8:	67 95       	ror	r22
     eaa:	b7 95       	ror	r27
     eac:	f7 95       	ror	r31
     eae:	9f 5f       	subi	r25, 0xFF	; 255
     eb0:	c9 f7       	brne	.-14     	; 0xea4 <__divsf3_pse+0x78>
     eb2:	88 0f       	add	r24, r24
     eb4:	91 1d       	adc	r25, r1
     eb6:	96 95       	lsr	r25
     eb8:	87 95       	ror	r24
     eba:	97 f9       	bld	r25, 7
     ebc:	08 95       	ret
     ebe:	e1 e0       	ldi	r30, 0x01	; 1
     ec0:	66 0f       	add	r22, r22
     ec2:	77 1f       	adc	r23, r23
     ec4:	88 1f       	adc	r24, r24
     ec6:	bb 1f       	adc	r27, r27
     ec8:	62 17       	cp	r22, r18
     eca:	73 07       	cpc	r23, r19
     ecc:	84 07       	cpc	r24, r20
     ece:	ba 07       	cpc	r27, r26
     ed0:	20 f0       	brcs	.+8      	; 0xeda <__divsf3_pse+0xae>
     ed2:	62 1b       	sub	r22, r18
     ed4:	73 0b       	sbc	r23, r19
     ed6:	84 0b       	sbc	r24, r20
     ed8:	ba 0b       	sbc	r27, r26
     eda:	ee 1f       	adc	r30, r30
     edc:	88 f7       	brcc	.-30     	; 0xec0 <__divsf3_pse+0x94>
     ede:	e0 95       	com	r30
     ee0:	08 95       	ret

00000ee2 <__fixunssfsi>:
     ee2:	0e 94 31 08 	call	0x1062	; 0x1062 <__fp_splitA>
     ee6:	88 f0       	brcs	.+34     	; 0xf0a <__fixunssfsi+0x28>
     ee8:	9f 57       	subi	r25, 0x7F	; 127
     eea:	98 f0       	brcs	.+38     	; 0xf12 <__fixunssfsi+0x30>
     eec:	b9 2f       	mov	r27, r25
     eee:	99 27       	eor	r25, r25
     ef0:	b7 51       	subi	r27, 0x17	; 23
     ef2:	b0 f0       	brcs	.+44     	; 0xf20 <__fixunssfsi+0x3e>
     ef4:	e1 f0       	breq	.+56     	; 0xf2e <__fixunssfsi+0x4c>
     ef6:	66 0f       	add	r22, r22
     ef8:	77 1f       	adc	r23, r23
     efa:	88 1f       	adc	r24, r24
     efc:	99 1f       	adc	r25, r25
     efe:	1a f0       	brmi	.+6      	; 0xf06 <__fixunssfsi+0x24>
     f00:	ba 95       	dec	r27
     f02:	c9 f7       	brne	.-14     	; 0xef6 <__fixunssfsi+0x14>
     f04:	14 c0       	rjmp	.+40     	; 0xf2e <__fixunssfsi+0x4c>
     f06:	b1 30       	cpi	r27, 0x01	; 1
     f08:	91 f0       	breq	.+36     	; 0xf2e <__fixunssfsi+0x4c>
     f0a:	0e 94 4b 08 	call	0x1096	; 0x1096 <__fp_zero>
     f0e:	b1 e0       	ldi	r27, 0x01	; 1
     f10:	08 95       	ret
     f12:	0c 94 4b 08 	jmp	0x1096	; 0x1096 <__fp_zero>
     f16:	67 2f       	mov	r22, r23
     f18:	78 2f       	mov	r23, r24
     f1a:	88 27       	eor	r24, r24
     f1c:	b8 5f       	subi	r27, 0xF8	; 248
     f1e:	39 f0       	breq	.+14     	; 0xf2e <__fixunssfsi+0x4c>
     f20:	b9 3f       	cpi	r27, 0xF9	; 249
     f22:	cc f3       	brlt	.-14     	; 0xf16 <__fixunssfsi+0x34>
     f24:	86 95       	lsr	r24
     f26:	77 95       	ror	r23
     f28:	67 95       	ror	r22
     f2a:	b3 95       	inc	r27
     f2c:	d9 f7       	brne	.-10     	; 0xf24 <__fixunssfsi+0x42>
     f2e:	3e f4       	brtc	.+14     	; 0xf3e <__fixunssfsi+0x5c>
     f30:	90 95       	com	r25
     f32:	80 95       	com	r24
     f34:	70 95       	com	r23
     f36:	61 95       	neg	r22
     f38:	7f 4f       	sbci	r23, 0xFF	; 255
     f3a:	8f 4f       	sbci	r24, 0xFF	; 255
     f3c:	9f 4f       	sbci	r25, 0xFF	; 255
     f3e:	08 95       	ret

00000f40 <__floatunsisf>:
     f40:	e8 94       	clt
     f42:	09 c0       	rjmp	.+18     	; 0xf56 <__floatsisf+0x12>

00000f44 <__floatsisf>:
     f44:	97 fb       	bst	r25, 7
     f46:	3e f4       	brtc	.+14     	; 0xf56 <__floatsisf+0x12>
     f48:	90 95       	com	r25
     f4a:	80 95       	com	r24
     f4c:	70 95       	com	r23
     f4e:	61 95       	neg	r22
     f50:	7f 4f       	sbci	r23, 0xFF	; 255
     f52:	8f 4f       	sbci	r24, 0xFF	; 255
     f54:	9f 4f       	sbci	r25, 0xFF	; 255
     f56:	99 23       	and	r25, r25
     f58:	a9 f0       	breq	.+42     	; 0xf84 <__floatsisf+0x40>
     f5a:	f9 2f       	mov	r31, r25
     f5c:	96 e9       	ldi	r25, 0x96	; 150
     f5e:	bb 27       	eor	r27, r27
     f60:	93 95       	inc	r25
     f62:	f6 95       	lsr	r31
     f64:	87 95       	ror	r24
     f66:	77 95       	ror	r23
     f68:	67 95       	ror	r22
     f6a:	b7 95       	ror	r27
     f6c:	f1 11       	cpse	r31, r1
     f6e:	f8 cf       	rjmp	.-16     	; 0xf60 <__floatsisf+0x1c>
     f70:	fa f4       	brpl	.+62     	; 0xfb0 <__floatsisf+0x6c>
     f72:	bb 0f       	add	r27, r27
     f74:	11 f4       	brne	.+4      	; 0xf7a <__floatsisf+0x36>
     f76:	60 ff       	sbrs	r22, 0
     f78:	1b c0       	rjmp	.+54     	; 0xfb0 <__floatsisf+0x6c>
     f7a:	6f 5f       	subi	r22, 0xFF	; 255
     f7c:	7f 4f       	sbci	r23, 0xFF	; 255
     f7e:	8f 4f       	sbci	r24, 0xFF	; 255
     f80:	9f 4f       	sbci	r25, 0xFF	; 255
     f82:	16 c0       	rjmp	.+44     	; 0xfb0 <__floatsisf+0x6c>
     f84:	88 23       	and	r24, r24
     f86:	11 f0       	breq	.+4      	; 0xf8c <__floatsisf+0x48>
     f88:	96 e9       	ldi	r25, 0x96	; 150
     f8a:	11 c0       	rjmp	.+34     	; 0xfae <__floatsisf+0x6a>
     f8c:	77 23       	and	r23, r23
     f8e:	21 f0       	breq	.+8      	; 0xf98 <__floatsisf+0x54>
     f90:	9e e8       	ldi	r25, 0x8E	; 142
     f92:	87 2f       	mov	r24, r23
     f94:	76 2f       	mov	r23, r22
     f96:	05 c0       	rjmp	.+10     	; 0xfa2 <__floatsisf+0x5e>
     f98:	66 23       	and	r22, r22
     f9a:	71 f0       	breq	.+28     	; 0xfb8 <__floatsisf+0x74>
     f9c:	96 e8       	ldi	r25, 0x86	; 134
     f9e:	86 2f       	mov	r24, r22
     fa0:	70 e0       	ldi	r23, 0x00	; 0
     fa2:	60 e0       	ldi	r22, 0x00	; 0
     fa4:	2a f0       	brmi	.+10     	; 0xfb0 <__floatsisf+0x6c>
     fa6:	9a 95       	dec	r25
     fa8:	66 0f       	add	r22, r22
     faa:	77 1f       	adc	r23, r23
     fac:	88 1f       	adc	r24, r24
     fae:	da f7       	brpl	.-10     	; 0xfa6 <__floatsisf+0x62>
     fb0:	88 0f       	add	r24, r24
     fb2:	96 95       	lsr	r25
     fb4:	87 95       	ror	r24
     fb6:	97 f9       	bld	r25, 7
     fb8:	08 95       	ret

00000fba <__fp_cmp>:
     fba:	99 0f       	add	r25, r25
     fbc:	00 08       	sbc	r0, r0
     fbe:	55 0f       	add	r21, r21
     fc0:	aa 0b       	sbc	r26, r26
     fc2:	e0 e8       	ldi	r30, 0x80	; 128
     fc4:	fe ef       	ldi	r31, 0xFE	; 254
     fc6:	16 16       	cp	r1, r22
     fc8:	17 06       	cpc	r1, r23
     fca:	e8 07       	cpc	r30, r24
     fcc:	f9 07       	cpc	r31, r25
     fce:	c0 f0       	brcs	.+48     	; 0x1000 <__fp_cmp+0x46>
     fd0:	12 16       	cp	r1, r18
     fd2:	13 06       	cpc	r1, r19
     fd4:	e4 07       	cpc	r30, r20
     fd6:	f5 07       	cpc	r31, r21
     fd8:	98 f0       	brcs	.+38     	; 0x1000 <__fp_cmp+0x46>
     fda:	62 1b       	sub	r22, r18
     fdc:	73 0b       	sbc	r23, r19
     fde:	84 0b       	sbc	r24, r20
     fe0:	95 0b       	sbc	r25, r21
     fe2:	39 f4       	brne	.+14     	; 0xff2 <__fp_cmp+0x38>
     fe4:	0a 26       	eor	r0, r26
     fe6:	61 f0       	breq	.+24     	; 0x1000 <__fp_cmp+0x46>
     fe8:	23 2b       	or	r18, r19
     fea:	24 2b       	or	r18, r20
     fec:	25 2b       	or	r18, r21
     fee:	21 f4       	brne	.+8      	; 0xff8 <__fp_cmp+0x3e>
     ff0:	08 95       	ret
     ff2:	0a 26       	eor	r0, r26
     ff4:	09 f4       	brne	.+2      	; 0xff8 <__fp_cmp+0x3e>
     ff6:	a1 40       	sbci	r26, 0x01	; 1
     ff8:	a6 95       	lsr	r26
     ffa:	8f ef       	ldi	r24, 0xFF	; 255
     ffc:	81 1d       	adc	r24, r1
     ffe:	81 1d       	adc	r24, r1
    1000:	08 95       	ret

00001002 <__fp_inf>:
    1002:	97 f9       	bld	r25, 7
    1004:	9f 67       	ori	r25, 0x7F	; 127
    1006:	80 e8       	ldi	r24, 0x80	; 128
    1008:	70 e0       	ldi	r23, 0x00	; 0
    100a:	60 e0       	ldi	r22, 0x00	; 0
    100c:	08 95       	ret

0000100e <__fp_nan>:
    100e:	9f ef       	ldi	r25, 0xFF	; 255
    1010:	80 ec       	ldi	r24, 0xC0	; 192
    1012:	08 95       	ret

00001014 <__fp_pscA>:
    1014:	00 24       	eor	r0, r0
    1016:	0a 94       	dec	r0
    1018:	16 16       	cp	r1, r22
    101a:	17 06       	cpc	r1, r23
    101c:	18 06       	cpc	r1, r24
    101e:	09 06       	cpc	r0, r25
    1020:	08 95       	ret

00001022 <__fp_pscB>:
    1022:	00 24       	eor	r0, r0
    1024:	0a 94       	dec	r0
    1026:	12 16       	cp	r1, r18
    1028:	13 06       	cpc	r1, r19
    102a:	14 06       	cpc	r1, r20
    102c:	05 06       	cpc	r0, r21
    102e:	08 95       	ret

00001030 <__fp_round>:
    1030:	09 2e       	mov	r0, r25
    1032:	03 94       	inc	r0
    1034:	00 0c       	add	r0, r0
    1036:	11 f4       	brne	.+4      	; 0x103c <__fp_round+0xc>
    1038:	88 23       	and	r24, r24
    103a:	52 f0       	brmi	.+20     	; 0x1050 <__fp_round+0x20>
    103c:	bb 0f       	add	r27, r27
    103e:	40 f4       	brcc	.+16     	; 0x1050 <__fp_round+0x20>
    1040:	bf 2b       	or	r27, r31
    1042:	11 f4       	brne	.+4      	; 0x1048 <__fp_round+0x18>
    1044:	60 ff       	sbrs	r22, 0
    1046:	04 c0       	rjmp	.+8      	; 0x1050 <__fp_round+0x20>
    1048:	6f 5f       	subi	r22, 0xFF	; 255
    104a:	7f 4f       	sbci	r23, 0xFF	; 255
    104c:	8f 4f       	sbci	r24, 0xFF	; 255
    104e:	9f 4f       	sbci	r25, 0xFF	; 255
    1050:	08 95       	ret

00001052 <__fp_split3>:
    1052:	57 fd       	sbrc	r21, 7
    1054:	90 58       	subi	r25, 0x80	; 128
    1056:	44 0f       	add	r20, r20
    1058:	55 1f       	adc	r21, r21
    105a:	59 f0       	breq	.+22     	; 0x1072 <__fp_splitA+0x10>
    105c:	5f 3f       	cpi	r21, 0xFF	; 255
    105e:	71 f0       	breq	.+28     	; 0x107c <__fp_splitA+0x1a>
    1060:	47 95       	ror	r20

00001062 <__fp_splitA>:
    1062:	88 0f       	add	r24, r24
    1064:	97 fb       	bst	r25, 7
    1066:	99 1f       	adc	r25, r25
    1068:	61 f0       	breq	.+24     	; 0x1082 <__fp_splitA+0x20>
    106a:	9f 3f       	cpi	r25, 0xFF	; 255
    106c:	79 f0       	breq	.+30     	; 0x108c <__fp_splitA+0x2a>
    106e:	87 95       	ror	r24
    1070:	08 95       	ret
    1072:	12 16       	cp	r1, r18
    1074:	13 06       	cpc	r1, r19
    1076:	14 06       	cpc	r1, r20
    1078:	55 1f       	adc	r21, r21
    107a:	f2 cf       	rjmp	.-28     	; 0x1060 <__fp_split3+0xe>
    107c:	46 95       	lsr	r20
    107e:	f1 df       	rcall	.-30     	; 0x1062 <__fp_splitA>
    1080:	08 c0       	rjmp	.+16     	; 0x1092 <__fp_splitA+0x30>
    1082:	16 16       	cp	r1, r22
    1084:	17 06       	cpc	r1, r23
    1086:	18 06       	cpc	r1, r24
    1088:	99 1f       	adc	r25, r25
    108a:	f1 cf       	rjmp	.-30     	; 0x106e <__fp_splitA+0xc>
    108c:	86 95       	lsr	r24
    108e:	71 05       	cpc	r23, r1
    1090:	61 05       	cpc	r22, r1
    1092:	08 94       	sec
    1094:	08 95       	ret

00001096 <__fp_zero>:
    1096:	e8 94       	clt

00001098 <__fp_szero>:
    1098:	bb 27       	eor	r27, r27
    109a:	66 27       	eor	r22, r22
    109c:	77 27       	eor	r23, r23
    109e:	cb 01       	movw	r24, r22
    10a0:	97 f9       	bld	r25, 7
    10a2:	08 95       	ret

000010a4 <__mulsf3>:
    10a4:	0e 94 65 08 	call	0x10ca	; 0x10ca <__mulsf3x>
    10a8:	0c 94 18 08 	jmp	0x1030	; 0x1030 <__fp_round>
    10ac:	0e 94 0a 08 	call	0x1014	; 0x1014 <__fp_pscA>
    10b0:	38 f0       	brcs	.+14     	; 0x10c0 <__mulsf3+0x1c>
    10b2:	0e 94 11 08 	call	0x1022	; 0x1022 <__fp_pscB>
    10b6:	20 f0       	brcs	.+8      	; 0x10c0 <__mulsf3+0x1c>
    10b8:	95 23       	and	r25, r21
    10ba:	11 f0       	breq	.+4      	; 0x10c0 <__mulsf3+0x1c>
    10bc:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__fp_inf>
    10c0:	0c 94 07 08 	jmp	0x100e	; 0x100e <__fp_nan>
    10c4:	11 24       	eor	r1, r1
    10c6:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <__fp_szero>

000010ca <__mulsf3x>:
    10ca:	0e 94 29 08 	call	0x1052	; 0x1052 <__fp_split3>
    10ce:	70 f3       	brcs	.-36     	; 0x10ac <__mulsf3+0x8>

000010d0 <__mulsf3_pse>:
    10d0:	95 9f       	mul	r25, r21
    10d2:	c1 f3       	breq	.-16     	; 0x10c4 <__mulsf3+0x20>
    10d4:	95 0f       	add	r25, r21
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	55 1f       	adc	r21, r21
    10da:	62 9f       	mul	r22, r18
    10dc:	f0 01       	movw	r30, r0
    10de:	72 9f       	mul	r23, r18
    10e0:	bb 27       	eor	r27, r27
    10e2:	f0 0d       	add	r31, r0
    10e4:	b1 1d       	adc	r27, r1
    10e6:	63 9f       	mul	r22, r19
    10e8:	aa 27       	eor	r26, r26
    10ea:	f0 0d       	add	r31, r0
    10ec:	b1 1d       	adc	r27, r1
    10ee:	aa 1f       	adc	r26, r26
    10f0:	64 9f       	mul	r22, r20
    10f2:	66 27       	eor	r22, r22
    10f4:	b0 0d       	add	r27, r0
    10f6:	a1 1d       	adc	r26, r1
    10f8:	66 1f       	adc	r22, r22
    10fa:	82 9f       	mul	r24, r18
    10fc:	22 27       	eor	r18, r18
    10fe:	b0 0d       	add	r27, r0
    1100:	a1 1d       	adc	r26, r1
    1102:	62 1f       	adc	r22, r18
    1104:	73 9f       	mul	r23, r19
    1106:	b0 0d       	add	r27, r0
    1108:	a1 1d       	adc	r26, r1
    110a:	62 1f       	adc	r22, r18
    110c:	83 9f       	mul	r24, r19
    110e:	a0 0d       	add	r26, r0
    1110:	61 1d       	adc	r22, r1
    1112:	22 1f       	adc	r18, r18
    1114:	74 9f       	mul	r23, r20
    1116:	33 27       	eor	r19, r19
    1118:	a0 0d       	add	r26, r0
    111a:	61 1d       	adc	r22, r1
    111c:	23 1f       	adc	r18, r19
    111e:	84 9f       	mul	r24, r20
    1120:	60 0d       	add	r22, r0
    1122:	21 1d       	adc	r18, r1
    1124:	82 2f       	mov	r24, r18
    1126:	76 2f       	mov	r23, r22
    1128:	6a 2f       	mov	r22, r26
    112a:	11 24       	eor	r1, r1
    112c:	9f 57       	subi	r25, 0x7F	; 127
    112e:	50 40       	sbci	r21, 0x00	; 0
    1130:	9a f0       	brmi	.+38     	; 0x1158 <__mulsf3_pse+0x88>
    1132:	f1 f0       	breq	.+60     	; 0x1170 <__mulsf3_pse+0xa0>
    1134:	88 23       	and	r24, r24
    1136:	4a f0       	brmi	.+18     	; 0x114a <__mulsf3_pse+0x7a>
    1138:	ee 0f       	add	r30, r30
    113a:	ff 1f       	adc	r31, r31
    113c:	bb 1f       	adc	r27, r27
    113e:	66 1f       	adc	r22, r22
    1140:	77 1f       	adc	r23, r23
    1142:	88 1f       	adc	r24, r24
    1144:	91 50       	subi	r25, 0x01	; 1
    1146:	50 40       	sbci	r21, 0x00	; 0
    1148:	a9 f7       	brne	.-22     	; 0x1134 <__mulsf3_pse+0x64>
    114a:	9e 3f       	cpi	r25, 0xFE	; 254
    114c:	51 05       	cpc	r21, r1
    114e:	80 f0       	brcs	.+32     	; 0x1170 <__mulsf3_pse+0xa0>
    1150:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__fp_inf>
    1154:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <__fp_szero>
    1158:	5f 3f       	cpi	r21, 0xFF	; 255
    115a:	e4 f3       	brlt	.-8      	; 0x1154 <__mulsf3_pse+0x84>
    115c:	98 3e       	cpi	r25, 0xE8	; 232
    115e:	d4 f3       	brlt	.-12     	; 0x1154 <__mulsf3_pse+0x84>
    1160:	86 95       	lsr	r24
    1162:	77 95       	ror	r23
    1164:	67 95       	ror	r22
    1166:	b7 95       	ror	r27
    1168:	f7 95       	ror	r31
    116a:	e7 95       	ror	r30
    116c:	9f 5f       	subi	r25, 0xFF	; 255
    116e:	c1 f7       	brne	.-16     	; 0x1160 <__mulsf3_pse+0x90>
    1170:	fe 2b       	or	r31, r30
    1172:	88 0f       	add	r24, r24
    1174:	91 1d       	adc	r25, r1
    1176:	96 95       	lsr	r25
    1178:	87 95       	ror	r24
    117a:	97 f9       	bld	r25, 7
    117c:	08 95       	ret

0000117e <__udivmodsi4>:
    117e:	a1 e2       	ldi	r26, 0x21	; 33
    1180:	1a 2e       	mov	r1, r26
    1182:	aa 1b       	sub	r26, r26
    1184:	bb 1b       	sub	r27, r27
    1186:	fd 01       	movw	r30, r26
    1188:	0d c0       	rjmp	.+26     	; 0x11a4 <__udivmodsi4_ep>

0000118a <__udivmodsi4_loop>:
    118a:	aa 1f       	adc	r26, r26
    118c:	bb 1f       	adc	r27, r27
    118e:	ee 1f       	adc	r30, r30
    1190:	ff 1f       	adc	r31, r31
    1192:	a2 17       	cp	r26, r18
    1194:	b3 07       	cpc	r27, r19
    1196:	e4 07       	cpc	r30, r20
    1198:	f5 07       	cpc	r31, r21
    119a:	20 f0       	brcs	.+8      	; 0x11a4 <__udivmodsi4_ep>
    119c:	a2 1b       	sub	r26, r18
    119e:	b3 0b       	sbc	r27, r19
    11a0:	e4 0b       	sbc	r30, r20
    11a2:	f5 0b       	sbc	r31, r21

000011a4 <__udivmodsi4_ep>:
    11a4:	66 1f       	adc	r22, r22
    11a6:	77 1f       	adc	r23, r23
    11a8:	88 1f       	adc	r24, r24
    11aa:	99 1f       	adc	r25, r25
    11ac:	1a 94       	dec	r1
    11ae:	69 f7       	brne	.-38     	; 0x118a <__udivmodsi4_loop>
    11b0:	60 95       	com	r22
    11b2:	70 95       	com	r23
    11b4:	80 95       	com	r24
    11b6:	90 95       	com	r25
    11b8:	9b 01       	movw	r18, r22
    11ba:	ac 01       	movw	r20, r24
    11bc:	bd 01       	movw	r22, r26
    11be:	cf 01       	movw	r24, r30
    11c0:	08 95       	ret

000011c2 <_exit>:
    11c2:	f8 94       	cli

000011c4 <__stop_program>:
    11c4:	ff cf       	rjmp	.-2      	; 0x11c4 <__stop_program>
