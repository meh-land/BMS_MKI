
BMS_MKI_ATMEGA32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  000013c6  0000145a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  00800082  00800082  0000147c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  000014e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001eaf  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e2  00000000  00000000  000035ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000135b  00000000  00000000  00003dd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008f4  00000000  00000000  0000512c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000dc2  00000000  00000000  00005a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002132  00000000  00000000  000067e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  00008914  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 0b 04 	jmp	0x816	; 0x816 <__vector_1>
       8:	0c 94 37 04 	jmp	0x86e	; 0x86e <__vector_2>
       c:	0c 94 63 04 	jmp	0x8c6	; 0x8c6 <__vector_3>
      10:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__vector_4>
      14:	0c 94 27 03 	jmp	0x64e	; 0x64e <__vector_5>
      18:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__vector_6>
      1c:	0c 94 d5 02 	jmp	0x5aa	; 0x5aa <__vector_7>
      20:	0c 94 ac 02 	jmp	0x558	; 0x558 <__vector_8>
      24:	0c 94 83 02 	jmp	0x506	; 0x506 <__vector_9>
      28:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__vector_10>
      2c:	0c 94 31 02 	jmp	0x462	; 0x462 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ec       	ldi	r30, 0xC6	; 198
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a2 e8       	ldi	r26, 0x82	; 130
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 3c       	cpi	r26, 0xC2	; 194
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <main>
      8a:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ISR_INT0>:
	Local_u16Count++;
}

void CALC_voidReset(void)
{
	Global_f64Energy_mJ = 0;
      92:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <Global_f64InstVoltage_mv>
      96:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <Global_f64InstVoltage_mv+0x1>
      9a:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <Global_f64InstVoltage_mv+0x2>
      9e:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <Global_f64InstVoltage_mv+0x3>
      a2:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <Global_f64InstCurrent_mA>
      a6:	10 92 b7 00 	sts	0x00B7, r1	; 0x8000b7 <Global_f64InstCurrent_mA+0x1>
      aa:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <Global_f64InstCurrent_mA+0x2>
      ae:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <Global_f64InstCurrent_mA+0x3>
      b2:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <Global_f64InstPower_mW>
      b6:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <Global_f64InstPower_mW+0x1>
      ba:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <Global_f64InstPower_mW+0x2>
      be:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <Global_f64InstPower_mW+0x3>
      c2:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <Global_f64Energy_mJ>
      c6:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <Global_f64Energy_mJ+0x1>
      ca:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <Global_f64Energy_mJ+0x2>
      ce:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <Global_f64Energy_mJ+0x3>
      d2:	08 95       	ret

000000d4 <ISR_INT1>:
      d4:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <Global_u8DisplayFlag>
      d8:	8f 5f       	subi	r24, 0xFF	; 255
      da:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <Global_u8DisplayFlag>
      de:	84 30       	cpi	r24, 0x04	; 4
      e0:	10 f0       	brcs	.+4      	; 0xe6 <ISR_INT1+0x12>
      e2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <Global_u8DisplayFlag>
      e6:	08 95       	ret

000000e8 <DIO_voidSetPinDirection>:
      e8:	84 30       	cpi	r24, 0x04	; 4
      ea:	08 f0       	brcs	.+2      	; 0xee <DIO_voidSetPinDirection+0x6>
      ec:	72 c0       	rjmp	.+228    	; 0x1d2 <DIO_voidSetPinDirection+0xea>
      ee:	68 30       	cpi	r22, 0x08	; 8
      f0:	08 f0       	brcs	.+2      	; 0xf4 <DIO_voidSetPinDirection+0xc>
      f2:	6f c0       	rjmp	.+222    	; 0x1d2 <DIO_voidSetPinDirection+0xea>
      f4:	42 30       	cpi	r20, 0x02	; 2
      f6:	08 f0       	brcs	.+2      	; 0xfa <DIO_voidSetPinDirection+0x12>
      f8:	6c c0       	rjmp	.+216    	; 0x1d2 <DIO_voidSetPinDirection+0xea>
      fa:	81 30       	cpi	r24, 0x01	; 1
      fc:	01 f1       	breq	.+64     	; 0x13e <DIO_voidSetPinDirection+0x56>
      fe:	30 f0       	brcs	.+12     	; 0x10c <DIO_voidSetPinDirection+0x24>
     100:	82 30       	cpi	r24, 0x02	; 2
     102:	b1 f1       	breq	.+108    	; 0x170 <DIO_voidSetPinDirection+0x88>
     104:	83 30       	cpi	r24, 0x03	; 3
     106:	09 f4       	brne	.+2      	; 0x10a <DIO_voidSetPinDirection+0x22>
     108:	4c c0       	rjmp	.+152    	; 0x1a2 <DIO_voidSetPinDirection+0xba>
     10a:	08 95       	ret
     10c:	41 30       	cpi	r20, 0x01	; 1
     10e:	59 f4       	brne	.+22     	; 0x126 <DIO_voidSetPinDirection+0x3e>
     110:	2a b3       	in	r18, 0x1a	; 26
     112:	81 e0       	ldi	r24, 0x01	; 1
     114:	90 e0       	ldi	r25, 0x00	; 0
     116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_voidSetPinDirection+0x34>
     118:	88 0f       	add	r24, r24
     11a:	99 1f       	adc	r25, r25
     11c:	6a 95       	dec	r22
     11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_voidSetPinDirection+0x30>
     120:	82 2b       	or	r24, r18
     122:	8a bb       	out	0x1a, r24	; 26
     124:	08 95       	ret
     126:	2a b3       	in	r18, 0x1a	; 26
     128:	81 e0       	ldi	r24, 0x01	; 1
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	02 c0       	rjmp	.+4      	; 0x132 <DIO_voidSetPinDirection+0x4a>
     12e:	88 0f       	add	r24, r24
     130:	99 1f       	adc	r25, r25
     132:	6a 95       	dec	r22
     134:	e2 f7       	brpl	.-8      	; 0x12e <DIO_voidSetPinDirection+0x46>
     136:	80 95       	com	r24
     138:	82 23       	and	r24, r18
     13a:	8a bb       	out	0x1a, r24	; 26
     13c:	08 95       	ret
     13e:	41 30       	cpi	r20, 0x01	; 1
     140:	59 f4       	brne	.+22     	; 0x158 <DIO_voidSetPinDirection+0x70>
     142:	27 b3       	in	r18, 0x17	; 23
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_voidSetPinDirection+0x66>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	6a 95       	dec	r22
     150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_voidSetPinDirection+0x62>
     152:	82 2b       	or	r24, r18
     154:	87 bb       	out	0x17, r24	; 23
     156:	08 95       	ret
     158:	27 b3       	in	r18, 0x17	; 23
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	02 c0       	rjmp	.+4      	; 0x164 <DIO_voidSetPinDirection+0x7c>
     160:	88 0f       	add	r24, r24
     162:	99 1f       	adc	r25, r25
     164:	6a 95       	dec	r22
     166:	e2 f7       	brpl	.-8      	; 0x160 <DIO_voidSetPinDirection+0x78>
     168:	80 95       	com	r24
     16a:	82 23       	and	r24, r18
     16c:	87 bb       	out	0x17, r24	; 23
     16e:	08 95       	ret
     170:	41 30       	cpi	r20, 0x01	; 1
     172:	59 f4       	brne	.+22     	; 0x18a <DIO_voidSetPinDirection+0xa2>
     174:	24 b3       	in	r18, 0x14	; 20
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_voidSetPinDirection+0x98>
     17c:	88 0f       	add	r24, r24
     17e:	99 1f       	adc	r25, r25
     180:	6a 95       	dec	r22
     182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_voidSetPinDirection+0x94>
     184:	82 2b       	or	r24, r18
     186:	84 bb       	out	0x14, r24	; 20
     188:	08 95       	ret
     18a:	24 b3       	in	r18, 0x14	; 20
     18c:	81 e0       	ldi	r24, 0x01	; 1
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_voidSetPinDirection+0xae>
     192:	88 0f       	add	r24, r24
     194:	99 1f       	adc	r25, r25
     196:	6a 95       	dec	r22
     198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_voidSetPinDirection+0xaa>
     19a:	80 95       	com	r24
     19c:	82 23       	and	r24, r18
     19e:	84 bb       	out	0x14, r24	; 20
     1a0:	08 95       	ret
     1a2:	41 30       	cpi	r20, 0x01	; 1
     1a4:	59 f4       	brne	.+22     	; 0x1bc <DIO_voidSetPinDirection+0xd4>
     1a6:	21 b3       	in	r18, 0x11	; 17
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <DIO_voidSetPinDirection+0xca>
     1ae:	88 0f       	add	r24, r24
     1b0:	99 1f       	adc	r25, r25
     1b2:	6a 95       	dec	r22
     1b4:	e2 f7       	brpl	.-8      	; 0x1ae <DIO_voidSetPinDirection+0xc6>
     1b6:	82 2b       	or	r24, r18
     1b8:	81 bb       	out	0x11, r24	; 17
     1ba:	08 95       	ret
     1bc:	21 b3       	in	r18, 0x11	; 17
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_voidSetPinDirection+0xe0>
     1c4:	88 0f       	add	r24, r24
     1c6:	99 1f       	adc	r25, r25
     1c8:	6a 95       	dec	r22
     1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_voidSetPinDirection+0xdc>
     1cc:	80 95       	com	r24
     1ce:	82 23       	and	r24, r18
     1d0:	81 bb       	out	0x11, r24	; 17
     1d2:	08 95       	ret

000001d4 <DIO_voidSetPinValue>:
     1d4:	84 30       	cpi	r24, 0x04	; 4
     1d6:	08 f0       	brcs	.+2      	; 0x1da <DIO_voidSetPinValue+0x6>
     1d8:	72 c0       	rjmp	.+228    	; 0x2be <DIO_voidSetPinValue+0xea>
     1da:	68 30       	cpi	r22, 0x08	; 8
     1dc:	08 f0       	brcs	.+2      	; 0x1e0 <DIO_voidSetPinValue+0xc>
     1de:	6f c0       	rjmp	.+222    	; 0x2be <DIO_voidSetPinValue+0xea>
     1e0:	42 30       	cpi	r20, 0x02	; 2
     1e2:	08 f0       	brcs	.+2      	; 0x1e6 <DIO_voidSetPinValue+0x12>
     1e4:	6c c0       	rjmp	.+216    	; 0x2be <DIO_voidSetPinValue+0xea>
     1e6:	81 30       	cpi	r24, 0x01	; 1
     1e8:	01 f1       	breq	.+64     	; 0x22a <DIO_voidSetPinValue+0x56>
     1ea:	30 f0       	brcs	.+12     	; 0x1f8 <DIO_voidSetPinValue+0x24>
     1ec:	82 30       	cpi	r24, 0x02	; 2
     1ee:	b1 f1       	breq	.+108    	; 0x25c <DIO_voidSetPinValue+0x88>
     1f0:	83 30       	cpi	r24, 0x03	; 3
     1f2:	09 f4       	brne	.+2      	; 0x1f6 <DIO_voidSetPinValue+0x22>
     1f4:	4c c0       	rjmp	.+152    	; 0x28e <DIO_voidSetPinValue+0xba>
     1f6:	08 95       	ret
     1f8:	41 30       	cpi	r20, 0x01	; 1
     1fa:	59 f4       	brne	.+22     	; 0x212 <DIO_voidSetPinValue+0x3e>
     1fc:	2b b3       	in	r18, 0x1b	; 27
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_voidSetPinValue+0x34>
     204:	88 0f       	add	r24, r24
     206:	99 1f       	adc	r25, r25
     208:	6a 95       	dec	r22
     20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_voidSetPinValue+0x30>
     20c:	82 2b       	or	r24, r18
     20e:	8b bb       	out	0x1b, r24	; 27
     210:	08 95       	ret
     212:	2b b3       	in	r18, 0x1b	; 27
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	02 c0       	rjmp	.+4      	; 0x21e <DIO_voidSetPinValue+0x4a>
     21a:	88 0f       	add	r24, r24
     21c:	99 1f       	adc	r25, r25
     21e:	6a 95       	dec	r22
     220:	e2 f7       	brpl	.-8      	; 0x21a <DIO_voidSetPinValue+0x46>
     222:	80 95       	com	r24
     224:	82 23       	and	r24, r18
     226:	8b bb       	out	0x1b, r24	; 27
     228:	08 95       	ret
     22a:	41 30       	cpi	r20, 0x01	; 1
     22c:	59 f4       	brne	.+22     	; 0x244 <DIO_voidSetPinValue+0x70>
     22e:	28 b3       	in	r18, 0x18	; 24
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_voidSetPinValue+0x66>
     236:	88 0f       	add	r24, r24
     238:	99 1f       	adc	r25, r25
     23a:	6a 95       	dec	r22
     23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_voidSetPinValue+0x62>
     23e:	82 2b       	or	r24, r18
     240:	88 bb       	out	0x18, r24	; 24
     242:	08 95       	ret
     244:	28 b3       	in	r18, 0x18	; 24
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	02 c0       	rjmp	.+4      	; 0x250 <DIO_voidSetPinValue+0x7c>
     24c:	88 0f       	add	r24, r24
     24e:	99 1f       	adc	r25, r25
     250:	6a 95       	dec	r22
     252:	e2 f7       	brpl	.-8      	; 0x24c <DIO_voidSetPinValue+0x78>
     254:	80 95       	com	r24
     256:	82 23       	and	r24, r18
     258:	88 bb       	out	0x18, r24	; 24
     25a:	08 95       	ret
     25c:	41 30       	cpi	r20, 0x01	; 1
     25e:	59 f4       	brne	.+22     	; 0x276 <DIO_voidSetPinValue+0xa2>
     260:	25 b3       	in	r18, 0x15	; 21
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_voidSetPinValue+0x98>
     268:	88 0f       	add	r24, r24
     26a:	99 1f       	adc	r25, r25
     26c:	6a 95       	dec	r22
     26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_voidSetPinValue+0x94>
     270:	82 2b       	or	r24, r18
     272:	85 bb       	out	0x15, r24	; 21
     274:	08 95       	ret
     276:	25 b3       	in	r18, 0x15	; 21
     278:	81 e0       	ldi	r24, 0x01	; 1
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	02 c0       	rjmp	.+4      	; 0x282 <DIO_voidSetPinValue+0xae>
     27e:	88 0f       	add	r24, r24
     280:	99 1f       	adc	r25, r25
     282:	6a 95       	dec	r22
     284:	e2 f7       	brpl	.-8      	; 0x27e <DIO_voidSetPinValue+0xaa>
     286:	80 95       	com	r24
     288:	82 23       	and	r24, r18
     28a:	85 bb       	out	0x15, r24	; 21
     28c:	08 95       	ret
     28e:	41 30       	cpi	r20, 0x01	; 1
     290:	59 f4       	brne	.+22     	; 0x2a8 <DIO_voidSetPinValue+0xd4>
     292:	22 b3       	in	r18, 0x12	; 18
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_voidSetPinValue+0xca>
     29a:	88 0f       	add	r24, r24
     29c:	99 1f       	adc	r25, r25
     29e:	6a 95       	dec	r22
     2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_voidSetPinValue+0xc6>
     2a2:	82 2b       	or	r24, r18
     2a4:	82 bb       	out	0x12, r24	; 18
     2a6:	08 95       	ret
     2a8:	22 b3       	in	r18, 0x12	; 18
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <DIO_voidSetPinValue+0xe0>
     2b0:	88 0f       	add	r24, r24
     2b2:	99 1f       	adc	r25, r25
     2b4:	6a 95       	dec	r22
     2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <DIO_voidSetPinValue+0xdc>
     2b8:	80 95       	com	r24
     2ba:	82 23       	and	r24, r18
     2bc:	82 bb       	out	0x12, r24	; 18
     2be:	08 95       	ret

000002c0 <DIO_voidSetPortDirection>:
     2c0:	84 30       	cpi	r24, 0x04	; 4
     2c2:	98 f4       	brcc	.+38     	; 0x2ea <DIO_voidSetPortDirection+0x2a>
     2c4:	81 30       	cpi	r24, 0x01	; 1
     2c6:	49 f0       	breq	.+18     	; 0x2da <DIO_voidSetPortDirection+0x1a>
     2c8:	28 f0       	brcs	.+10     	; 0x2d4 <DIO_voidSetPortDirection+0x14>
     2ca:	82 30       	cpi	r24, 0x02	; 2
     2cc:	49 f0       	breq	.+18     	; 0x2e0 <DIO_voidSetPortDirection+0x20>
     2ce:	83 30       	cpi	r24, 0x03	; 3
     2d0:	51 f0       	breq	.+20     	; 0x2e6 <DIO_voidSetPortDirection+0x26>
     2d2:	08 95       	ret
     2d4:	8f ef       	ldi	r24, 0xFF	; 255
     2d6:	8a bb       	out	0x1a, r24	; 26
     2d8:	08 95       	ret
     2da:	8f ef       	ldi	r24, 0xFF	; 255
     2dc:	87 bb       	out	0x17, r24	; 23
     2de:	08 95       	ret
     2e0:	8f ef       	ldi	r24, 0xFF	; 255
     2e2:	84 bb       	out	0x14, r24	; 20
     2e4:	08 95       	ret
     2e6:	8f ef       	ldi	r24, 0xFF	; 255
     2e8:	81 bb       	out	0x11, r24	; 17
     2ea:	08 95       	ret

000002ec <DIO_voidSetPortValue>:
     2ec:	84 30       	cpi	r24, 0x04	; 4
     2ee:	78 f4       	brcc	.+30     	; 0x30e <DIO_voidSetPortValue+0x22>
     2f0:	81 30       	cpi	r24, 0x01	; 1
     2f2:	41 f0       	breq	.+16     	; 0x304 <DIO_voidSetPortValue+0x18>
     2f4:	28 f0       	brcs	.+10     	; 0x300 <DIO_voidSetPortValue+0x14>
     2f6:	82 30       	cpi	r24, 0x02	; 2
     2f8:	39 f0       	breq	.+14     	; 0x308 <DIO_voidSetPortValue+0x1c>
     2fa:	83 30       	cpi	r24, 0x03	; 3
     2fc:	39 f0       	breq	.+14     	; 0x30c <DIO_voidSetPortValue+0x20>
     2fe:	08 95       	ret
     300:	6b bb       	out	0x1b, r22	; 27
     302:	08 95       	ret
     304:	68 bb       	out	0x18, r22	; 24
     306:	08 95       	ret
     308:	65 bb       	out	0x15, r22	; 21
     30a:	08 95       	ret
     30c:	62 bb       	out	0x12, r22	; 18
     30e:	08 95       	ret

00000310 <ADC_voidInit>:
     310:	87 b1       	in	r24, 0x07	; 7
     312:	8f 7b       	andi	r24, 0xBF	; 191
     314:	87 b9       	out	0x07, r24	; 7
     316:	87 b1       	in	r24, 0x07	; 7
     318:	8f 77       	andi	r24, 0x7F	; 127
     31a:	87 b9       	out	0x07, r24	; 7
     31c:	87 b1       	in	r24, 0x07	; 7
     31e:	8f 7d       	andi	r24, 0xDF	; 223
     320:	87 b9       	out	0x07, r24	; 7
     322:	86 b1       	in	r24, 0x06	; 6
     324:	88 7f       	andi	r24, 0xF8	; 248
     326:	86 b9       	out	0x06, r24	; 6
     328:	86 b1       	in	r24, 0x06	; 6
     32a:	86 60       	ori	r24, 0x06	; 6
     32c:	86 b9       	out	0x06, r24	; 6
     32e:	86 b1       	in	r24, 0x06	; 6
     330:	80 62       	ori	r24, 0x20	; 32
     332:	86 b9       	out	0x06, r24	; 6
     334:	80 b7       	in	r24, 0x30	; 48
     336:	81 71       	andi	r24, 0x11	; 17
     338:	80 bf       	out	0x30, r24	; 48
     33a:	80 b7       	in	r24, 0x30	; 48
     33c:	80 bf       	out	0x30, r24	; 48
     33e:	86 b1       	in	r24, 0x06	; 6
     340:	80 68       	ori	r24, 0x80	; 128
     342:	86 b9       	out	0x06, r24	; 6
     344:	08 95       	ret

00000346 <ADC_voidDisableADCInterrupt>:
     346:	86 b1       	in	r24, 0x06	; 6
     348:	87 7f       	andi	r24, 0xF7	; 247
     34a:	86 b9       	out	0x06, r24	; 6
     34c:	08 95       	ret

0000034e <ADC_voidClearADCInterruptFlag>:
     34e:	86 b1       	in	r24, 0x06	; 6
     350:	80 61       	ori	r24, 0x10	; 16
     352:	86 b9       	out	0x06, r24	; 6
     354:	08 95       	ret

00000356 <ADC_voidStartConversion>:
     356:	86 b1       	in	r24, 0x06	; 6
     358:	80 64       	ori	r24, 0x40	; 64
     35a:	86 b9       	out	0x06, r24	; 6
     35c:	08 95       	ret

0000035e <ADC_u16GetResultSync>:
     35e:	97 b1       	in	r25, 0x07	; 7
     360:	90 7e       	andi	r25, 0xE0	; 224
     362:	97 b9       	out	0x07, r25	; 7
     364:	97 b1       	in	r25, 0x07	; 7
     366:	89 2b       	or	r24, r25
     368:	87 b9       	out	0x07, r24	; 7
     36a:	0e 94 ab 01 	call	0x356	; 0x356 <ADC_voidStartConversion>
     36e:	80 e0       	ldi	r24, 0x00	; 0
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	dc 01       	movw	r26, r24
     374:	03 c0       	rjmp	.+6      	; 0x37c <ADC_u16GetResultSync+0x1e>
     376:	01 96       	adiw	r24, 0x01	; 1
     378:	a1 1d       	adc	r26, r1
     37a:	b1 1d       	adc	r27, r1
     37c:	34 99       	sbic	0x06, 4	; 6
     37e:	07 c0       	rjmp	.+14     	; 0x38e <ADC_u16GetResultSync+0x30>
     380:	88 38       	cpi	r24, 0x88	; 136
     382:	2d e0       	ldi	r18, 0x0D	; 13
     384:	92 07       	cpc	r25, r18
     386:	21 e0       	ldi	r18, 0x01	; 1
     388:	a2 07       	cpc	r26, r18
     38a:	b1 05       	cpc	r27, r1
     38c:	a0 f3       	brcs	.-24     	; 0x376 <ADC_u16GetResultSync+0x18>
     38e:	88 38       	cpi	r24, 0x88	; 136
     390:	9d 40       	sbci	r25, 0x0D	; 13
     392:	a1 40       	sbci	r26, 0x01	; 1
     394:	b1 05       	cpc	r27, r1
     396:	79 f0       	breq	.+30     	; 0x3b6 <ADC_u16GetResultSync+0x58>
     398:	8f e1       	ldi	r24, 0x1F	; 31
     39a:	9e e4       	ldi	r25, 0x4E	; 78
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <ADC_u16GetResultSync+0x3e>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <ADC_u16GetResultSync+0x44>
     3a2:	00 00       	nop
     3a4:	0e 94 a7 01 	call	0x34e	; 0x34e <ADC_voidClearADCInterruptFlag>
     3a8:	24 b1       	in	r18, 0x04	; 4
     3aa:	85 b1       	in	r24, 0x05	; 5
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	98 2f       	mov	r25, r24
     3b0:	88 27       	eor	r24, r24
     3b2:	82 2b       	or	r24, r18
     3b4:	08 95       	ret
     3b6:	80 e0       	ldi	r24, 0x00	; 0
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	08 95       	ret

000003bc <__vector_16>:
     3bc:	1f 92       	push	r1
     3be:	0f 92       	push	r0
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	0f 92       	push	r0
     3c4:	11 24       	eor	r1, r1
     3c6:	2f 93       	push	r18
     3c8:	3f 93       	push	r19
     3ca:	4f 93       	push	r20
     3cc:	5f 93       	push	r21
     3ce:	6f 93       	push	r22
     3d0:	7f 93       	push	r23
     3d2:	8f 93       	push	r24
     3d4:	9f 93       	push	r25
     3d6:	af 93       	push	r26
     3d8:	bf 93       	push	r27
     3da:	ef 93       	push	r30
     3dc:	ff 93       	push	r31
     3de:	e0 91 ac 00 	lds	r30, 0x00AC	; 0x8000ac <ADC_u16ptrADCResult>
     3e2:	f0 91 ad 00 	lds	r31, 0x00AD	; 0x8000ad <ADC_u16ptrADCResult+0x1>
     3e6:	24 b1       	in	r18, 0x04	; 4
     3e8:	85 b1       	in	r24, 0x05	; 5
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	98 2f       	mov	r25, r24
     3ee:	88 27       	eor	r24, r24
     3f0:	82 2b       	or	r24, r18
     3f2:	91 83       	std	Z+1, r25	; 0x01
     3f4:	80 83       	st	Z, r24
     3f6:	e0 e0       	ldi	r30, 0x00	; 0
     3f8:	f0 e0       	ldi	r31, 0x00	; 0
     3fa:	09 95       	icall
     3fc:	0e 94 a3 01 	call	0x346	; 0x346 <ADC_voidDisableADCInterrupt>
     400:	ff 91       	pop	r31
     402:	ef 91       	pop	r30
     404:	bf 91       	pop	r27
     406:	af 91       	pop	r26
     408:	9f 91       	pop	r25
     40a:	8f 91       	pop	r24
     40c:	7f 91       	pop	r23
     40e:	6f 91       	pop	r22
     410:	5f 91       	pop	r21
     412:	4f 91       	pop	r20
     414:	3f 91       	pop	r19
     416:	2f 91       	pop	r18
     418:	0f 90       	pop	r0
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	0f 90       	pop	r0
     41e:	1f 90       	pop	r1
     420:	18 95       	reti

00000422 <TMR0_voidInit>:
     422:	83 b7       	in	r24, 0x33	; 51
     424:	8f 7b       	andi	r24, 0xBF	; 191
     426:	83 bf       	out	0x33, r24	; 51
     428:	83 b7       	in	r24, 0x33	; 51
     42a:	87 7f       	andi	r24, 0xF7	; 247
     42c:	83 bf       	out	0x33, r24	; 51
     42e:	89 b7       	in	r24, 0x39	; 57
     430:	81 60       	ori	r24, 0x01	; 1
     432:	89 bf       	out	0x39, r24	; 57
     434:	83 b7       	in	r24, 0x33	; 51
     436:	8b 7f       	andi	r24, 0xFB	; 251
     438:	83 bf       	out	0x33, r24	; 51
     43a:	83 b7       	in	r24, 0x33	; 51
     43c:	82 60       	ori	r24, 0x02	; 2
     43e:	83 bf       	out	0x33, r24	; 51
     440:	83 b7       	in	r24, 0x33	; 51
     442:	8e 7f       	andi	r24, 0xFE	; 254
     444:	83 bf       	out	0x33, r24	; 51
     446:	08 95       	ret

00000448 <TMR0_voidSetOVF>:
     448:	82 bf       	out	0x32, r24	; 50
     44a:	08 95       	ret

0000044c <TMR_voidCallBack>:
     44c:	00 97       	sbiw	r24, 0x00	; 0
     44e:	41 f0       	breq	.+16     	; 0x460 <TMR_voidCallBack+0x14>
     450:	e6 2f       	mov	r30, r22
     452:	f0 e0       	ldi	r31, 0x00	; 0
     454:	ee 0f       	add	r30, r30
     456:	ff 1f       	adc	r31, r31
     458:	e4 57       	subi	r30, 0x74	; 116
     45a:	ff 4f       	sbci	r31, 0xFF	; 255
     45c:	91 83       	std	Z+1, r25	; 0x01
     45e:	80 83       	st	Z, r24
     460:	08 95       	ret

00000462 <__vector_11>:
     462:	1f 92       	push	r1
     464:	0f 92       	push	r0
     466:	0f b6       	in	r0, 0x3f	; 63
     468:	0f 92       	push	r0
     46a:	11 24       	eor	r1, r1
     46c:	2f 93       	push	r18
     46e:	3f 93       	push	r19
     470:	4f 93       	push	r20
     472:	5f 93       	push	r21
     474:	6f 93       	push	r22
     476:	7f 93       	push	r23
     478:	8f 93       	push	r24
     47a:	9f 93       	push	r25
     47c:	af 93       	push	r26
     47e:	bf 93       	push	r27
     480:	ef 93       	push	r30
     482:	ff 93       	push	r31
     484:	e0 91 a2 00 	lds	r30, 0x00A2	; 0x8000a2 <TMR_ptrFuncCallBack+0x16>
     488:	f0 91 a3 00 	lds	r31, 0x00A3	; 0x8000a3 <TMR_ptrFuncCallBack+0x17>
     48c:	30 97       	sbiw	r30, 0x00	; 0
     48e:	09 f0       	breq	.+2      	; 0x492 <__vector_11+0x30>
     490:	09 95       	icall
     492:	ff 91       	pop	r31
     494:	ef 91       	pop	r30
     496:	bf 91       	pop	r27
     498:	af 91       	pop	r26
     49a:	9f 91       	pop	r25
     49c:	8f 91       	pop	r24
     49e:	7f 91       	pop	r23
     4a0:	6f 91       	pop	r22
     4a2:	5f 91       	pop	r21
     4a4:	4f 91       	pop	r20
     4a6:	3f 91       	pop	r19
     4a8:	2f 91       	pop	r18
     4aa:	0f 90       	pop	r0
     4ac:	0f be       	out	0x3f, r0	; 63
     4ae:	0f 90       	pop	r0
     4b0:	1f 90       	pop	r1
     4b2:	18 95       	reti

000004b4 <__vector_10>:
     4b4:	1f 92       	push	r1
     4b6:	0f 92       	push	r0
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	0f 92       	push	r0
     4bc:	11 24       	eor	r1, r1
     4be:	2f 93       	push	r18
     4c0:	3f 93       	push	r19
     4c2:	4f 93       	push	r20
     4c4:	5f 93       	push	r21
     4c6:	6f 93       	push	r22
     4c8:	7f 93       	push	r23
     4ca:	8f 93       	push	r24
     4cc:	9f 93       	push	r25
     4ce:	af 93       	push	r26
     4d0:	bf 93       	push	r27
     4d2:	ef 93       	push	r30
     4d4:	ff 93       	push	r31
     4d6:	e0 91 a0 00 	lds	r30, 0x00A0	; 0x8000a0 <TMR_ptrFuncCallBack+0x14>
     4da:	f0 91 a1 00 	lds	r31, 0x00A1	; 0x8000a1 <TMR_ptrFuncCallBack+0x15>
     4de:	30 97       	sbiw	r30, 0x00	; 0
     4e0:	09 f0       	breq	.+2      	; 0x4e4 <__vector_10+0x30>
     4e2:	09 95       	icall
     4e4:	ff 91       	pop	r31
     4e6:	ef 91       	pop	r30
     4e8:	bf 91       	pop	r27
     4ea:	af 91       	pop	r26
     4ec:	9f 91       	pop	r25
     4ee:	8f 91       	pop	r24
     4f0:	7f 91       	pop	r23
     4f2:	6f 91       	pop	r22
     4f4:	5f 91       	pop	r21
     4f6:	4f 91       	pop	r20
     4f8:	3f 91       	pop	r19
     4fa:	2f 91       	pop	r18
     4fc:	0f 90       	pop	r0
     4fe:	0f be       	out	0x3f, r0	; 63
     500:	0f 90       	pop	r0
     502:	1f 90       	pop	r1
     504:	18 95       	reti

00000506 <__vector_9>:
     506:	1f 92       	push	r1
     508:	0f 92       	push	r0
     50a:	0f b6       	in	r0, 0x3f	; 63
     50c:	0f 92       	push	r0
     50e:	11 24       	eor	r1, r1
     510:	2f 93       	push	r18
     512:	3f 93       	push	r19
     514:	4f 93       	push	r20
     516:	5f 93       	push	r21
     518:	6f 93       	push	r22
     51a:	7f 93       	push	r23
     51c:	8f 93       	push	r24
     51e:	9f 93       	push	r25
     520:	af 93       	push	r26
     522:	bf 93       	push	r27
     524:	ef 93       	push	r30
     526:	ff 93       	push	r31
     528:	e0 91 9e 00 	lds	r30, 0x009E	; 0x80009e <TMR_ptrFuncCallBack+0x12>
     52c:	f0 91 9f 00 	lds	r31, 0x009F	; 0x80009f <TMR_ptrFuncCallBack+0x13>
     530:	30 97       	sbiw	r30, 0x00	; 0
     532:	09 f0       	breq	.+2      	; 0x536 <__vector_9+0x30>
     534:	09 95       	icall
     536:	ff 91       	pop	r31
     538:	ef 91       	pop	r30
     53a:	bf 91       	pop	r27
     53c:	af 91       	pop	r26
     53e:	9f 91       	pop	r25
     540:	8f 91       	pop	r24
     542:	7f 91       	pop	r23
     544:	6f 91       	pop	r22
     546:	5f 91       	pop	r21
     548:	4f 91       	pop	r20
     54a:	3f 91       	pop	r19
     54c:	2f 91       	pop	r18
     54e:	0f 90       	pop	r0
     550:	0f be       	out	0x3f, r0	; 63
     552:	0f 90       	pop	r0
     554:	1f 90       	pop	r1
     556:	18 95       	reti

00000558 <__vector_8>:
     558:	1f 92       	push	r1
     55a:	0f 92       	push	r0
     55c:	0f b6       	in	r0, 0x3f	; 63
     55e:	0f 92       	push	r0
     560:	11 24       	eor	r1, r1
     562:	2f 93       	push	r18
     564:	3f 93       	push	r19
     566:	4f 93       	push	r20
     568:	5f 93       	push	r21
     56a:	6f 93       	push	r22
     56c:	7f 93       	push	r23
     56e:	8f 93       	push	r24
     570:	9f 93       	push	r25
     572:	af 93       	push	r26
     574:	bf 93       	push	r27
     576:	ef 93       	push	r30
     578:	ff 93       	push	r31
     57a:	e0 91 9c 00 	lds	r30, 0x009C	; 0x80009c <TMR_ptrFuncCallBack+0x10>
     57e:	f0 91 9d 00 	lds	r31, 0x009D	; 0x80009d <TMR_ptrFuncCallBack+0x11>
     582:	30 97       	sbiw	r30, 0x00	; 0
     584:	09 f0       	breq	.+2      	; 0x588 <__vector_8+0x30>
     586:	09 95       	icall
     588:	ff 91       	pop	r31
     58a:	ef 91       	pop	r30
     58c:	bf 91       	pop	r27
     58e:	af 91       	pop	r26
     590:	9f 91       	pop	r25
     592:	8f 91       	pop	r24
     594:	7f 91       	pop	r23
     596:	6f 91       	pop	r22
     598:	5f 91       	pop	r21
     59a:	4f 91       	pop	r20
     59c:	3f 91       	pop	r19
     59e:	2f 91       	pop	r18
     5a0:	0f 90       	pop	r0
     5a2:	0f be       	out	0x3f, r0	; 63
     5a4:	0f 90       	pop	r0
     5a6:	1f 90       	pop	r1
     5a8:	18 95       	reti

000005aa <__vector_7>:
     5aa:	1f 92       	push	r1
     5ac:	0f 92       	push	r0
     5ae:	0f b6       	in	r0, 0x3f	; 63
     5b0:	0f 92       	push	r0
     5b2:	11 24       	eor	r1, r1
     5b4:	2f 93       	push	r18
     5b6:	3f 93       	push	r19
     5b8:	4f 93       	push	r20
     5ba:	5f 93       	push	r21
     5bc:	6f 93       	push	r22
     5be:	7f 93       	push	r23
     5c0:	8f 93       	push	r24
     5c2:	9f 93       	push	r25
     5c4:	af 93       	push	r26
     5c6:	bf 93       	push	r27
     5c8:	ef 93       	push	r30
     5ca:	ff 93       	push	r31
     5cc:	e0 91 9a 00 	lds	r30, 0x009A	; 0x80009a <TMR_ptrFuncCallBack+0xe>
     5d0:	f0 91 9b 00 	lds	r31, 0x009B	; 0x80009b <TMR_ptrFuncCallBack+0xf>
     5d4:	30 97       	sbiw	r30, 0x00	; 0
     5d6:	09 f0       	breq	.+2      	; 0x5da <__vector_7+0x30>
     5d8:	09 95       	icall
     5da:	ff 91       	pop	r31
     5dc:	ef 91       	pop	r30
     5de:	bf 91       	pop	r27
     5e0:	af 91       	pop	r26
     5e2:	9f 91       	pop	r25
     5e4:	8f 91       	pop	r24
     5e6:	7f 91       	pop	r23
     5e8:	6f 91       	pop	r22
     5ea:	5f 91       	pop	r21
     5ec:	4f 91       	pop	r20
     5ee:	3f 91       	pop	r19
     5f0:	2f 91       	pop	r18
     5f2:	0f 90       	pop	r0
     5f4:	0f be       	out	0x3f, r0	; 63
     5f6:	0f 90       	pop	r0
     5f8:	1f 90       	pop	r1
     5fa:	18 95       	reti

000005fc <__vector_6>:
     5fc:	1f 92       	push	r1
     5fe:	0f 92       	push	r0
     600:	0f b6       	in	r0, 0x3f	; 63
     602:	0f 92       	push	r0
     604:	11 24       	eor	r1, r1
     606:	2f 93       	push	r18
     608:	3f 93       	push	r19
     60a:	4f 93       	push	r20
     60c:	5f 93       	push	r21
     60e:	6f 93       	push	r22
     610:	7f 93       	push	r23
     612:	8f 93       	push	r24
     614:	9f 93       	push	r25
     616:	af 93       	push	r26
     618:	bf 93       	push	r27
     61a:	ef 93       	push	r30
     61c:	ff 93       	push	r31
     61e:	e0 91 98 00 	lds	r30, 0x0098	; 0x800098 <TMR_ptrFuncCallBack+0xc>
     622:	f0 91 99 00 	lds	r31, 0x0099	; 0x800099 <TMR_ptrFuncCallBack+0xd>
     626:	30 97       	sbiw	r30, 0x00	; 0
     628:	09 f0       	breq	.+2      	; 0x62c <__vector_6+0x30>
     62a:	09 95       	icall
     62c:	ff 91       	pop	r31
     62e:	ef 91       	pop	r30
     630:	bf 91       	pop	r27
     632:	af 91       	pop	r26
     634:	9f 91       	pop	r25
     636:	8f 91       	pop	r24
     638:	7f 91       	pop	r23
     63a:	6f 91       	pop	r22
     63c:	5f 91       	pop	r21
     63e:	4f 91       	pop	r20
     640:	3f 91       	pop	r19
     642:	2f 91       	pop	r18
     644:	0f 90       	pop	r0
     646:	0f be       	out	0x3f, r0	; 63
     648:	0f 90       	pop	r0
     64a:	1f 90       	pop	r1
     64c:	18 95       	reti

0000064e <__vector_5>:
     64e:	1f 92       	push	r1
     650:	0f 92       	push	r0
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	0f 92       	push	r0
     656:	11 24       	eor	r1, r1
     658:	2f 93       	push	r18
     65a:	3f 93       	push	r19
     65c:	4f 93       	push	r20
     65e:	5f 93       	push	r21
     660:	6f 93       	push	r22
     662:	7f 93       	push	r23
     664:	8f 93       	push	r24
     666:	9f 93       	push	r25
     668:	af 93       	push	r26
     66a:	bf 93       	push	r27
     66c:	ef 93       	push	r30
     66e:	ff 93       	push	r31
     670:	e0 91 96 00 	lds	r30, 0x0096	; 0x800096 <TMR_ptrFuncCallBack+0xa>
     674:	f0 91 97 00 	lds	r31, 0x0097	; 0x800097 <TMR_ptrFuncCallBack+0xb>
     678:	30 97       	sbiw	r30, 0x00	; 0
     67a:	09 f0       	breq	.+2      	; 0x67e <__vector_5+0x30>
     67c:	09 95       	icall
     67e:	ff 91       	pop	r31
     680:	ef 91       	pop	r30
     682:	bf 91       	pop	r27
     684:	af 91       	pop	r26
     686:	9f 91       	pop	r25
     688:	8f 91       	pop	r24
     68a:	7f 91       	pop	r23
     68c:	6f 91       	pop	r22
     68e:	5f 91       	pop	r21
     690:	4f 91       	pop	r20
     692:	3f 91       	pop	r19
     694:	2f 91       	pop	r18
     696:	0f 90       	pop	r0
     698:	0f be       	out	0x3f, r0	; 63
     69a:	0f 90       	pop	r0
     69c:	1f 90       	pop	r1
     69e:	18 95       	reti

000006a0 <__vector_4>:
     6a0:	1f 92       	push	r1
     6a2:	0f 92       	push	r0
     6a4:	0f b6       	in	r0, 0x3f	; 63
     6a6:	0f 92       	push	r0
     6a8:	11 24       	eor	r1, r1
     6aa:	2f 93       	push	r18
     6ac:	3f 93       	push	r19
     6ae:	4f 93       	push	r20
     6b0:	5f 93       	push	r21
     6b2:	6f 93       	push	r22
     6b4:	7f 93       	push	r23
     6b6:	8f 93       	push	r24
     6b8:	9f 93       	push	r25
     6ba:	af 93       	push	r26
     6bc:	bf 93       	push	r27
     6be:	ef 93       	push	r30
     6c0:	ff 93       	push	r31
     6c2:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <TMR_ptrFuncCallBack+0x8>
     6c6:	f0 91 95 00 	lds	r31, 0x0095	; 0x800095 <TMR_ptrFuncCallBack+0x9>
     6ca:	30 97       	sbiw	r30, 0x00	; 0
     6cc:	09 f0       	breq	.+2      	; 0x6d0 <__vector_4+0x30>
     6ce:	09 95       	icall
     6d0:	ff 91       	pop	r31
     6d2:	ef 91       	pop	r30
     6d4:	bf 91       	pop	r27
     6d6:	af 91       	pop	r26
     6d8:	9f 91       	pop	r25
     6da:	8f 91       	pop	r24
     6dc:	7f 91       	pop	r23
     6de:	6f 91       	pop	r22
     6e0:	5f 91       	pop	r21
     6e2:	4f 91       	pop	r20
     6e4:	3f 91       	pop	r19
     6e6:	2f 91       	pop	r18
     6e8:	0f 90       	pop	r0
     6ea:	0f be       	out	0x3f, r0	; 63
     6ec:	0f 90       	pop	r0
     6ee:	1f 90       	pop	r1
     6f0:	18 95       	reti

000006f2 <EXTI_voidInit>:
     6f2:	85 b7       	in	r24, 0x35	; 53
     6f4:	81 60       	ori	r24, 0x01	; 1
     6f6:	85 bf       	out	0x35, r24	; 53
     6f8:	85 b7       	in	r24, 0x35	; 53
     6fa:	8d 7f       	andi	r24, 0xFD	; 253
     6fc:	85 bf       	out	0x35, r24	; 53
     6fe:	08 95       	ret

00000700 <EXTI_voidSetSignalSenseMode>:
     700:	66 30       	cpi	r22, 0x06	; 6
     702:	31 f0       	breq	.+12     	; 0x710 <EXTI_voidSetSignalSenseMode+0x10>
     704:	67 30       	cpi	r22, 0x07	; 7
     706:	41 f1       	breq	.+80     	; 0x758 <EXTI_voidSetSignalSenseMode+0x58>
     708:	65 30       	cpi	r22, 0x05	; 5
     70a:	09 f0       	breq	.+2      	; 0x70e <EXTI_voidSetSignalSenseMode+0xe>
     70c:	55 c0       	rjmp	.+170    	; 0x7b8 <EXTI_voidSetSignalSenseMode+0xb8>
     70e:	48 c0       	rjmp	.+144    	; 0x7a0 <EXTI_voidSetSignalSenseMode+0xa0>
     710:	81 30       	cpi	r24, 0x01	; 1
     712:	69 f0       	breq	.+26     	; 0x72e <EXTI_voidSetSignalSenseMode+0x2e>
     714:	28 f0       	brcs	.+10     	; 0x720 <EXTI_voidSetSignalSenseMode+0x20>
     716:	82 30       	cpi	r24, 0x02	; 2
     718:	89 f0       	breq	.+34     	; 0x73c <EXTI_voidSetSignalSenseMode+0x3c>
     71a:	83 30       	cpi	r24, 0x03	; 3
     71c:	b1 f0       	breq	.+44     	; 0x74a <EXTI_voidSetSignalSenseMode+0x4a>
     71e:	08 95       	ret
     720:	85 b7       	in	r24, 0x35	; 53
     722:	8e 7f       	andi	r24, 0xFE	; 254
     724:	85 bf       	out	0x35, r24	; 53
     726:	85 b7       	in	r24, 0x35	; 53
     728:	82 60       	ori	r24, 0x02	; 2
     72a:	85 bf       	out	0x35, r24	; 53
     72c:	08 95       	ret
     72e:	85 b7       	in	r24, 0x35	; 53
     730:	81 60       	ori	r24, 0x01	; 1
     732:	85 bf       	out	0x35, r24	; 53
     734:	85 b7       	in	r24, 0x35	; 53
     736:	82 60       	ori	r24, 0x02	; 2
     738:	85 bf       	out	0x35, r24	; 53
     73a:	08 95       	ret
     73c:	85 b7       	in	r24, 0x35	; 53
     73e:	8e 7f       	andi	r24, 0xFE	; 254
     740:	85 bf       	out	0x35, r24	; 53
     742:	85 b7       	in	r24, 0x35	; 53
     744:	8d 7f       	andi	r24, 0xFD	; 253
     746:	85 bf       	out	0x35, r24	; 53
     748:	08 95       	ret
     74a:	85 b7       	in	r24, 0x35	; 53
     74c:	81 60       	ori	r24, 0x01	; 1
     74e:	85 bf       	out	0x35, r24	; 53
     750:	85 b7       	in	r24, 0x35	; 53
     752:	8d 7f       	andi	r24, 0xFD	; 253
     754:	85 bf       	out	0x35, r24	; 53
     756:	08 95       	ret
     758:	81 30       	cpi	r24, 0x01	; 1
     75a:	69 f0       	breq	.+26     	; 0x776 <EXTI_voidSetSignalSenseMode+0x76>
     75c:	28 f0       	brcs	.+10     	; 0x768 <EXTI_voidSetSignalSenseMode+0x68>
     75e:	82 30       	cpi	r24, 0x02	; 2
     760:	89 f0       	breq	.+34     	; 0x784 <EXTI_voidSetSignalSenseMode+0x84>
     762:	83 30       	cpi	r24, 0x03	; 3
     764:	b1 f0       	breq	.+44     	; 0x792 <EXTI_voidSetSignalSenseMode+0x92>
     766:	08 95       	ret
     768:	85 b7       	in	r24, 0x35	; 53
     76a:	8b 7f       	andi	r24, 0xFB	; 251
     76c:	85 bf       	out	0x35, r24	; 53
     76e:	85 b7       	in	r24, 0x35	; 53
     770:	88 60       	ori	r24, 0x08	; 8
     772:	85 bf       	out	0x35, r24	; 53
     774:	08 95       	ret
     776:	85 b7       	in	r24, 0x35	; 53
     778:	84 60       	ori	r24, 0x04	; 4
     77a:	85 bf       	out	0x35, r24	; 53
     77c:	85 b7       	in	r24, 0x35	; 53
     77e:	88 60       	ori	r24, 0x08	; 8
     780:	85 bf       	out	0x35, r24	; 53
     782:	08 95       	ret
     784:	85 b7       	in	r24, 0x35	; 53
     786:	8b 7f       	andi	r24, 0xFB	; 251
     788:	85 bf       	out	0x35, r24	; 53
     78a:	85 b7       	in	r24, 0x35	; 53
     78c:	87 7f       	andi	r24, 0xF7	; 247
     78e:	85 bf       	out	0x35, r24	; 53
     790:	08 95       	ret
     792:	85 b7       	in	r24, 0x35	; 53
     794:	84 60       	ori	r24, 0x04	; 4
     796:	85 bf       	out	0x35, r24	; 53
     798:	85 b7       	in	r24, 0x35	; 53
     79a:	87 7f       	andi	r24, 0xF7	; 247
     79c:	85 bf       	out	0x35, r24	; 53
     79e:	08 95       	ret
     7a0:	88 23       	and	r24, r24
     7a2:	19 f0       	breq	.+6      	; 0x7aa <EXTI_voidSetSignalSenseMode+0xaa>
     7a4:	81 30       	cpi	r24, 0x01	; 1
     7a6:	29 f0       	breq	.+10     	; 0x7b2 <EXTI_voidSetSignalSenseMode+0xb2>
     7a8:	08 95       	ret
     7aa:	84 b7       	in	r24, 0x34	; 52
     7ac:	8f 7b       	andi	r24, 0xBF	; 191
     7ae:	84 bf       	out	0x34, r24	; 52
     7b0:	08 95       	ret
     7b2:	84 b7       	in	r24, 0x34	; 52
     7b4:	80 64       	ori	r24, 0x40	; 64
     7b6:	84 bf       	out	0x34, r24	; 52
     7b8:	08 95       	ret

000007ba <EXTI_voidEnableInterrupt>:
     7ba:	9b ef       	ldi	r25, 0xFB	; 251
     7bc:	98 0f       	add	r25, r24
     7be:	93 30       	cpi	r25, 0x03	; 3
     7c0:	60 f4       	brcc	.+24     	; 0x7da <EXTI_voidEnableInterrupt+0x20>
     7c2:	4b b7       	in	r20, 0x3b	; 59
     7c4:	21 e0       	ldi	r18, 0x01	; 1
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	b9 01       	movw	r22, r18
     7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <EXTI_voidEnableInterrupt+0x16>
     7cc:	66 0f       	add	r22, r22
     7ce:	77 1f       	adc	r23, r23
     7d0:	8a 95       	dec	r24
     7d2:	e2 f7       	brpl	.-8      	; 0x7cc <EXTI_voidEnableInterrupt+0x12>
     7d4:	cb 01       	movw	r24, r22
     7d6:	84 2b       	or	r24, r20
     7d8:	8b bf       	out	0x3b, r24	; 59
     7da:	08 95       	ret

000007dc <EXTI_voidClearFlag>:
     7dc:	9b ef       	ldi	r25, 0xFB	; 251
     7de:	98 0f       	add	r25, r24
     7e0:	93 30       	cpi	r25, 0x03	; 3
     7e2:	68 f4       	brcc	.+26     	; 0x7fe <EXTI_voidClearFlag+0x22>
     7e4:	4a b7       	in	r20, 0x3a	; 58
     7e6:	21 e0       	ldi	r18, 0x01	; 1
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	b9 01       	movw	r22, r18
     7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <EXTI_voidClearFlag+0x16>
     7ee:	66 0f       	add	r22, r22
     7f0:	77 1f       	adc	r23, r23
     7f2:	8a 95       	dec	r24
     7f4:	e2 f7       	brpl	.-8      	; 0x7ee <EXTI_voidClearFlag+0x12>
     7f6:	cb 01       	movw	r24, r22
     7f8:	80 95       	com	r24
     7fa:	84 23       	and	r24, r20
     7fc:	8a bf       	out	0x3a, r24	; 58
     7fe:	08 95       	ret

00000800 <EXTI_voidSetCallBack>:
     800:	00 97       	sbiw	r24, 0x00	; 0
     802:	41 f0       	breq	.+16     	; 0x814 <EXTI_voidSetCallBack+0x14>
     804:	e6 2f       	mov	r30, r22
     806:	f0 e0       	ldi	r31, 0x00	; 0
     808:	ee 0f       	add	r30, r30
     80a:	ff 1f       	adc	r31, r31
     80c:	ea 57       	subi	r30, 0x7A	; 122
     80e:	ff 4f       	sbci	r31, 0xFF	; 255
     810:	91 83       	std	Z+1, r25	; 0x01
     812:	80 83       	st	Z, r24
     814:	08 95       	ret

00000816 <__vector_1>:
     816:	1f 92       	push	r1
     818:	0f 92       	push	r0
     81a:	0f b6       	in	r0, 0x3f	; 63
     81c:	0f 92       	push	r0
     81e:	11 24       	eor	r1, r1
     820:	2f 93       	push	r18
     822:	3f 93       	push	r19
     824:	4f 93       	push	r20
     826:	5f 93       	push	r21
     828:	6f 93       	push	r22
     82a:	7f 93       	push	r23
     82c:	8f 93       	push	r24
     82e:	9f 93       	push	r25
     830:	af 93       	push	r26
     832:	bf 93       	push	r27
     834:	ef 93       	push	r30
     836:	ff 93       	push	r31
     838:	e0 91 86 00 	lds	r30, 0x0086	; 0x800086 <EXTI_CallBack>
     83c:	f0 91 87 00 	lds	r31, 0x0087	; 0x800087 <EXTI_CallBack+0x1>
     840:	30 97       	sbiw	r30, 0x00	; 0
     842:	21 f0       	breq	.+8      	; 0x84c <__vector_1+0x36>
     844:	09 95       	icall
     846:	86 e0       	ldi	r24, 0x06	; 6
     848:	0e 94 ee 03 	call	0x7dc	; 0x7dc <EXTI_voidClearFlag>
     84c:	ff 91       	pop	r31
     84e:	ef 91       	pop	r30
     850:	bf 91       	pop	r27
     852:	af 91       	pop	r26
     854:	9f 91       	pop	r25
     856:	8f 91       	pop	r24
     858:	7f 91       	pop	r23
     85a:	6f 91       	pop	r22
     85c:	5f 91       	pop	r21
     85e:	4f 91       	pop	r20
     860:	3f 91       	pop	r19
     862:	2f 91       	pop	r18
     864:	0f 90       	pop	r0
     866:	0f be       	out	0x3f, r0	; 63
     868:	0f 90       	pop	r0
     86a:	1f 90       	pop	r1
     86c:	18 95       	reti

0000086e <__vector_2>:
     86e:	1f 92       	push	r1
     870:	0f 92       	push	r0
     872:	0f b6       	in	r0, 0x3f	; 63
     874:	0f 92       	push	r0
     876:	11 24       	eor	r1, r1
     878:	2f 93       	push	r18
     87a:	3f 93       	push	r19
     87c:	4f 93       	push	r20
     87e:	5f 93       	push	r21
     880:	6f 93       	push	r22
     882:	7f 93       	push	r23
     884:	8f 93       	push	r24
     886:	9f 93       	push	r25
     888:	af 93       	push	r26
     88a:	bf 93       	push	r27
     88c:	ef 93       	push	r30
     88e:	ff 93       	push	r31
     890:	e0 91 88 00 	lds	r30, 0x0088	; 0x800088 <EXTI_CallBack+0x2>
     894:	f0 91 89 00 	lds	r31, 0x0089	; 0x800089 <EXTI_CallBack+0x3>
     898:	30 97       	sbiw	r30, 0x00	; 0
     89a:	21 f0       	breq	.+8      	; 0x8a4 <__vector_2+0x36>
     89c:	09 95       	icall
     89e:	87 e0       	ldi	r24, 0x07	; 7
     8a0:	0e 94 ee 03 	call	0x7dc	; 0x7dc <EXTI_voidClearFlag>
     8a4:	ff 91       	pop	r31
     8a6:	ef 91       	pop	r30
     8a8:	bf 91       	pop	r27
     8aa:	af 91       	pop	r26
     8ac:	9f 91       	pop	r25
     8ae:	8f 91       	pop	r24
     8b0:	7f 91       	pop	r23
     8b2:	6f 91       	pop	r22
     8b4:	5f 91       	pop	r21
     8b6:	4f 91       	pop	r20
     8b8:	3f 91       	pop	r19
     8ba:	2f 91       	pop	r18
     8bc:	0f 90       	pop	r0
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	0f 90       	pop	r0
     8c2:	1f 90       	pop	r1
     8c4:	18 95       	reti

000008c6 <__vector_3>:
     8c6:	1f 92       	push	r1
     8c8:	0f 92       	push	r0
     8ca:	0f b6       	in	r0, 0x3f	; 63
     8cc:	0f 92       	push	r0
     8ce:	11 24       	eor	r1, r1
     8d0:	2f 93       	push	r18
     8d2:	3f 93       	push	r19
     8d4:	4f 93       	push	r20
     8d6:	5f 93       	push	r21
     8d8:	6f 93       	push	r22
     8da:	7f 93       	push	r23
     8dc:	8f 93       	push	r24
     8de:	9f 93       	push	r25
     8e0:	af 93       	push	r26
     8e2:	bf 93       	push	r27
     8e4:	ef 93       	push	r30
     8e6:	ff 93       	push	r31
     8e8:	e0 91 8a 00 	lds	r30, 0x008A	; 0x80008a <EXTI_CallBack+0x4>
     8ec:	f0 91 8b 00 	lds	r31, 0x008B	; 0x80008b <EXTI_CallBack+0x5>
     8f0:	30 97       	sbiw	r30, 0x00	; 0
     8f2:	21 f0       	breq	.+8      	; 0x8fc <__vector_3+0x36>
     8f4:	09 95       	icall
     8f6:	85 e0       	ldi	r24, 0x05	; 5
     8f8:	0e 94 ee 03 	call	0x7dc	; 0x7dc <EXTI_voidClearFlag>
     8fc:	ff 91       	pop	r31
     8fe:	ef 91       	pop	r30
     900:	bf 91       	pop	r27
     902:	af 91       	pop	r26
     904:	9f 91       	pop	r25
     906:	8f 91       	pop	r24
     908:	7f 91       	pop	r23
     90a:	6f 91       	pop	r22
     90c:	5f 91       	pop	r21
     90e:	4f 91       	pop	r20
     910:	3f 91       	pop	r19
     912:	2f 91       	pop	r18
     914:	0f 90       	pop	r0
     916:	0f be       	out	0x3f, r0	; 63
     918:	0f 90       	pop	r0
     91a:	1f 90       	pop	r1
     91c:	18 95       	reti

0000091e <LCD_voidSendCMD>:
     91e:	cf 93       	push	r28
     920:	c8 2f       	mov	r28, r24
     922:	40 e0       	ldi	r20, 0x00	; 0
     924:	60 e0       	ldi	r22, 0x00	; 0
     926:	81 e0       	ldi	r24, 0x01	; 1
     928:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     92c:	40 e0       	ldi	r20, 0x00	; 0
     92e:	61 e0       	ldi	r22, 0x01	; 1
     930:	81 e0       	ldi	r24, 0x01	; 1
     932:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     936:	6c 2f       	mov	r22, r28
     938:	82 e0       	ldi	r24, 0x02	; 2
     93a:	0e 94 76 01 	call	0x2ec	; 0x2ec <DIO_voidSetPortValue>
     93e:	41 e0       	ldi	r20, 0x01	; 1
     940:	62 e0       	ldi	r22, 0x02	; 2
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     948:	82 e0       	ldi	r24, 0x02	; 2
     94a:	8a 95       	dec	r24
     94c:	f1 f7       	brne	.-4      	; 0x94a <LCD_voidSendCMD+0x2c>
     94e:	00 c0       	rjmp	.+0      	; 0x950 <LCD_voidSendCMD+0x32>
     950:	40 e0       	ldi	r20, 0x00	; 0
     952:	62 e0       	ldi	r22, 0x02	; 2
     954:	81 e0       	ldi	r24, 0x01	; 1
     956:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     95a:	cf 91       	pop	r28
     95c:	08 95       	ret

0000095e <LCD_voidInitDisplay>:
     95e:	41 e0       	ldi	r20, 0x01	; 1
     960:	60 e0       	ldi	r22, 0x00	; 0
     962:	81 e0       	ldi	r24, 0x01	; 1
     964:	0e 94 74 00 	call	0xe8	; 0xe8 <DIO_voidSetPinDirection>
     968:	41 e0       	ldi	r20, 0x01	; 1
     96a:	61 e0       	ldi	r22, 0x01	; 1
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	0e 94 74 00 	call	0xe8	; 0xe8 <DIO_voidSetPinDirection>
     972:	41 e0       	ldi	r20, 0x01	; 1
     974:	62 e0       	ldi	r22, 0x02	; 2
     976:	81 e0       	ldi	r24, 0x01	; 1
     978:	0e 94 74 00 	call	0xe8	; 0xe8 <DIO_voidSetPinDirection>
     97c:	6f ef       	ldi	r22, 0xFF	; 255
     97e:	82 e0       	ldi	r24, 0x02	; 2
     980:	0e 94 60 01 	call	0x2c0	; 0x2c0 <DIO_voidSetPortDirection>
     984:	2f eb       	ldi	r18, 0xBF	; 191
     986:	8a ed       	ldi	r24, 0xDA	; 218
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	21 50       	subi	r18, 0x01	; 1
     98c:	80 40       	sbci	r24, 0x00	; 0
     98e:	90 40       	sbci	r25, 0x00	; 0
     990:	e1 f7       	brne	.-8      	; 0x98a <LCD_voidInitDisplay+0x2c>
     992:	00 c0       	rjmp	.+0      	; 0x994 <LCD_voidInitDisplay+0x36>
     994:	00 00       	nop
     996:	88 e3       	ldi	r24, 0x38	; 56
     998:	0e 94 8f 04 	call	0x91e	; 0x91e <LCD_voidSendCMD>
     99c:	25 e8       	ldi	r18, 0x85	; 133
     99e:	2a 95       	dec	r18
     9a0:	f1 f7       	brne	.-4      	; 0x99e <LCD_voidInitDisplay+0x40>
     9a2:	00 00       	nop
     9a4:	8f e0       	ldi	r24, 0x0F	; 15
     9a6:	0e 94 8f 04 	call	0x91e	; 0x91e <LCD_voidSendCMD>
     9aa:	85 e8       	ldi	r24, 0x85	; 133
     9ac:	8a 95       	dec	r24
     9ae:	f1 f7       	brne	.-4      	; 0x9ac <LCD_voidInitDisplay+0x4e>
     9b0:	00 00       	nop
     9b2:	81 e0       	ldi	r24, 0x01	; 1
     9b4:	0e 94 8f 04 	call	0x91e	; 0x91e <LCD_voidSendCMD>
     9b8:	8f e9       	ldi	r24, 0x9F	; 159
     9ba:	9f e0       	ldi	r25, 0x0F	; 15
     9bc:	01 97       	sbiw	r24, 0x01	; 1
     9be:	f1 f7       	brne	.-4      	; 0x9bc <LCD_voidInitDisplay+0x5e>
     9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <LCD_voidInitDisplay+0x64>
     9c2:	00 00       	nop
     9c4:	86 e0       	ldi	r24, 0x06	; 6
     9c6:	0e 94 8f 04 	call	0x91e	; 0x91e <LCD_voidSendCMD>
     9ca:	95 e8       	ldi	r25, 0x85	; 133
     9cc:	9a 95       	dec	r25
     9ce:	f1 f7       	brne	.-4      	; 0x9cc <LCD_voidInitDisplay+0x6e>
     9d0:	00 00       	nop
     9d2:	08 95       	ret

000009d4 <LCD_voidClrDisplay>:
     9d4:	81 e0       	ldi	r24, 0x01	; 1
     9d6:	0e 94 8f 04 	call	0x91e	; 0x91e <LCD_voidSendCMD>
     9da:	8f e9       	ldi	r24, 0x9F	; 159
     9dc:	9f e0       	ldi	r25, 0x0F	; 15
     9de:	01 97       	sbiw	r24, 0x01	; 1
     9e0:	f1 f7       	brne	.-4      	; 0x9de <LCD_voidClrDisplay+0xa>
     9e2:	00 c0       	rjmp	.+0      	; 0x9e4 <LCD_voidClrDisplay+0x10>
     9e4:	00 00       	nop
     9e6:	08 95       	ret

000009e8 <LCD_voidDisplayChar>:
     9e8:	cf 93       	push	r28
     9ea:	c8 2f       	mov	r28, r24
     9ec:	41 e0       	ldi	r20, 0x01	; 1
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	81 e0       	ldi	r24, 0x01	; 1
     9f2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     9f6:	40 e0       	ldi	r20, 0x00	; 0
     9f8:	61 e0       	ldi	r22, 0x01	; 1
     9fa:	81 e0       	ldi	r24, 0x01	; 1
     9fc:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     a00:	6c 2f       	mov	r22, r28
     a02:	82 e0       	ldi	r24, 0x02	; 2
     a04:	0e 94 76 01 	call	0x2ec	; 0x2ec <DIO_voidSetPortValue>
     a08:	41 e0       	ldi	r20, 0x01	; 1
     a0a:	62 e0       	ldi	r22, 0x02	; 2
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	8a 95       	dec	r24
     a16:	f1 f7       	brne	.-4      	; 0xa14 <LCD_voidDisplayChar+0x2c>
     a18:	00 c0       	rjmp	.+0      	; 0xa1a <LCD_voidDisplayChar+0x32>
     a1a:	40 e0       	ldi	r20, 0x00	; 0
     a1c:	62 e0       	ldi	r22, 0x02	; 2
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <DIO_voidSetPinValue>
     a24:	8f e1       	ldi	r24, 0x1F	; 31
     a26:	9e e4       	ldi	r25, 0x4E	; 78
     a28:	01 97       	sbiw	r24, 0x01	; 1
     a2a:	f1 f7       	brne	.-4      	; 0xa28 <LCD_voidDisplayChar+0x40>
     a2c:	00 c0       	rjmp	.+0      	; 0xa2e <LCD_voidDisplayChar+0x46>
     a2e:	00 00       	nop
     a30:	cf 91       	pop	r28
     a32:	08 95       	ret

00000a34 <LCD_voidDisplayStr>:
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	00 97       	sbiw	r24, 0x00	; 0
     a3c:	61 f0       	breq	.+24     	; 0xa56 <LCD_voidDisplayStr+0x22>
     a3e:	8c 01       	movw	r16, r24
     a40:	c0 e0       	ldi	r28, 0x00	; 0
     a42:	03 c0       	rjmp	.+6      	; 0xa4a <LCD_voidDisplayStr+0x16>
     a44:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <LCD_voidDisplayChar>
     a48:	cf 5f       	subi	r28, 0xFF	; 255
     a4a:	f8 01       	movw	r30, r16
     a4c:	ec 0f       	add	r30, r28
     a4e:	f1 1d       	adc	r31, r1
     a50:	80 81       	ld	r24, Z
     a52:	81 11       	cpse	r24, r1
     a54:	f7 cf       	rjmp	.-18     	; 0xa44 <LCD_voidDisplayStr+0x10>
     a56:	cf 91       	pop	r28
     a58:	1f 91       	pop	r17
     a5a:	0f 91       	pop	r16
     a5c:	08 95       	ret

00000a5e <LCD_voidDisplayInt>:
     a5e:	8f 92       	push	r8
     a60:	9f 92       	push	r9
     a62:	af 92       	push	r10
     a64:	bf 92       	push	r11
     a66:	cf 92       	push	r12
     a68:	df 92       	push	r13
     a6a:	ef 92       	push	r14
     a6c:	ff 92       	push	r15
     a6e:	1f 93       	push	r17
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	cd b7       	in	r28, 0x3d	; 61
     a76:	de b7       	in	r29, 0x3e	; 62
     a78:	2a 97       	sbiw	r28, 0x0a	; 10
     a7a:	0f b6       	in	r0, 0x3f	; 63
     a7c:	f8 94       	cli
     a7e:	de bf       	out	0x3e, r29	; 62
     a80:	0f be       	out	0x3f, r0	; 63
     a82:	cd bf       	out	0x3d, r28	; 61
     a84:	6b 01       	movw	r12, r22
     a86:	7c 01       	movw	r14, r24
     a88:	60 e0       	ldi	r22, 0x00	; 0
     a8a:	70 e0       	ldi	r23, 0x00	; 0
     a8c:	cb 01       	movw	r24, r22
     a8e:	10 e0       	ldi	r17, 0x00	; 0
     a90:	25 c0       	rjmp	.+74     	; 0xadc <LCD_voidDisplayInt+0x7e>
     a92:	dc 01       	movw	r26, r24
     a94:	cb 01       	movw	r24, r22
     a96:	88 0f       	add	r24, r24
     a98:	99 1f       	adc	r25, r25
     a9a:	aa 1f       	adc	r26, r26
     a9c:	bb 1f       	adc	r27, r27
     a9e:	4c 01       	movw	r8, r24
     aa0:	5d 01       	movw	r10, r26
     aa2:	88 0c       	add	r8, r8
     aa4:	99 1c       	adc	r9, r9
     aa6:	aa 1c       	adc	r10, r10
     aa8:	bb 1c       	adc	r11, r11
     aaa:	88 0c       	add	r8, r8
     aac:	99 1c       	adc	r9, r9
     aae:	aa 1c       	adc	r10, r10
     ab0:	bb 1c       	adc	r11, r11
     ab2:	88 0e       	add	r8, r24
     ab4:	99 1e       	adc	r9, r25
     ab6:	aa 1e       	adc	r10, r26
     ab8:	bb 1e       	adc	r11, r27
     aba:	c7 01       	movw	r24, r14
     abc:	b6 01       	movw	r22, r12
     abe:	2a e0       	ldi	r18, 0x0A	; 10
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	40 e0       	ldi	r20, 0x00	; 0
     ac4:	50 e0       	ldi	r21, 0x00	; 0
     ac6:	0e 94 bf 09 	call	0x137e	; 0x137e <__udivmodsi4>
     aca:	68 0d       	add	r22, r8
     acc:	79 1d       	adc	r23, r9
     ace:	8a 1d       	adc	r24, r10
     ad0:	9b 1d       	adc	r25, r11
     ad2:	c2 2e       	mov	r12, r18
     ad4:	d3 2e       	mov	r13, r19
     ad6:	e4 2e       	mov	r14, r20
     ad8:	f5 2e       	mov	r15, r21
     ada:	1f 5f       	subi	r17, 0xFF	; 255
     adc:	c1 14       	cp	r12, r1
     ade:	d1 04       	cpc	r13, r1
     ae0:	e1 04       	cpc	r14, r1
     ae2:	f1 04       	cpc	r15, r1
     ae4:	b1 f6       	brne	.-84     	; 0xa92 <LCD_voidDisplayInt+0x34>
     ae6:	f1 2c       	mov	r15, r1
     ae8:	13 c0       	rjmp	.+38     	; 0xb10 <LCD_voidDisplayInt+0xb2>
     aea:	2a e0       	ldi	r18, 0x0A	; 10
     aec:	30 e0       	ldi	r19, 0x00	; 0
     aee:	40 e0       	ldi	r20, 0x00	; 0
     af0:	50 e0       	ldi	r21, 0x00	; 0
     af2:	0e 94 bf 09 	call	0x137e	; 0x137e <__udivmodsi4>
     af6:	e1 e0       	ldi	r30, 0x01	; 1
     af8:	f0 e0       	ldi	r31, 0x00	; 0
     afa:	ec 0f       	add	r30, r28
     afc:	fd 1f       	adc	r31, r29
     afe:	ec 0d       	add	r30, r12
     b00:	fd 1d       	adc	r31, r13
     b02:	60 5d       	subi	r22, 0xD0	; 208
     b04:	60 83       	st	Z, r22
     b06:	62 2f       	mov	r22, r18
     b08:	73 2f       	mov	r23, r19
     b0a:	84 2f       	mov	r24, r20
     b0c:	95 2f       	mov	r25, r21
     b0e:	f3 94       	inc	r15
     b10:	cf 2c       	mov	r12, r15
     b12:	0f 2c       	mov	r0, r15
     b14:	00 0c       	add	r0, r0
     b16:	dd 08       	sbc	r13, r13
     b18:	21 2f       	mov	r18, r17
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	c2 16       	cp	r12, r18
     b1e:	d3 06       	cpc	r13, r19
     b20:	24 f3       	brlt	.-56     	; 0xaea <LCD_voidDisplayInt+0x8c>
     b22:	e1 e0       	ldi	r30, 0x01	; 1
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	ec 0f       	add	r30, r28
     b28:	fd 1f       	adc	r31, r29
     b2a:	e2 0f       	add	r30, r18
     b2c:	f3 1f       	adc	r31, r19
     b2e:	10 82       	st	Z, r1
     b30:	ce 01       	movw	r24, r28
     b32:	01 96       	adiw	r24, 0x01	; 1
     b34:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     b38:	2a 96       	adiw	r28, 0x0a	; 10
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	f8 94       	cli
     b3e:	de bf       	out	0x3e, r29	; 62
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	cd bf       	out	0x3d, r28	; 61
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	ff 90       	pop	r15
     b4c:	ef 90       	pop	r14
     b4e:	df 90       	pop	r13
     b50:	cf 90       	pop	r12
     b52:	bf 90       	pop	r11
     b54:	af 90       	pop	r10
     b56:	9f 90       	pop	r9
     b58:	8f 90       	pop	r8
     b5a:	08 95       	ret

00000b5c <VSEN_voidInit>:
     b5c:	0e 94 88 01 	call	0x310	; 0x310 <ADC_voidInit>
     b60:	08 95       	ret

00000b62 <VSEN_f32GetVoltageReading>:
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	0e 94 af 01 	call	0x35e	; 0x35e <ADC_u16GetResultSync>
     b68:	bc 01       	movw	r22, r24
     b6a:	66 0f       	add	r22, r22
     b6c:	77 1f       	adc	r23, r23
     b6e:	66 0f       	add	r22, r22
     b70:	77 1f       	adc	r23, r23
     b72:	68 0f       	add	r22, r24
     b74:	79 1f       	adc	r23, r25
     b76:	80 e0       	ldi	r24, 0x00	; 0
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatunsisf>
     b7e:	20 e0       	ldi	r18, 0x00	; 0
     b80:	30 e0       	ldi	r19, 0x00	; 0
     b82:	40 e8       	ldi	r20, 0x80	; 128
     b84:	5a e3       	ldi	r21, 0x3A	; 58
     b86:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__mulsf3>
     b8a:	20 e0       	ldi	r18, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	40 ea       	ldi	r20, 0xA0	; 160
     b90:	50 e4       	ldi	r21, 0x40	; 64
     b92:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__mulsf3>
     b96:	08 95       	ret

00000b98 <ACS712_voidInit>:
     b98:	0e 94 88 01 	call	0x310	; 0x310 <ADC_voidInit>
     b9c:	08 95       	ret

00000b9e <ACS712_f32GetCurrentReading>:
     b9e:	80 e0       	ldi	r24, 0x00	; 0
     ba0:	0e 94 af 01 	call	0x35e	; 0x35e <ADC_u16GetResultSync>
     ba4:	bc 01       	movw	r22, r24
     ba6:	66 0f       	add	r22, r22
     ba8:	77 1f       	adc	r23, r23
     baa:	66 0f       	add	r22, r22
     bac:	77 1f       	adc	r23, r23
     bae:	68 0f       	add	r22, r24
     bb0:	79 1f       	adc	r23, r25
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatunsisf>
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	40 e8       	ldi	r20, 0x80	; 128
     bc0:	5a e3       	ldi	r21, 0x3A	; 58
     bc2:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__mulsf3>
     bc6:	20 e0       	ldi	r18, 0x00	; 0
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	40 e2       	ldi	r20, 0x20	; 32
     bcc:	50 e4       	ldi	r21, 0x40	; 64
     bce:	0e 94 8d 07 	call	0xf1a	; 0xf1a <__subsf3>
     bd2:	22 e0       	ldi	r18, 0x02	; 2
     bd4:	3b e2       	ldi	r19, 0x2B	; 43
     bd6:	47 e8       	ldi	r20, 0x87	; 135
     bd8:	5d e3       	ldi	r21, 0x3D	; 61
     bda:	0e 94 ff 07 	call	0xffe	; 0xffe <__divsf3>
     bde:	08 95       	ret

00000be0 <CALC_voidPeriodicFunc>:
     be0:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__data_end>
     be4:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__data_end+0x1>
     be8:	83 34       	cpi	r24, 0x43	; 67
     bea:	9f 40       	sbci	r25, 0x0F	; 15
     bec:	09 f0       	breq	.+2      	; 0xbf0 <CALC_voidPeriodicFunc+0x10>
     bee:	46 c0       	rjmp	.+140    	; 0xc7c <CALC_voidPeriodicFunc+0x9c>
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <is_updated>
     bf6:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <LCD_voidClrDisplay>
     bfa:	0e 94 b1 05 	call	0xb62	; 0xb62 <VSEN_f32GetVoltageReading>
     bfe:	60 93 ba 00 	sts	0x00BA, r22	; 0x8000ba <Global_f64InstVoltage_mv>
     c02:	70 93 bb 00 	sts	0x00BB, r23	; 0x8000bb <Global_f64InstVoltage_mv+0x1>
     c06:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <Global_f64InstVoltage_mv+0x2>
     c0a:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <Global_f64InstVoltage_mv+0x3>
     c0e:	0e 94 cf 05 	call	0xb9e	; 0xb9e <ACS712_f32GetCurrentReading>
     c12:	60 93 b6 00 	sts	0x00B6, r22	; 0x8000b6 <Global_f64InstCurrent_mA>
     c16:	70 93 b7 00 	sts	0x00B7, r23	; 0x8000b7 <Global_f64InstCurrent_mA+0x1>
     c1a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <Global_f64InstCurrent_mA+0x2>
     c1e:	90 93 b9 00 	sts	0x00B9, r25	; 0x8000b9 <Global_f64InstCurrent_mA+0x3>
     c22:	20 91 ba 00 	lds	r18, 0x00BA	; 0x8000ba <Global_f64InstVoltage_mv>
     c26:	30 91 bb 00 	lds	r19, 0x00BB	; 0x8000bb <Global_f64InstVoltage_mv+0x1>
     c2a:	40 91 bc 00 	lds	r20, 0x00BC	; 0x8000bc <Global_f64InstVoltage_mv+0x2>
     c2e:	50 91 bd 00 	lds	r21, 0x00BD	; 0x8000bd <Global_f64InstVoltage_mv+0x3>
     c32:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__mulsf3>
     c36:	9b 01       	movw	r18, r22
     c38:	ac 01       	movw	r20, r24
     c3a:	60 93 be 00 	sts	0x00BE, r22	; 0x8000be <Global_f64InstPower_mW>
     c3e:	70 93 bf 00 	sts	0x00BF, r23	; 0x8000bf <Global_f64InstPower_mW+0x1>
     c42:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <Global_f64InstPower_mW+0x2>
     c46:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <Global_f64InstPower_mW+0x3>
     c4a:	60 91 ae 00 	lds	r22, 0x00AE	; 0x8000ae <Global_f64Energy_mJ>
     c4e:	70 91 af 00 	lds	r23, 0x00AF	; 0x8000af <Global_f64Energy_mJ+0x1>
     c52:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <Global_f64Energy_mJ+0x2>
     c56:	90 91 b1 00 	lds	r25, 0x00B1	; 0x8000b1 <Global_f64Energy_mJ+0x3>
     c5a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__addsf3>
     c5e:	60 93 ae 00 	sts	0x00AE, r22	; 0x8000ae <Global_f64Energy_mJ>
     c62:	70 93 af 00 	sts	0x00AF, r23	; 0x8000af <Global_f64Energy_mJ+0x1>
     c66:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <Global_f64Energy_mJ+0x2>
     c6a:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <Global_f64Energy_mJ+0x3>
     c6e:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__data_end+0x1>
     c72:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__data_end>
     c76:	80 e4       	ldi	r24, 0x40	; 64
     c78:	0e 94 24 02 	call	0x448	; 0x448 <TMR0_voidSetOVF>
     c7c:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__data_end>
     c80:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__data_end+0x1>
     c84:	01 96       	adiw	r24, 0x01	; 1
     c86:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__data_end+0x1>
     c8a:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__data_end>
     c8e:	08 95       	ret

00000c90 <CALC_voidInit>:
     c90:	0e 94 cc 05 	call	0xb98	; 0xb98 <ACS712_voidInit>
     c94:	0e 94 ae 05 	call	0xb5c	; 0xb5c <VSEN_voidInit>
     c98:	78 94       	sei
     c9a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <EXTI_voidInit>
     c9e:	66 e0       	ldi	r22, 0x06	; 6
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	0e 94 80 03 	call	0x700	; 0x700 <EXTI_voidSetSignalSenseMode>
     ca6:	86 e0       	ldi	r24, 0x06	; 6
     ca8:	0e 94 dd 03 	call	0x7ba	; 0x7ba <EXTI_voidEnableInterrupt>
     cac:	60 e0       	ldi	r22, 0x00	; 0
     cae:	89 e4       	ldi	r24, 0x49	; 73
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 00 04 	call	0x800	; 0x800 <EXTI_voidSetCallBack>
     cb6:	67 e0       	ldi	r22, 0x07	; 7
     cb8:	81 e0       	ldi	r24, 0x01	; 1
     cba:	0e 94 80 03 	call	0x700	; 0x700 <EXTI_voidSetSignalSenseMode>
     cbe:	87 e0       	ldi	r24, 0x07	; 7
     cc0:	0e 94 dd 03 	call	0x7ba	; 0x7ba <EXTI_voidEnableInterrupt>
     cc4:	61 e0       	ldi	r22, 0x01	; 1
     cc6:	8a e6       	ldi	r24, 0x6A	; 106
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 00 04 	call	0x800	; 0x800 <EXTI_voidSetCallBack>
     cce:	0e 94 11 02 	call	0x422	; 0x422 <TMR0_voidInit>
     cd2:	6b e0       	ldi	r22, 0x0B	; 11
     cd4:	80 ef       	ldi	r24, 0xF0	; 240
     cd6:	95 e0       	ldi	r25, 0x05	; 5
     cd8:	0e 94 26 02 	call	0x44c	; 0x44c <TMR_voidCallBack>
     cdc:	80 e4       	ldi	r24, 0x40	; 64
     cde:	0e 94 24 02 	call	0x448	; 0x448 <TMR0_voidSetOVF>
     ce2:	08 95       	ret

00000ce4 <CALC_f64GetInstVoltage_mV>:
}

f64 CALC_f64GetInstVoltage_mV(void)	
{
	return Global_f64InstVoltage_mv;
     ce4:	60 91 ba 00 	lds	r22, 0x00BA	; 0x8000ba <Global_f64InstVoltage_mv>
     ce8:	70 91 bb 00 	lds	r23, 0x00BB	; 0x8000bb <Global_f64InstVoltage_mv+0x1>
     cec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <Global_f64InstVoltage_mv+0x2>
     cf0:	90 91 bd 00 	lds	r25, 0x00BD	; 0x8000bd <Global_f64InstVoltage_mv+0x3>
}
     cf4:	08 95       	ret

00000cf6 <CALC_f64GetInstCurrent_mA>:

f64 CALC_f64GetInstCurrent_mA(void)
{
	return Global_f64InstCurrent_mA;
     cf6:	60 91 b6 00 	lds	r22, 0x00B6	; 0x8000b6 <Global_f64InstCurrent_mA>
     cfa:	70 91 b7 00 	lds	r23, 0x00B7	; 0x8000b7 <Global_f64InstCurrent_mA+0x1>
     cfe:	80 91 b8 00 	lds	r24, 0x00B8	; 0x8000b8 <Global_f64InstCurrent_mA+0x2>
     d02:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <Global_f64InstCurrent_mA+0x3>
}
     d06:	08 95       	ret

00000d08 <CALC_f64GetInstPower_mW>:

f64 CALC_f64GetInstPower_mW(void)
{
	return Global_f64InstPower_mW;
     d08:	60 91 be 00 	lds	r22, 0x00BE	; 0x8000be <Global_f64InstPower_mW>
     d0c:	70 91 bf 00 	lds	r23, 0x00BF	; 0x8000bf <Global_f64InstPower_mW+0x1>
     d10:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <Global_f64InstPower_mW+0x2>
     d14:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <Global_f64InstPower_mW+0x3>
}
     d18:	08 95       	ret

00000d1a <CALC_f64GetEnergy_mJ>:

f64 CALC_f64GetEnergy_mJ(void)
{
	return Global_f64Energy_mJ;
     d1a:	60 91 ae 00 	lds	r22, 0x00AE	; 0x8000ae <Global_f64Energy_mJ>
     d1e:	70 91 af 00 	lds	r23, 0x00AF	; 0x8000af <Global_f64Energy_mJ+0x1>
     d22:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <Global_f64Energy_mJ+0x2>
     d26:	90 91 b1 00 	lds	r25, 0x00B1	; 0x8000b1 <Global_f64Energy_mJ+0x3>
}
     d2a:	08 95       	ret

00000d2c <DISP_voidDisplayOnLCD>:
	if (Global_u8DisplayFlag > 3)
		Global_u8DisplayFlag = 0;
}

void DISP_voidDisplayOnLCD(f32 Copy_f32Result)
{
     d2c:	8f 92       	push	r8
     d2e:	9f 92       	push	r9
     d30:	af 92       	push	r10
     d32:	bf 92       	push	r11
     d34:	cf 92       	push	r12
     d36:	df 92       	push	r13
     d38:	ef 92       	push	r14
     d3a:	ff 92       	push	r15
     d3c:	4b 01       	movw	r8, r22
     d3e:	5c 01       	movw	r10, r24
	s32 Displayed = 0 , Decimal = 1;
	u8 counter = 0;
	
	if(Copy_f32Result < 0)
     d40:	20 e0       	ldi	r18, 0x00	; 0
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	a9 01       	movw	r20, r18
     d46:	0e 94 fa 07 	call	0xff4	; 0xff4 <__cmpsf2>
     d4a:	88 23       	and	r24, r24
     d4c:	3c f4       	brge	.+14     	; 0xd5c <DISP_voidDisplayOnLCD+0x30>
	{
		LCD_voidDisplayChar('-');
     d4e:	8d e2       	ldi	r24, 0x2D	; 45
     d50:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <LCD_voidDisplayChar>
		Copy_f32Result = -1 * Copy_f32Result;
     d54:	b7 fa       	bst	r11, 7
     d56:	b0 94       	com	r11
     d58:	b7 f8       	bld	r11, 7
     d5a:	b0 94       	com	r11
	}
	
	Displayed = (u32) (Copy_f32Result);
     d5c:	c5 01       	movw	r24, r10
     d5e:	b4 01       	movw	r22, r8
     d60:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fixunssfsi>
	LCD_voidDisplayInt(Displayed);
     d64:	0e 94 2f 05 	call	0xa5e	; 0xa5e <LCD_voidDisplayInt>
	
	for(counter = 0 ; counter < DECIMAL ; counter++)
     d68:	80 e0       	ldi	r24, 0x00	; 0
		Global_u8DisplayFlag = 0;
}

void DISP_voidDisplayOnLCD(f32 Copy_f32Result)
{
	s32 Displayed = 0 , Decimal = 1;
     d6a:	c1 2c       	mov	r12, r1
     d6c:	d1 2c       	mov	r13, r1
     d6e:	76 01       	movw	r14, r12
     d70:	c3 94       	inc	r12
	}
	
	Displayed = (u32) (Copy_f32Result);
	LCD_voidDisplayInt(Displayed);
	
	for(counter = 0 ; counter < DECIMAL ; counter++)
     d72:	13 c0       	rjmp	.+38     	; 0xd9a <DISP_voidDisplayOnLCD+0x6e>
	{
		Decimal *= 10;
     d74:	cc 0c       	add	r12, r12
     d76:	dd 1c       	adc	r13, r13
     d78:	ee 1c       	adc	r14, r14
     d7a:	ff 1c       	adc	r15, r15
     d7c:	b7 01       	movw	r22, r14
     d7e:	a6 01       	movw	r20, r12
     d80:	44 0f       	add	r20, r20
     d82:	55 1f       	adc	r21, r21
     d84:	66 1f       	adc	r22, r22
     d86:	77 1f       	adc	r23, r23
     d88:	44 0f       	add	r20, r20
     d8a:	55 1f       	adc	r21, r21
     d8c:	66 1f       	adc	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	c4 0e       	add	r12, r20
     d92:	d5 1e       	adc	r13, r21
     d94:	e6 1e       	adc	r14, r22
     d96:	f7 1e       	adc	r15, r23
	}
	
	Displayed = (u32) (Copy_f32Result);
	LCD_voidDisplayInt(Displayed);
	
	for(counter = 0 ; counter < DECIMAL ; counter++)
     d98:	8f 5f       	subi	r24, 0xFF	; 255
     d9a:	82 30       	cpi	r24, 0x02	; 2
     d9c:	58 f3       	brcs	.-42     	; 0xd74 <DISP_voidDisplayOnLCD+0x48>
	{
		Decimal *= 10;
	}
	
	LCD_voidDisplayChar('.');
     d9e:	8e e2       	ldi	r24, 0x2E	; 46
     da0:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <LCD_voidDisplayChar>
	Displayed = (u32) (Copy_f32Result * Decimal) % Decimal;
     da4:	c7 01       	movw	r24, r14
     da6:	b6 01       	movw	r22, r12
     da8:	0e 94 a2 08 	call	0x1144	; 0x1144 <__floatsisf>
     dac:	a5 01       	movw	r20, r10
     dae:	94 01       	movw	r18, r8
     db0:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__mulsf3>
     db4:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fixunssfsi>
     db8:	a7 01       	movw	r20, r14
     dba:	96 01       	movw	r18, r12
     dbc:	0e 94 bf 09 	call	0x137e	; 0x137e <__udivmodsi4>
	LCD_voidDisplayInt(Displayed);
     dc0:	0e 94 2f 05 	call	0xa5e	; 0xa5e <LCD_voidDisplayInt>
     dc4:	ff 90       	pop	r15
     dc6:	ef 90       	pop	r14
     dc8:	df 90       	pop	r13
     dca:	cf 90       	pop	r12
     dcc:	bf 90       	pop	r11
     dce:	af 90       	pop	r10
     dd0:	9f 90       	pop	r9
     dd2:	8f 90       	pop	r8
     dd4:	08 95       	ret

00000dd6 <main>:



int main(void)
{
	CALC_voidInit();
     dd6:	0e 94 48 06 	call	0xc90	; 0xc90 <CALC_voidInit>
	
	LCD_voidInitDisplay();
     dda:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_voidInitDisplay>
	f32 local_f32Temp = 0;
	
    while(true)
    {
        
		if (is_updated == true)
     dde:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <is_updated>
     de2:	81 30       	cpi	r24, 0x01	; 1
     de4:	e1 f7       	brne	.-8      	; 0xdde <main+0x8>
		{
			switch (Global_u8DisplayFlag)
     de6:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <Global_u8DisplayFlag>
     dea:	81 30       	cpi	r24, 0x01	; 1
     dec:	59 f1       	breq	.+86     	; 0xe44 <main+0x6e>
     dee:	38 f0       	brcs	.+14     	; 0xdfe <main+0x28>
     df0:	82 30       	cpi	r24, 0x02	; 2
     df2:	09 f4       	brne	.+2      	; 0xdf6 <main+0x20>
     df4:	4a c0       	rjmp	.+148    	; 0xe8a <main+0xb4>
     df6:	83 30       	cpi	r24, 0x03	; 3
     df8:	09 f4       	brne	.+2      	; 0xdfc <main+0x26>
     dfa:	6a c0       	rjmp	.+212    	; 0xed0 <main+0xfa>
     dfc:	8b c0       	rjmp	.+278    	; 0xf14 <main+0x13e>
			{
				case DISP_I:
					local_f32Temp = CALC_f64GetInstCurrent_mA();
     dfe:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <CALC_f64GetInstCurrent_mA>
     e02:	6b 01       	movw	r12, r22
     e04:	7c 01       	movw	r14, r24
					LCD_voidDisplayStr("I = ");
     e06:	80 e6       	ldi	r24, 0x60	; 96
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e0e:	8f ec       	ldi	r24, 0xCF	; 207
     e10:	97 e0       	ldi	r25, 0x07	; 7
     e12:	01 97       	sbiw	r24, 0x01	; 1
     e14:	f1 f7       	brne	.-4      	; 0xe12 <main+0x3c>
     e16:	00 c0       	rjmp	.+0      	; 0xe18 <main+0x42>
     e18:	00 00       	nop
					_delay_ms(1);
					DISP_voidDisplayOnLCD(local_f32Temp);
     e1a:	c7 01       	movw	r24, r14
     e1c:	b6 01       	movw	r22, r12
     e1e:	0e 94 96 06 	call	0xd2c	; 0xd2c <DISP_voidDisplayOnLCD>
     e22:	8f ec       	ldi	r24, 0xCF	; 207
     e24:	97 e0       	ldi	r25, 0x07	; 7
     e26:	01 97       	sbiw	r24, 0x01	; 1
     e28:	f1 f7       	brne	.-4      	; 0xe26 <main+0x50>
     e2a:	00 c0       	rjmp	.+0      	; 0xe2c <main+0x56>
     e2c:	00 00       	nop
					_delay_ms(1);
					LCD_voidDisplayStr(" A");
     e2e:	85 e6       	ldi	r24, 0x65	; 101
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     e36:	8f ec       	ldi	r24, 0xCF	; 207
     e38:	97 e0       	ldi	r25, 0x07	; 7
     e3a:	01 97       	sbiw	r24, 0x01	; 1
     e3c:	f1 f7       	brne	.-4      	; 0xe3a <main+0x64>
     e3e:	00 c0       	rjmp	.+0      	; 0xe40 <main+0x6a>
     e40:	00 00       	nop
     e42:	68 c0       	rjmp	.+208    	; 0xf14 <main+0x13e>
					_delay_ms(1);
					break;
				case DISP_V:
					local_f32Temp = CALC_f64GetInstVoltage_mV();
     e44:	0e 94 72 06 	call	0xce4	; 0xce4 <CALC_f64GetInstVoltage_mV>
     e48:	6b 01       	movw	r12, r22
     e4a:	7c 01       	movw	r14, r24
					LCD_voidDisplayStr("V = ");
     e4c:	88 e6       	ldi	r24, 0x68	; 104
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     e54:	8f ec       	ldi	r24, 0xCF	; 207
     e56:	97 e0       	ldi	r25, 0x07	; 7
     e58:	01 97       	sbiw	r24, 0x01	; 1
     e5a:	f1 f7       	brne	.-4      	; 0xe58 <main+0x82>
     e5c:	00 c0       	rjmp	.+0      	; 0xe5e <main+0x88>
     e5e:	00 00       	nop
					_delay_ms(1);
					DISP_voidDisplayOnLCD(local_f32Temp);
     e60:	c7 01       	movw	r24, r14
     e62:	b6 01       	movw	r22, r12
     e64:	0e 94 96 06 	call	0xd2c	; 0xd2c <DISP_voidDisplayOnLCD>
     e68:	8f ec       	ldi	r24, 0xCF	; 207
     e6a:	97 e0       	ldi	r25, 0x07	; 7
     e6c:	01 97       	sbiw	r24, 0x01	; 1
     e6e:	f1 f7       	brne	.-4      	; 0xe6c <main+0x96>
     e70:	00 c0       	rjmp	.+0      	; 0xe72 <main+0x9c>
     e72:	00 00       	nop
					_delay_ms(1);
					LCD_voidDisplayStr(" V");
     e74:	8d e6       	ldi	r24, 0x6D	; 109
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     e7c:	8f ec       	ldi	r24, 0xCF	; 207
     e7e:	97 e0       	ldi	r25, 0x07	; 7
     e80:	01 97       	sbiw	r24, 0x01	; 1
     e82:	f1 f7       	brne	.-4      	; 0xe80 <main+0xaa>
     e84:	00 c0       	rjmp	.+0      	; 0xe86 <main+0xb0>
     e86:	00 00       	nop
     e88:	45 c0       	rjmp	.+138    	; 0xf14 <main+0x13e>
					_delay_ms(1);
					break;
				case DISP_P:
					local_f32Temp = CALC_f64GetInstPower_mW();
     e8a:	0e 94 84 06 	call	0xd08	; 0xd08 <CALC_f64GetInstPower_mW>
     e8e:	6b 01       	movw	r12, r22
     e90:	7c 01       	movw	r14, r24
					LCD_voidDisplayStr("P = ");
     e92:	80 e7       	ldi	r24, 0x70	; 112
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     e9a:	8f ec       	ldi	r24, 0xCF	; 207
     e9c:	97 e0       	ldi	r25, 0x07	; 7
     e9e:	01 97       	sbiw	r24, 0x01	; 1
     ea0:	f1 f7       	brne	.-4      	; 0xe9e <main+0xc8>
     ea2:	00 c0       	rjmp	.+0      	; 0xea4 <main+0xce>
     ea4:	00 00       	nop
					_delay_ms(1);
					DISP_voidDisplayOnLCD(local_f32Temp);
     ea6:	c7 01       	movw	r24, r14
     ea8:	b6 01       	movw	r22, r12
     eaa:	0e 94 96 06 	call	0xd2c	; 0xd2c <DISP_voidDisplayOnLCD>
     eae:	8f ec       	ldi	r24, 0xCF	; 207
     eb0:	97 e0       	ldi	r25, 0x07	; 7
     eb2:	01 97       	sbiw	r24, 0x01	; 1
     eb4:	f1 f7       	brne	.-4      	; 0xeb2 <main+0xdc>
     eb6:	00 c0       	rjmp	.+0      	; 0xeb8 <main+0xe2>
     eb8:	00 00       	nop
					_delay_ms(1);
					LCD_voidDisplayStr(" W");
     eba:	85 e7       	ldi	r24, 0x75	; 117
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     ec2:	8f ec       	ldi	r24, 0xCF	; 207
     ec4:	97 e0       	ldi	r25, 0x07	; 7
     ec6:	01 97       	sbiw	r24, 0x01	; 1
     ec8:	f1 f7       	brne	.-4      	; 0xec6 <main+0xf0>
     eca:	00 c0       	rjmp	.+0      	; 0xecc <main+0xf6>
     ecc:	00 00       	nop
     ece:	22 c0       	rjmp	.+68     	; 0xf14 <main+0x13e>
					_delay_ms(1);
					break;
				case DISP_E:
					local_f32Temp = CALC_f64GetEnergy_mJ();
     ed0:	0e 94 8d 06 	call	0xd1a	; 0xd1a <CALC_f64GetEnergy_mJ>
     ed4:	6b 01       	movw	r12, r22
     ed6:	7c 01       	movw	r14, r24
					LCD_voidDisplayStr("E = ");
     ed8:	88 e7       	ldi	r24, 0x78	; 120
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     ee0:	8f ec       	ldi	r24, 0xCF	; 207
     ee2:	97 e0       	ldi	r25, 0x07	; 7
     ee4:	01 97       	sbiw	r24, 0x01	; 1
     ee6:	f1 f7       	brne	.-4      	; 0xee4 <main+0x10e>
     ee8:	00 c0       	rjmp	.+0      	; 0xeea <main+0x114>
     eea:	00 00       	nop
					_delay_ms(1);
					DISP_voidDisplayOnLCD(local_f32Temp);
     eec:	c7 01       	movw	r24, r14
     eee:	b6 01       	movw	r22, r12
     ef0:	0e 94 96 06 	call	0xd2c	; 0xd2c <DISP_voidDisplayOnLCD>
     ef4:	8f ec       	ldi	r24, 0xCF	; 207
     ef6:	97 e0       	ldi	r25, 0x07	; 7
     ef8:	01 97       	sbiw	r24, 0x01	; 1
     efa:	f1 f7       	brne	.-4      	; 0xef8 <main+0x122>
     efc:	00 c0       	rjmp	.+0      	; 0xefe <main+0x128>
     efe:	00 00       	nop
					_delay_ms(1);
					LCD_voidDisplayStr(" W.s");
     f00:	8d e7       	ldi	r24, 0x7D	; 125
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	0e 94 1a 05 	call	0xa34	; 0xa34 <LCD_voidDisplayStr>
     f08:	8f ec       	ldi	r24, 0xCF	; 207
     f0a:	97 e0       	ldi	r25, 0x07	; 7
     f0c:	01 97       	sbiw	r24, 0x01	; 1
     f0e:	f1 f7       	brne	.-4      	; 0xf0c <main+0x136>
     f10:	00 c0       	rjmp	.+0      	; 0xf12 <main+0x13c>
     f12:	00 00       	nop
					_delay_ms(1);
					break;
			}
			is_updated = false;
     f14:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <is_updated>
     f18:	62 cf       	rjmp	.-316    	; 0xdde <main+0x8>

00000f1a <__subsf3>:
     f1a:	50 58       	subi	r21, 0x80	; 128

00000f1c <__addsf3>:
     f1c:	bb 27       	eor	r27, r27
     f1e:	aa 27       	eor	r26, r26
     f20:	0e 94 a5 07 	call	0xf4a	; 0xf4a <__addsf3x>
     f24:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__fp_round>
     f28:	0e 94 0a 09 	call	0x1214	; 0x1214 <__fp_pscA>
     f2c:	38 f0       	brcs	.+14     	; 0xf3c <__addsf3+0x20>
     f2e:	0e 94 11 09 	call	0x1222	; 0x1222 <__fp_pscB>
     f32:	20 f0       	brcs	.+8      	; 0xf3c <__addsf3+0x20>
     f34:	39 f4       	brne	.+14     	; 0xf44 <__addsf3+0x28>
     f36:	9f 3f       	cpi	r25, 0xFF	; 255
     f38:	19 f4       	brne	.+6      	; 0xf40 <__addsf3+0x24>
     f3a:	26 f4       	brtc	.+8      	; 0xf44 <__addsf3+0x28>
     f3c:	0c 94 07 09 	jmp	0x120e	; 0x120e <__fp_nan>
     f40:	0e f4       	brtc	.+2      	; 0xf44 <__addsf3+0x28>
     f42:	e0 95       	com	r30
     f44:	e7 fb       	bst	r30, 7
     f46:	0c 94 01 09 	jmp	0x1202	; 0x1202 <__fp_inf>

00000f4a <__addsf3x>:
     f4a:	e9 2f       	mov	r30, r25
     f4c:	0e 94 29 09 	call	0x1252	; 0x1252 <__fp_split3>
     f50:	58 f3       	brcs	.-42     	; 0xf28 <__addsf3+0xc>
     f52:	ba 17       	cp	r27, r26
     f54:	62 07       	cpc	r22, r18
     f56:	73 07       	cpc	r23, r19
     f58:	84 07       	cpc	r24, r20
     f5a:	95 07       	cpc	r25, r21
     f5c:	20 f0       	brcs	.+8      	; 0xf66 <__addsf3x+0x1c>
     f5e:	79 f4       	brne	.+30     	; 0xf7e <__addsf3x+0x34>
     f60:	a6 f5       	brtc	.+104    	; 0xfca <__addsf3x+0x80>
     f62:	0c 94 4b 09 	jmp	0x1296	; 0x1296 <__fp_zero>
     f66:	0e f4       	brtc	.+2      	; 0xf6a <__addsf3x+0x20>
     f68:	e0 95       	com	r30
     f6a:	0b 2e       	mov	r0, r27
     f6c:	ba 2f       	mov	r27, r26
     f6e:	a0 2d       	mov	r26, r0
     f70:	0b 01       	movw	r0, r22
     f72:	b9 01       	movw	r22, r18
     f74:	90 01       	movw	r18, r0
     f76:	0c 01       	movw	r0, r24
     f78:	ca 01       	movw	r24, r20
     f7a:	a0 01       	movw	r20, r0
     f7c:	11 24       	eor	r1, r1
     f7e:	ff 27       	eor	r31, r31
     f80:	59 1b       	sub	r21, r25
     f82:	99 f0       	breq	.+38     	; 0xfaa <__addsf3x+0x60>
     f84:	59 3f       	cpi	r21, 0xF9	; 249
     f86:	50 f4       	brcc	.+20     	; 0xf9c <__addsf3x+0x52>
     f88:	50 3e       	cpi	r21, 0xE0	; 224
     f8a:	68 f1       	brcs	.+90     	; 0xfe6 <__addsf3x+0x9c>
     f8c:	1a 16       	cp	r1, r26
     f8e:	f0 40       	sbci	r31, 0x00	; 0
     f90:	a2 2f       	mov	r26, r18
     f92:	23 2f       	mov	r18, r19
     f94:	34 2f       	mov	r19, r20
     f96:	44 27       	eor	r20, r20
     f98:	58 5f       	subi	r21, 0xF8	; 248
     f9a:	f3 cf       	rjmp	.-26     	; 0xf82 <__addsf3x+0x38>
     f9c:	46 95       	lsr	r20
     f9e:	37 95       	ror	r19
     fa0:	27 95       	ror	r18
     fa2:	a7 95       	ror	r26
     fa4:	f0 40       	sbci	r31, 0x00	; 0
     fa6:	53 95       	inc	r21
     fa8:	c9 f7       	brne	.-14     	; 0xf9c <__addsf3x+0x52>
     faa:	7e f4       	brtc	.+30     	; 0xfca <__addsf3x+0x80>
     fac:	1f 16       	cp	r1, r31
     fae:	ba 0b       	sbc	r27, r26
     fb0:	62 0b       	sbc	r22, r18
     fb2:	73 0b       	sbc	r23, r19
     fb4:	84 0b       	sbc	r24, r20
     fb6:	ba f0       	brmi	.+46     	; 0xfe6 <__addsf3x+0x9c>
     fb8:	91 50       	subi	r25, 0x01	; 1
     fba:	a1 f0       	breq	.+40     	; 0xfe4 <__addsf3x+0x9a>
     fbc:	ff 0f       	add	r31, r31
     fbe:	bb 1f       	adc	r27, r27
     fc0:	66 1f       	adc	r22, r22
     fc2:	77 1f       	adc	r23, r23
     fc4:	88 1f       	adc	r24, r24
     fc6:	c2 f7       	brpl	.-16     	; 0xfb8 <__addsf3x+0x6e>
     fc8:	0e c0       	rjmp	.+28     	; 0xfe6 <__addsf3x+0x9c>
     fca:	ba 0f       	add	r27, r26
     fcc:	62 1f       	adc	r22, r18
     fce:	73 1f       	adc	r23, r19
     fd0:	84 1f       	adc	r24, r20
     fd2:	48 f4       	brcc	.+18     	; 0xfe6 <__addsf3x+0x9c>
     fd4:	87 95       	ror	r24
     fd6:	77 95       	ror	r23
     fd8:	67 95       	ror	r22
     fda:	b7 95       	ror	r27
     fdc:	f7 95       	ror	r31
     fde:	9e 3f       	cpi	r25, 0xFE	; 254
     fe0:	08 f0       	brcs	.+2      	; 0xfe4 <__addsf3x+0x9a>
     fe2:	b0 cf       	rjmp	.-160    	; 0xf44 <__addsf3+0x28>
     fe4:	93 95       	inc	r25
     fe6:	88 0f       	add	r24, r24
     fe8:	08 f0       	brcs	.+2      	; 0xfec <__addsf3x+0xa2>
     fea:	99 27       	eor	r25, r25
     fec:	ee 0f       	add	r30, r30
     fee:	97 95       	ror	r25
     ff0:	87 95       	ror	r24
     ff2:	08 95       	ret

00000ff4 <__cmpsf2>:
     ff4:	0e 94 dd 08 	call	0x11ba	; 0x11ba <__fp_cmp>
     ff8:	08 f4       	brcc	.+2      	; 0xffc <__cmpsf2+0x8>
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	08 95       	ret

00000ffe <__divsf3>:
     ffe:	0e 94 13 08 	call	0x1026	; 0x1026 <__divsf3x>
    1002:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__fp_round>
    1006:	0e 94 11 09 	call	0x1222	; 0x1222 <__fp_pscB>
    100a:	58 f0       	brcs	.+22     	; 0x1022 <__divsf3+0x24>
    100c:	0e 94 0a 09 	call	0x1214	; 0x1214 <__fp_pscA>
    1010:	40 f0       	brcs	.+16     	; 0x1022 <__divsf3+0x24>
    1012:	29 f4       	brne	.+10     	; 0x101e <__divsf3+0x20>
    1014:	5f 3f       	cpi	r21, 0xFF	; 255
    1016:	29 f0       	breq	.+10     	; 0x1022 <__divsf3+0x24>
    1018:	0c 94 01 09 	jmp	0x1202	; 0x1202 <__fp_inf>
    101c:	51 11       	cpse	r21, r1
    101e:	0c 94 4c 09 	jmp	0x1298	; 0x1298 <__fp_szero>
    1022:	0c 94 07 09 	jmp	0x120e	; 0x120e <__fp_nan>

00001026 <__divsf3x>:
    1026:	0e 94 29 09 	call	0x1252	; 0x1252 <__fp_split3>
    102a:	68 f3       	brcs	.-38     	; 0x1006 <__divsf3+0x8>

0000102c <__divsf3_pse>:
    102c:	99 23       	and	r25, r25
    102e:	b1 f3       	breq	.-20     	; 0x101c <__divsf3+0x1e>
    1030:	55 23       	and	r21, r21
    1032:	91 f3       	breq	.-28     	; 0x1018 <__divsf3+0x1a>
    1034:	95 1b       	sub	r25, r21
    1036:	55 0b       	sbc	r21, r21
    1038:	bb 27       	eor	r27, r27
    103a:	aa 27       	eor	r26, r26
    103c:	62 17       	cp	r22, r18
    103e:	73 07       	cpc	r23, r19
    1040:	84 07       	cpc	r24, r20
    1042:	38 f0       	brcs	.+14     	; 0x1052 <__divsf3_pse+0x26>
    1044:	9f 5f       	subi	r25, 0xFF	; 255
    1046:	5f 4f       	sbci	r21, 0xFF	; 255
    1048:	22 0f       	add	r18, r18
    104a:	33 1f       	adc	r19, r19
    104c:	44 1f       	adc	r20, r20
    104e:	aa 1f       	adc	r26, r26
    1050:	a9 f3       	breq	.-22     	; 0x103c <__divsf3_pse+0x10>
    1052:	35 d0       	rcall	.+106    	; 0x10be <__divsf3_pse+0x92>
    1054:	0e 2e       	mov	r0, r30
    1056:	3a f0       	brmi	.+14     	; 0x1066 <__divsf3_pse+0x3a>
    1058:	e0 e8       	ldi	r30, 0x80	; 128
    105a:	32 d0       	rcall	.+100    	; 0x10c0 <__divsf3_pse+0x94>
    105c:	91 50       	subi	r25, 0x01	; 1
    105e:	50 40       	sbci	r21, 0x00	; 0
    1060:	e6 95       	lsr	r30
    1062:	00 1c       	adc	r0, r0
    1064:	ca f7       	brpl	.-14     	; 0x1058 <__divsf3_pse+0x2c>
    1066:	2b d0       	rcall	.+86     	; 0x10be <__divsf3_pse+0x92>
    1068:	fe 2f       	mov	r31, r30
    106a:	29 d0       	rcall	.+82     	; 0x10be <__divsf3_pse+0x92>
    106c:	66 0f       	add	r22, r22
    106e:	77 1f       	adc	r23, r23
    1070:	88 1f       	adc	r24, r24
    1072:	bb 1f       	adc	r27, r27
    1074:	26 17       	cp	r18, r22
    1076:	37 07       	cpc	r19, r23
    1078:	48 07       	cpc	r20, r24
    107a:	ab 07       	cpc	r26, r27
    107c:	b0 e8       	ldi	r27, 0x80	; 128
    107e:	09 f0       	breq	.+2      	; 0x1082 <__divsf3_pse+0x56>
    1080:	bb 0b       	sbc	r27, r27
    1082:	80 2d       	mov	r24, r0
    1084:	bf 01       	movw	r22, r30
    1086:	ff 27       	eor	r31, r31
    1088:	93 58       	subi	r25, 0x83	; 131
    108a:	5f 4f       	sbci	r21, 0xFF	; 255
    108c:	3a f0       	brmi	.+14     	; 0x109c <__divsf3_pse+0x70>
    108e:	9e 3f       	cpi	r25, 0xFE	; 254
    1090:	51 05       	cpc	r21, r1
    1092:	78 f0       	brcs	.+30     	; 0x10b2 <__divsf3_pse+0x86>
    1094:	0c 94 01 09 	jmp	0x1202	; 0x1202 <__fp_inf>
    1098:	0c 94 4c 09 	jmp	0x1298	; 0x1298 <__fp_szero>
    109c:	5f 3f       	cpi	r21, 0xFF	; 255
    109e:	e4 f3       	brlt	.-8      	; 0x1098 <__divsf3_pse+0x6c>
    10a0:	98 3e       	cpi	r25, 0xE8	; 232
    10a2:	d4 f3       	brlt	.-12     	; 0x1098 <__divsf3_pse+0x6c>
    10a4:	86 95       	lsr	r24
    10a6:	77 95       	ror	r23
    10a8:	67 95       	ror	r22
    10aa:	b7 95       	ror	r27
    10ac:	f7 95       	ror	r31
    10ae:	9f 5f       	subi	r25, 0xFF	; 255
    10b0:	c9 f7       	brne	.-14     	; 0x10a4 <__divsf3_pse+0x78>
    10b2:	88 0f       	add	r24, r24
    10b4:	91 1d       	adc	r25, r1
    10b6:	96 95       	lsr	r25
    10b8:	87 95       	ror	r24
    10ba:	97 f9       	bld	r25, 7
    10bc:	08 95       	ret
    10be:	e1 e0       	ldi	r30, 0x01	; 1
    10c0:	66 0f       	add	r22, r22
    10c2:	77 1f       	adc	r23, r23
    10c4:	88 1f       	adc	r24, r24
    10c6:	bb 1f       	adc	r27, r27
    10c8:	62 17       	cp	r22, r18
    10ca:	73 07       	cpc	r23, r19
    10cc:	84 07       	cpc	r24, r20
    10ce:	ba 07       	cpc	r27, r26
    10d0:	20 f0       	brcs	.+8      	; 0x10da <__divsf3_pse+0xae>
    10d2:	62 1b       	sub	r22, r18
    10d4:	73 0b       	sbc	r23, r19
    10d6:	84 0b       	sbc	r24, r20
    10d8:	ba 0b       	sbc	r27, r26
    10da:	ee 1f       	adc	r30, r30
    10dc:	88 f7       	brcc	.-30     	; 0x10c0 <__divsf3_pse+0x94>
    10de:	e0 95       	com	r30
    10e0:	08 95       	ret

000010e2 <__fixunssfsi>:
    10e2:	0e 94 31 09 	call	0x1262	; 0x1262 <__fp_splitA>
    10e6:	88 f0       	brcs	.+34     	; 0x110a <__fixunssfsi+0x28>
    10e8:	9f 57       	subi	r25, 0x7F	; 127
    10ea:	98 f0       	brcs	.+38     	; 0x1112 <__fixunssfsi+0x30>
    10ec:	b9 2f       	mov	r27, r25
    10ee:	99 27       	eor	r25, r25
    10f0:	b7 51       	subi	r27, 0x17	; 23
    10f2:	b0 f0       	brcs	.+44     	; 0x1120 <__fixunssfsi+0x3e>
    10f4:	e1 f0       	breq	.+56     	; 0x112e <__fixunssfsi+0x4c>
    10f6:	66 0f       	add	r22, r22
    10f8:	77 1f       	adc	r23, r23
    10fa:	88 1f       	adc	r24, r24
    10fc:	99 1f       	adc	r25, r25
    10fe:	1a f0       	brmi	.+6      	; 0x1106 <__fixunssfsi+0x24>
    1100:	ba 95       	dec	r27
    1102:	c9 f7       	brne	.-14     	; 0x10f6 <__fixunssfsi+0x14>
    1104:	14 c0       	rjmp	.+40     	; 0x112e <__fixunssfsi+0x4c>
    1106:	b1 30       	cpi	r27, 0x01	; 1
    1108:	91 f0       	breq	.+36     	; 0x112e <__fixunssfsi+0x4c>
    110a:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fp_zero>
    110e:	b1 e0       	ldi	r27, 0x01	; 1
    1110:	08 95       	ret
    1112:	0c 94 4b 09 	jmp	0x1296	; 0x1296 <__fp_zero>
    1116:	67 2f       	mov	r22, r23
    1118:	78 2f       	mov	r23, r24
    111a:	88 27       	eor	r24, r24
    111c:	b8 5f       	subi	r27, 0xF8	; 248
    111e:	39 f0       	breq	.+14     	; 0x112e <__fixunssfsi+0x4c>
    1120:	b9 3f       	cpi	r27, 0xF9	; 249
    1122:	cc f3       	brlt	.-14     	; 0x1116 <__fixunssfsi+0x34>
    1124:	86 95       	lsr	r24
    1126:	77 95       	ror	r23
    1128:	67 95       	ror	r22
    112a:	b3 95       	inc	r27
    112c:	d9 f7       	brne	.-10     	; 0x1124 <__fixunssfsi+0x42>
    112e:	3e f4       	brtc	.+14     	; 0x113e <__fixunssfsi+0x5c>
    1130:	90 95       	com	r25
    1132:	80 95       	com	r24
    1134:	70 95       	com	r23
    1136:	61 95       	neg	r22
    1138:	7f 4f       	sbci	r23, 0xFF	; 255
    113a:	8f 4f       	sbci	r24, 0xFF	; 255
    113c:	9f 4f       	sbci	r25, 0xFF	; 255
    113e:	08 95       	ret

00001140 <__floatunsisf>:
    1140:	e8 94       	clt
    1142:	09 c0       	rjmp	.+18     	; 0x1156 <__floatsisf+0x12>

00001144 <__floatsisf>:
    1144:	97 fb       	bst	r25, 7
    1146:	3e f4       	brtc	.+14     	; 0x1156 <__floatsisf+0x12>
    1148:	90 95       	com	r25
    114a:	80 95       	com	r24
    114c:	70 95       	com	r23
    114e:	61 95       	neg	r22
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	8f 4f       	sbci	r24, 0xFF	; 255
    1154:	9f 4f       	sbci	r25, 0xFF	; 255
    1156:	99 23       	and	r25, r25
    1158:	a9 f0       	breq	.+42     	; 0x1184 <__floatsisf+0x40>
    115a:	f9 2f       	mov	r31, r25
    115c:	96 e9       	ldi	r25, 0x96	; 150
    115e:	bb 27       	eor	r27, r27
    1160:	93 95       	inc	r25
    1162:	f6 95       	lsr	r31
    1164:	87 95       	ror	r24
    1166:	77 95       	ror	r23
    1168:	67 95       	ror	r22
    116a:	b7 95       	ror	r27
    116c:	f1 11       	cpse	r31, r1
    116e:	f8 cf       	rjmp	.-16     	; 0x1160 <__floatsisf+0x1c>
    1170:	fa f4       	brpl	.+62     	; 0x11b0 <__floatsisf+0x6c>
    1172:	bb 0f       	add	r27, r27
    1174:	11 f4       	brne	.+4      	; 0x117a <__floatsisf+0x36>
    1176:	60 ff       	sbrs	r22, 0
    1178:	1b c0       	rjmp	.+54     	; 0x11b0 <__floatsisf+0x6c>
    117a:	6f 5f       	subi	r22, 0xFF	; 255
    117c:	7f 4f       	sbci	r23, 0xFF	; 255
    117e:	8f 4f       	sbci	r24, 0xFF	; 255
    1180:	9f 4f       	sbci	r25, 0xFF	; 255
    1182:	16 c0       	rjmp	.+44     	; 0x11b0 <__floatsisf+0x6c>
    1184:	88 23       	and	r24, r24
    1186:	11 f0       	breq	.+4      	; 0x118c <__floatsisf+0x48>
    1188:	96 e9       	ldi	r25, 0x96	; 150
    118a:	11 c0       	rjmp	.+34     	; 0x11ae <__floatsisf+0x6a>
    118c:	77 23       	and	r23, r23
    118e:	21 f0       	breq	.+8      	; 0x1198 <__floatsisf+0x54>
    1190:	9e e8       	ldi	r25, 0x8E	; 142
    1192:	87 2f       	mov	r24, r23
    1194:	76 2f       	mov	r23, r22
    1196:	05 c0       	rjmp	.+10     	; 0x11a2 <__floatsisf+0x5e>
    1198:	66 23       	and	r22, r22
    119a:	71 f0       	breq	.+28     	; 0x11b8 <__floatsisf+0x74>
    119c:	96 e8       	ldi	r25, 0x86	; 134
    119e:	86 2f       	mov	r24, r22
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	60 e0       	ldi	r22, 0x00	; 0
    11a4:	2a f0       	brmi	.+10     	; 0x11b0 <__floatsisf+0x6c>
    11a6:	9a 95       	dec	r25
    11a8:	66 0f       	add	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	88 1f       	adc	r24, r24
    11ae:	da f7       	brpl	.-10     	; 0x11a6 <__floatsisf+0x62>
    11b0:	88 0f       	add	r24, r24
    11b2:	96 95       	lsr	r25
    11b4:	87 95       	ror	r24
    11b6:	97 f9       	bld	r25, 7
    11b8:	08 95       	ret

000011ba <__fp_cmp>:
    11ba:	99 0f       	add	r25, r25
    11bc:	00 08       	sbc	r0, r0
    11be:	55 0f       	add	r21, r21
    11c0:	aa 0b       	sbc	r26, r26
    11c2:	e0 e8       	ldi	r30, 0x80	; 128
    11c4:	fe ef       	ldi	r31, 0xFE	; 254
    11c6:	16 16       	cp	r1, r22
    11c8:	17 06       	cpc	r1, r23
    11ca:	e8 07       	cpc	r30, r24
    11cc:	f9 07       	cpc	r31, r25
    11ce:	c0 f0       	brcs	.+48     	; 0x1200 <__fp_cmp+0x46>
    11d0:	12 16       	cp	r1, r18
    11d2:	13 06       	cpc	r1, r19
    11d4:	e4 07       	cpc	r30, r20
    11d6:	f5 07       	cpc	r31, r21
    11d8:	98 f0       	brcs	.+38     	; 0x1200 <__fp_cmp+0x46>
    11da:	62 1b       	sub	r22, r18
    11dc:	73 0b       	sbc	r23, r19
    11de:	84 0b       	sbc	r24, r20
    11e0:	95 0b       	sbc	r25, r21
    11e2:	39 f4       	brne	.+14     	; 0x11f2 <__fp_cmp+0x38>
    11e4:	0a 26       	eor	r0, r26
    11e6:	61 f0       	breq	.+24     	; 0x1200 <__fp_cmp+0x46>
    11e8:	23 2b       	or	r18, r19
    11ea:	24 2b       	or	r18, r20
    11ec:	25 2b       	or	r18, r21
    11ee:	21 f4       	brne	.+8      	; 0x11f8 <__fp_cmp+0x3e>
    11f0:	08 95       	ret
    11f2:	0a 26       	eor	r0, r26
    11f4:	09 f4       	brne	.+2      	; 0x11f8 <__fp_cmp+0x3e>
    11f6:	a1 40       	sbci	r26, 0x01	; 1
    11f8:	a6 95       	lsr	r26
    11fa:	8f ef       	ldi	r24, 0xFF	; 255
    11fc:	81 1d       	adc	r24, r1
    11fe:	81 1d       	adc	r24, r1
    1200:	08 95       	ret

00001202 <__fp_inf>:
    1202:	97 f9       	bld	r25, 7
    1204:	9f 67       	ori	r25, 0x7F	; 127
    1206:	80 e8       	ldi	r24, 0x80	; 128
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	08 95       	ret

0000120e <__fp_nan>:
    120e:	9f ef       	ldi	r25, 0xFF	; 255
    1210:	80 ec       	ldi	r24, 0xC0	; 192
    1212:	08 95       	ret

00001214 <__fp_pscA>:
    1214:	00 24       	eor	r0, r0
    1216:	0a 94       	dec	r0
    1218:	16 16       	cp	r1, r22
    121a:	17 06       	cpc	r1, r23
    121c:	18 06       	cpc	r1, r24
    121e:	09 06       	cpc	r0, r25
    1220:	08 95       	ret

00001222 <__fp_pscB>:
    1222:	00 24       	eor	r0, r0
    1224:	0a 94       	dec	r0
    1226:	12 16       	cp	r1, r18
    1228:	13 06       	cpc	r1, r19
    122a:	14 06       	cpc	r1, r20
    122c:	05 06       	cpc	r0, r21
    122e:	08 95       	ret

00001230 <__fp_round>:
    1230:	09 2e       	mov	r0, r25
    1232:	03 94       	inc	r0
    1234:	00 0c       	add	r0, r0
    1236:	11 f4       	brne	.+4      	; 0x123c <__fp_round+0xc>
    1238:	88 23       	and	r24, r24
    123a:	52 f0       	brmi	.+20     	; 0x1250 <__fp_round+0x20>
    123c:	bb 0f       	add	r27, r27
    123e:	40 f4       	brcc	.+16     	; 0x1250 <__fp_round+0x20>
    1240:	bf 2b       	or	r27, r31
    1242:	11 f4       	brne	.+4      	; 0x1248 <__fp_round+0x18>
    1244:	60 ff       	sbrs	r22, 0
    1246:	04 c0       	rjmp	.+8      	; 0x1250 <__fp_round+0x20>
    1248:	6f 5f       	subi	r22, 0xFF	; 255
    124a:	7f 4f       	sbci	r23, 0xFF	; 255
    124c:	8f 4f       	sbci	r24, 0xFF	; 255
    124e:	9f 4f       	sbci	r25, 0xFF	; 255
    1250:	08 95       	ret

00001252 <__fp_split3>:
    1252:	57 fd       	sbrc	r21, 7
    1254:	90 58       	subi	r25, 0x80	; 128
    1256:	44 0f       	add	r20, r20
    1258:	55 1f       	adc	r21, r21
    125a:	59 f0       	breq	.+22     	; 0x1272 <__fp_splitA+0x10>
    125c:	5f 3f       	cpi	r21, 0xFF	; 255
    125e:	71 f0       	breq	.+28     	; 0x127c <__fp_splitA+0x1a>
    1260:	47 95       	ror	r20

00001262 <__fp_splitA>:
    1262:	88 0f       	add	r24, r24
    1264:	97 fb       	bst	r25, 7
    1266:	99 1f       	adc	r25, r25
    1268:	61 f0       	breq	.+24     	; 0x1282 <__fp_splitA+0x20>
    126a:	9f 3f       	cpi	r25, 0xFF	; 255
    126c:	79 f0       	breq	.+30     	; 0x128c <__fp_splitA+0x2a>
    126e:	87 95       	ror	r24
    1270:	08 95       	ret
    1272:	12 16       	cp	r1, r18
    1274:	13 06       	cpc	r1, r19
    1276:	14 06       	cpc	r1, r20
    1278:	55 1f       	adc	r21, r21
    127a:	f2 cf       	rjmp	.-28     	; 0x1260 <__fp_split3+0xe>
    127c:	46 95       	lsr	r20
    127e:	f1 df       	rcall	.-30     	; 0x1262 <__fp_splitA>
    1280:	08 c0       	rjmp	.+16     	; 0x1292 <__fp_splitA+0x30>
    1282:	16 16       	cp	r1, r22
    1284:	17 06       	cpc	r1, r23
    1286:	18 06       	cpc	r1, r24
    1288:	99 1f       	adc	r25, r25
    128a:	f1 cf       	rjmp	.-30     	; 0x126e <__fp_splitA+0xc>
    128c:	86 95       	lsr	r24
    128e:	71 05       	cpc	r23, r1
    1290:	61 05       	cpc	r22, r1
    1292:	08 94       	sec
    1294:	08 95       	ret

00001296 <__fp_zero>:
    1296:	e8 94       	clt

00001298 <__fp_szero>:
    1298:	bb 27       	eor	r27, r27
    129a:	66 27       	eor	r22, r22
    129c:	77 27       	eor	r23, r23
    129e:	cb 01       	movw	r24, r22
    12a0:	97 f9       	bld	r25, 7
    12a2:	08 95       	ret

000012a4 <__mulsf3>:
    12a4:	0e 94 65 09 	call	0x12ca	; 0x12ca <__mulsf3x>
    12a8:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__fp_round>
    12ac:	0e 94 0a 09 	call	0x1214	; 0x1214 <__fp_pscA>
    12b0:	38 f0       	brcs	.+14     	; 0x12c0 <__mulsf3+0x1c>
    12b2:	0e 94 11 09 	call	0x1222	; 0x1222 <__fp_pscB>
    12b6:	20 f0       	brcs	.+8      	; 0x12c0 <__mulsf3+0x1c>
    12b8:	95 23       	and	r25, r21
    12ba:	11 f0       	breq	.+4      	; 0x12c0 <__mulsf3+0x1c>
    12bc:	0c 94 01 09 	jmp	0x1202	; 0x1202 <__fp_inf>
    12c0:	0c 94 07 09 	jmp	0x120e	; 0x120e <__fp_nan>
    12c4:	11 24       	eor	r1, r1
    12c6:	0c 94 4c 09 	jmp	0x1298	; 0x1298 <__fp_szero>

000012ca <__mulsf3x>:
    12ca:	0e 94 29 09 	call	0x1252	; 0x1252 <__fp_split3>
    12ce:	70 f3       	brcs	.-36     	; 0x12ac <__mulsf3+0x8>

000012d0 <__mulsf3_pse>:
    12d0:	95 9f       	mul	r25, r21
    12d2:	c1 f3       	breq	.-16     	; 0x12c4 <__mulsf3+0x20>
    12d4:	95 0f       	add	r25, r21
    12d6:	50 e0       	ldi	r21, 0x00	; 0
    12d8:	55 1f       	adc	r21, r21
    12da:	62 9f       	mul	r22, r18
    12dc:	f0 01       	movw	r30, r0
    12de:	72 9f       	mul	r23, r18
    12e0:	bb 27       	eor	r27, r27
    12e2:	f0 0d       	add	r31, r0
    12e4:	b1 1d       	adc	r27, r1
    12e6:	63 9f       	mul	r22, r19
    12e8:	aa 27       	eor	r26, r26
    12ea:	f0 0d       	add	r31, r0
    12ec:	b1 1d       	adc	r27, r1
    12ee:	aa 1f       	adc	r26, r26
    12f0:	64 9f       	mul	r22, r20
    12f2:	66 27       	eor	r22, r22
    12f4:	b0 0d       	add	r27, r0
    12f6:	a1 1d       	adc	r26, r1
    12f8:	66 1f       	adc	r22, r22
    12fa:	82 9f       	mul	r24, r18
    12fc:	22 27       	eor	r18, r18
    12fe:	b0 0d       	add	r27, r0
    1300:	a1 1d       	adc	r26, r1
    1302:	62 1f       	adc	r22, r18
    1304:	73 9f       	mul	r23, r19
    1306:	b0 0d       	add	r27, r0
    1308:	a1 1d       	adc	r26, r1
    130a:	62 1f       	adc	r22, r18
    130c:	83 9f       	mul	r24, r19
    130e:	a0 0d       	add	r26, r0
    1310:	61 1d       	adc	r22, r1
    1312:	22 1f       	adc	r18, r18
    1314:	74 9f       	mul	r23, r20
    1316:	33 27       	eor	r19, r19
    1318:	a0 0d       	add	r26, r0
    131a:	61 1d       	adc	r22, r1
    131c:	23 1f       	adc	r18, r19
    131e:	84 9f       	mul	r24, r20
    1320:	60 0d       	add	r22, r0
    1322:	21 1d       	adc	r18, r1
    1324:	82 2f       	mov	r24, r18
    1326:	76 2f       	mov	r23, r22
    1328:	6a 2f       	mov	r22, r26
    132a:	11 24       	eor	r1, r1
    132c:	9f 57       	subi	r25, 0x7F	; 127
    132e:	50 40       	sbci	r21, 0x00	; 0
    1330:	9a f0       	brmi	.+38     	; 0x1358 <__mulsf3_pse+0x88>
    1332:	f1 f0       	breq	.+60     	; 0x1370 <__mulsf3_pse+0xa0>
    1334:	88 23       	and	r24, r24
    1336:	4a f0       	brmi	.+18     	; 0x134a <__mulsf3_pse+0x7a>
    1338:	ee 0f       	add	r30, r30
    133a:	ff 1f       	adc	r31, r31
    133c:	bb 1f       	adc	r27, r27
    133e:	66 1f       	adc	r22, r22
    1340:	77 1f       	adc	r23, r23
    1342:	88 1f       	adc	r24, r24
    1344:	91 50       	subi	r25, 0x01	; 1
    1346:	50 40       	sbci	r21, 0x00	; 0
    1348:	a9 f7       	brne	.-22     	; 0x1334 <__mulsf3_pse+0x64>
    134a:	9e 3f       	cpi	r25, 0xFE	; 254
    134c:	51 05       	cpc	r21, r1
    134e:	80 f0       	brcs	.+32     	; 0x1370 <__mulsf3_pse+0xa0>
    1350:	0c 94 01 09 	jmp	0x1202	; 0x1202 <__fp_inf>
    1354:	0c 94 4c 09 	jmp	0x1298	; 0x1298 <__fp_szero>
    1358:	5f 3f       	cpi	r21, 0xFF	; 255
    135a:	e4 f3       	brlt	.-8      	; 0x1354 <__mulsf3_pse+0x84>
    135c:	98 3e       	cpi	r25, 0xE8	; 232
    135e:	d4 f3       	brlt	.-12     	; 0x1354 <__mulsf3_pse+0x84>
    1360:	86 95       	lsr	r24
    1362:	77 95       	ror	r23
    1364:	67 95       	ror	r22
    1366:	b7 95       	ror	r27
    1368:	f7 95       	ror	r31
    136a:	e7 95       	ror	r30
    136c:	9f 5f       	subi	r25, 0xFF	; 255
    136e:	c1 f7       	brne	.-16     	; 0x1360 <__mulsf3_pse+0x90>
    1370:	fe 2b       	or	r31, r30
    1372:	88 0f       	add	r24, r24
    1374:	91 1d       	adc	r25, r1
    1376:	96 95       	lsr	r25
    1378:	87 95       	ror	r24
    137a:	97 f9       	bld	r25, 7
    137c:	08 95       	ret

0000137e <__udivmodsi4>:
    137e:	a1 e2       	ldi	r26, 0x21	; 33
    1380:	1a 2e       	mov	r1, r26
    1382:	aa 1b       	sub	r26, r26
    1384:	bb 1b       	sub	r27, r27
    1386:	fd 01       	movw	r30, r26
    1388:	0d c0       	rjmp	.+26     	; 0x13a4 <__udivmodsi4_ep>

0000138a <__udivmodsi4_loop>:
    138a:	aa 1f       	adc	r26, r26
    138c:	bb 1f       	adc	r27, r27
    138e:	ee 1f       	adc	r30, r30
    1390:	ff 1f       	adc	r31, r31
    1392:	a2 17       	cp	r26, r18
    1394:	b3 07       	cpc	r27, r19
    1396:	e4 07       	cpc	r30, r20
    1398:	f5 07       	cpc	r31, r21
    139a:	20 f0       	brcs	.+8      	; 0x13a4 <__udivmodsi4_ep>
    139c:	a2 1b       	sub	r26, r18
    139e:	b3 0b       	sbc	r27, r19
    13a0:	e4 0b       	sbc	r30, r20
    13a2:	f5 0b       	sbc	r31, r21

000013a4 <__udivmodsi4_ep>:
    13a4:	66 1f       	adc	r22, r22
    13a6:	77 1f       	adc	r23, r23
    13a8:	88 1f       	adc	r24, r24
    13aa:	99 1f       	adc	r25, r25
    13ac:	1a 94       	dec	r1
    13ae:	69 f7       	brne	.-38     	; 0x138a <__udivmodsi4_loop>
    13b0:	60 95       	com	r22
    13b2:	70 95       	com	r23
    13b4:	80 95       	com	r24
    13b6:	90 95       	com	r25
    13b8:	9b 01       	movw	r18, r22
    13ba:	ac 01       	movw	r20, r24
    13bc:	bd 01       	movw	r22, r26
    13be:	cf 01       	movw	r24, r30
    13c0:	08 95       	ret

000013c2 <_exit>:
    13c2:	f8 94       	cli

000013c4 <__stop_program>:
    13c4:	ff cf       	rjmp	.-2      	; 0x13c4 <__stop_program>
